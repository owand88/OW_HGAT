-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- All paid/unpaid, wacko/not wacko transactions on CCG / Coins items listed on UK site from UK/non-UK buyers to UK B2C/C2C sellers YTD
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
drop table p_uk_bc_t.CCG_Coins_txn;
create table p_uk_bc_t.CCG_Coins_txn as (
select
ck.created_dt--Date of transaction
,ck.transaction_id
,ck.item_id
,ck.sale_type
,case when ck.sale_type in( 1,2,5,8) then "Auction"
     when ck.sale_type in (7,9) then "Fixed Price"
     else "Other" end as sale_type_desc
,lstg.auct_title
,ck.item_price--Committed price (winning auction price or BIN price) for the transaction in listing currency (£)
,case when cast(ck.item_price as decimal(18,2)) between 0.00 and 5.00 then 'A. £0 - £5'
	  when cast(ck.item_price as decimal(18,2)) <=10.00 then 'B. £5 - £10'
	  when cast(ck.item_price as decimal(18,2)) <=20.00 then 'C. £10 - £20'
	  when cast(ck.item_price as decimal(18,2)) <=50.00 then 'D. £20 - £50'
	  when cast(ck.item_price as decimal(18,2)) <=100.00 then 'E. £50 - £100'
	  when cast(ck.item_price as decimal(18,2)) <= 250.00 then 'F. £100 - £250'
	  when cast(ck.item_price as decimal(18,2)) <= 500.00 then 'G. £250 - £500'
	  when cast(ck.item_price as decimal(18,2)) > 500.00 then 'H. £500 +'
	  else 'N/A' end as item_price_bucket
,cat.meta_categ_id
,cat.meta_categ_name
,cat.categ_lvl2_id
,cat.categ_lvl2_name
,lstg.auct_start_dt
,lstg.auct_end_dt
,ck.GMV_dt--Date when GMV is calculated
,ck.paid_ind
,ck.ck_wacko_yn
,ck.seller_id
,bbe.EU_B2C_C2C_flag
,sps.seller_standard as latest_seller_standard
,ck.buyer_id
,bbe.CBT_ind--Indicate if the seller is located in a different country than the buyer
,bbe.shpmt_free_shpng_ind
,bbe.cncl_yn_ind
,bbe.cncl_rqst_id
,case when bbe.cncl_rqst_id is not null and bbe.cncl_rqstr_type_cd = 1 then 'Seller'
	  when bbe.cncl_rqst_id is not null and bbe.cncl_rqstr_type_cd = 2 then 'Buyer'
	  else null end as cncl_requester
,bbe.cncl_rqst_rsn_cd--Cancel request reason
,case when bbe.cncl_rqst_rsn_cd=18 then "WRONG_SHIPPING_ADDRESS"
	  when bbe.cncl_rqst_rsn_cd=19 then "WRONG_SHIPPING_METHOD"
	  when bbe.cncl_rqst_rsn_cd=20 then "WRONG_PAYMENT_METHOD" 
	  else cr_lkp.rqst_rsn_desc end as rqst_rsn_desc
,bbe.cncl_clsr_rsn_cd--Cancel closure reason
,cc_lkp.clsr_rsn_desc
,sum(coalesce(ck.gmv_plan_usd,0)) as tot_GMV_USD
,sum(coalesce(ck.gmv_lc_amt,0)) as tot_GMV_GBP
,sum(coalesce(ck.quantity,0)) AS tot_BI

from access_views.dw_checkout_trans ck

inner join prs_restricted_v.slng_lstg_super_fact lstg
on ck.item_id=lstg.item_id

inner join (select meta_categ_name,meta_categ_id,categ_lvl2_id,categ_lvl2_name,categ_lvl3_id,categ_lvl3_name,categ_lvl4_id,categ_lvl4_name,leaf_categ_id,leaf_categ_name,site_id
			from access_views.dw_category_groupings 
			where sap_category_id not in (5,7,41,23,-999) 
    		group by 1,2,3,4,5,6,7,8,9,10,11) as cat																
on lstg.leaf_categ_id = cat.leaf_categ_id and cat.site_id = 3 

inner join dw_users  u
on ck.seller_id = u.user_id

inner join access_views.dw_cal_dt cal 
on ck.created_dt=cal.cal_dt and cal.age_for_rtl_year_id=0 and cal.age_for_rtl_week_id <=-1--Till 2022 RW30

left join prs_restricted_v.ebay_trans_rltd_event bbe
on ck.item_id=bbe.item_id and ck.transaction_id=bbe.trans_id

left join po_cncl_rqst_rsn_lkp cr_lkp
on bbe.cncl_rqst_rsn_cd=cr_lkp.rqst_rsn_cd

left join po_cncl_clsr_rsn_lkp cc_lkp
on bbe.cncl_clsr_rsn_cd=cc_lkp.clsr_rsn_cd

left join (select 
		   user_id
		   ,sps_slr_level_cd
		   ,case when sps_slr_level_cd = 1 then 'Top Rated' 
			when sps_slr_level_cd = 2 then 'Above Standard' 
			when sps_slr_level_cd = 3 then 'Standard' 
			when sps_slr_level_cd = 4 then 'Below Standard' 
			else 'No seller standard' end as seller_standard
		   ,last_eval_dt 
		   from prs_restricted_v.sps_level_metric_sum--ETRS (eBay Top Rated Seller)
		   where sps_eval_type_cd = 1 and sps_prgrm_id = 3--Seller Standard evaluation type= Effective; Seller Performance Standard Program ID=UK
		   group by 1,2,3,4 
		   qualify (row_number() over (partition by user_id order by last_eval_dt desc))=1) sps
on ck.seller_id = sps.user_id

where ck.site_id=3
and ck.slr_cntry_id = 3
and (cat.meta_categ_id=11116 or cat.categ_lvl2_id=2536)--Coins or CCG

group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30
)
;


-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- CCG Analysis
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

--Any repeat offenders in cancellation?
drop table p_uk_bc_t.top_buyer_cancel;
create table p_uk_bc_t.top_buyer_cancel as(
select 
buyer_id
,b.user_slctd_id as buyer_name
,case when CBT_ind=0 then 'UK' else 'Non-UK' end as buyer_country
,count(case when paid_ind=0 then buyer_id end) as unpaid_txn
,count(case when paid_ind=1 then buyer_id end) as paid_txn
,count(case when paid_ind=0 and cncl_yn_ind='Y' then buyer_id end) as unpaid_cancelled_txn
,count(case when paid_ind=1 and cncl_yn_ind='Y' then buyer_id end) as paid_cancelled_txn
,count(*) as tot_txn
,count(case when cncl_yn_ind='Y' then buyer_id end) as tot_cancelled_txn
,round(100*tot_cancelled_txn/tot_txn,2) as  cancelled_perc
,row_number() over (order by tot_cancelled_txn desc) as rank 
from p_uk_bc_t.CCG_Coins_txn a
left join access_views.dw_users b
on a.buyer_id=b.user_id
where categ_lvl2_id=2536
and ck_wacko_yn="N"
group by 1,2,3
having tot_cancelled_txn>0
qualify (row_number() over(order by tot_cancelled_txn desc))<=20
);


drop table if exists p_uk_bc_t.top_buyer_cancel_alsosell;
create table p_uk_bc_t.top_buyer_cancel_alsosell as(
select 
seller_id
,b.user_slctd_id as seller_name
,c.buyer_country as seller_country
,c.rank
--,EU_B2C_C2C_flag
,latest_seller_standard
,count(*) as transaction
,sum(tot_GMV_USD) as GMV
,sum(tot_BI) as BI
from p_uk_bc_t.CCG_Coins_txn a
left join access_views.dw_users b
on a.seller_id=b.user_id
inner join (select distinct buyer_id,rank,buyer_country from p_uk_bc_t.top_buyer_cancel) c--Top 20 buyers incurred cancellations
on a.seller_id=c.buyer_id
where 
categ_lvl2_id=2536
and ck_wacko_yn="N"
group by 1,2,3,4,5
);

--Top 20 buyers incurring cancellations (Export to Excel)
select 
a.rank
,a.buyer_id
,a.buyer_name
,a.buyer_country
,case when b.seller_id is not null then 1 else 0 end as also_sell_CCG
,a.unpaid_txn
,a.paid_txn
,a.unpaid_cancelled_txn
,a.paid_cancelled_txn
,a.tot_txn
,a.tot_cancelled_txn
,a.cancelled_perc
from p_uk_bc_t.top_buyer_cancel a
left join p_uk_bc_t.top_buyer_cancel_alsosell b
on a.buyer_id=b.seller_id
order by rank;


-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Coins Analysis
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

--Any repeat offenders in cancellation?
drop table p_uk_bc_t.top_buyer_cancel_Coin;
create table p_uk_bc_t.top_buyer_cancel_Coin as(
select 
buyer_id
,b.user_slctd_id as buyer_name
,case when CBT_ind=0 then 'UK' else 'Non-UK' end as buyer_country
,count(case when paid_ind=0 then buyer_id end) as unpaid_txn
,count(case when paid_ind=1 then buyer_id end) as paid_txn
,count(case when paid_ind=0 and cncl_yn_ind='Y' then buyer_id end) as unpaid_cancelled_txn
,count(case when paid_ind=1 and cncl_yn_ind='Y' then buyer_id end) as paid_cancelled_txn
,count(*) as tot_txn
,count(case when cncl_yn_ind='Y' then buyer_id end) as tot_cancelled_txn
,round(100*tot_cancelled_txn/tot_txn,2) as  cancelled_perc
,row_number() over (order by tot_cancelled_txn desc) as rank 
from p_uk_bc_t.CCG_Coins_txn a
left join access_views.dw_users b
on a.buyer_id=b.user_id
where meta_categ_id=11116
and ck_wacko_yn="N"
group by 1,2,3
having tot_cancelled_txn>0
qualify (row_number() over(order by tot_cancelled_txn desc))<=20
);


drop table if exists p_uk_bc_t.top_buyer_cancel_alsosell_Coin;
create table p_uk_bc_t.top_buyer_cancel_alsosell_Coin as(
select 
seller_id
,b.user_slctd_id as seller_name
,c.buyer_country as seller_country
,c.rank
--,EU_B2C_C2C_flag
,latest_seller_standard
,count(*) as transaction
,sum(tot_GMV_USD) as GMV
,sum(tot_BI) as BI
from p_uk_bc_t.CCG_Coins_txn a
left join access_views.dw_users b
on a.seller_id=b.user_id
inner join (select distinct buyer_id,rank,buyer_country from p_uk_bc_t.top_buyer_cancel_Coin) c--Top 20 buyers incurred cancellations
on a.seller_id=c.buyer_id
where 
meta_categ_id=11116
and ck_wacko_yn="N"
group by 1,2,3,4,5
);

--Top 20 buyers incurring cancellations (Export to Excel)
select 
a.rank
,a.buyer_id
,a.buyer_name
,a.buyer_country
,case when b.seller_id is not null then 1 else 0 end as also_sell_CCG
,a.unpaid_txn
,a.paid_txn
,a.unpaid_cancelled_txn
,a.paid_cancelled_txn
,a.tot_txn
,a.tot_cancelled_txn
,a.cancelled_perc
from p_uk_bc_t.top_buyer_cancel_Coin a
left join p_uk_bc_t.top_buyer_cancel_alsosell_Coin b
on a.buyer_id=b.seller_id
order by rank;






















