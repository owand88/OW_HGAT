/*Aim: Create a report for H&G to acquire an overview of weekly performance*/

--select * from P_CSI_TBS_T.UKI_FINAL limit 10
--select distinct(inventory_prop) from P_CSI_TBS_T.UKI_FINAL
--select * from  P_SLR_TRACKER_T.PP_CouponHist_1_coupon_sum1  limit 10
--select distinct(promotion_type) from P_SLR_TRACKER_T.seller_union_all_hist 
--select * from P_WAJ_T.Forecast_UK_Verticals1_v1 limit 10
--select * from P_Waj_T.Q32021_inv_phasing limit 10
--select promotion_type,min(retail_year) from P_SLR_TRACKER_T.seller_union_all_hist group by 1--Coded Coupons (seller-initiated) only launched in 2021


------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
/********************************************************************************************************LW All Vertical (Focused Only)********************************************************************************************************/
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
/*Inventory Prop Focused*/
drop table if exists p_uk_bc_t.all_vert_focused;
create table p_uk_bc_t.all_vert_focused as (
select a.*,b.LYLW_GMV,c.focused_forecast 
from
--LW
(select vertical, retail_year, retail_week, sum(GMV) as LW_GMV from P_CSI_TBS_T.UKI_FINAL where inventory_prop like ('%Focus%') group by 1,2,3)a

inner join (select distinct retail_year, retail_week, age_for_rtl_week_id, age_for_rtl_qtr_id, age_for_rtl_year_id, rtl_qtr_of_rtl_year_id from access_views.dw_cal_dt where age_for_rtl_year_id=0) cal
on a.retail_year=cal.retail_year and a.retail_week=cal.retail_week and cal.age_for_rtl_week_id=-1

--LYLW
left join (select vertical, retail_week, sum(GMV) as LYLW_GMV from P_CSI_TBS_T.UKI_FINAL where retail_year = 2021 and inventory_prop like ('%Focus%') group by 1,2) b 
on a.vertical = b.vertical and a.retail_week = b.retail_week 

--Forecast
left join (
	select vertical,retail_week,sum(forecast) as focused_forecast
	from
	(select 
	a.vertical
	,a.retail_week
	,b.initiative as inventory_prop 
	,b.phasing_ratio * a.GMV_Forecast as forecast
	from P_WAJ_T.Forecast_UK_Verticals1_v1 a 
	left join P_Waj_T.Q32021_inv_phasing b 
	on a.vertical = b.vertical and a.retail_week = b.retail_week
	where b.focused ='Focused')
	group by 1,2
) c 
on a.vertical = c.vertical and a.retail_week = c.retail_week
); 

/*All B2C Dom*/

drop table if exists p_uk_bc_t.all_vert;
create table p_uk_bc_t.all_vert as (
select 
a.retail_year
,a.retail_week
,a.vertical
,a.GMV_B2C_DOM
,b.LY_GMV_B2C_DOM
,forc.GMV_forecast
from 
--LW
(select * from P_UK_FPA_T.EU_FUNNEL where rev_rollup = 'UK' and vertical <> 'Total') a
inner join (select distinct retail_year, retail_week, age_for_rtl_week_id, age_for_rtl_qtr_id, age_for_rtl_year_id, rtl_qtr_of_rtl_year_id from access_views.dw_cal_dt where age_for_rtl_year_id=0) cal
on a.retail_year=cal.retail_year and a.retail_week=cal.retail_week and cal.age_for_rtl_week_id=-1 

--LYLW
left join (
	select
	f.retail_year
	,f.retail_week
	,f.retail_wk_end_date	
	,rev_rollup
	,vertical
	,GMV_B2C_DOM as LY_GMV_B2C_DOM
	from P_UK_FPA_T.EU_FUNNEL as f
	inner join (select retail_year, retail_week, retail_wk_end_date from access_views.dw_cal_dt where age_for_rtl_week_id = -1 -52 group by 1,2,3) as cal---53
	on f.retail_wk_end_date = cal.retail_wk_end_date
) b
on a.rev_rollup = b.rev_rollup and a.vertical = b.vertical	
	
--Forecast
left join P_WAJ_T.Forecast_UK_Verticals1_v1 forc
on a.vertical=forc.vertical and a.retail_week=forc.retail_week
);

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
/*****************************************************************************************************Weekly Summary (Focused & Protrader)*****************************************************************************************************/
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

drop table if exists p_uk_bc_t.HG_summary;
create table p_uk_bc_t.HG_summary as (
select
cal.age_for_rtl_week_id
,cal.age_for_rtl_qtr_id
,concat('Q',cal.rtl_qtr_of_rtl_year_id) as retail_quarter
,a.retail_year
,a.retail_week
,a.vertical
,a.inventory_prop
,case when a.inventory_prop like ('%Focus%') then 'Focused'
      when a.inventory_prop like ('%Scal%') then 'Scaling'
      when a.inventory_prop like ('%Protrader%') then 'Protrader'
      when a.inventory_prop like ('%Other%') then 'ROnew_vertical'
      else 'NA'
end as focus_flag
,a.LW_GMV
,aa.LLW_GMV
,b.LYLW_GMV
,c.L2YLW_GMV

,forc.forecast

,d.LW_seller_coupon_GMV
,e.LYLW_seller_coupon_GMV 
,f.L2YLW_seller_coupon_GMV


,g.LW_seller_offers_GMV
,h.LYLW_seller_offers_GMV
,i.L2YLW_seller_offers_GMV

,j.LW_ebay_funded_coupon_GMV
,k.LYLW_ebay_funded_coupon_GMV
,l.L2YLW_ebay_funded_coupon_GMV

--,z.TTL_Impressions as Impressions
--,z.TTL_VI as Viewed_Items
--,z.Funnel_BI

,a.LW_BI

from
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- GMV
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--TYLW GMV (2022)
(select vertical, retail_year, retail_week, inventory_prop, sum(GMV) as LW_GMV, sum(BI) as LW_BI from P_CSI_TBS_T.UKI_FINAL where retail_year = 2022 and vertical = 'Home & Garden' and inventory_prop <> 'OTHERS' group by 1,2,3,4) a

left join (select distinct retail_year, retail_week, age_for_rtl_week_id, age_for_rtl_qtr_id, age_for_rtl_year_id, rtl_qtr_of_rtl_year_id from access_views.dw_cal_dt where age_for_rtl_year_id=0) cal
on a.retail_year=cal.retail_year and a.retail_week=cal.retail_week

--TYLLW GMV (2022 wOw)
left join (select vertical, retail_week+1 as retail_week, inventory_prop, sum(GMV) as LLW_GMV from P_CSI_TBS_T.UKI_FINAL where retail_year = 2022 group by 1,2,3) aa 
on a.vertical = aa.vertical and a.retail_week = aa.retail_week and a.inventory_prop = aa.inventory_prop

--LYLW GMV (2021)
left join (select vertical, retail_week-1 as retail_week, inventory_prop, sum(GMV) as LYLW_GMV from P_CSI_TBS_T.UKI_FINAL where retail_year = 2021 group by 1,2,3) b 
on a.vertical = b.vertical and a.retail_week = b.retail_week and a.inventory_prop = b.inventory_prop

--L2YLW GMV (2020)
left join (select vertical, retail_week-1 as retail_week, inventory_prop, sum(GMV) as L2YLW_GMV from P_CSI_TBS_T.UKI_FINAL where retail_year = 2020 group by 1,2,3) c 
on a.vertical = c.vertical and a.retail_week = c.retail_week and a.inventory_prop = c.inventory_prop


------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Seller Coupon GMV
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--TY coupon GMV (2022)
left join (
select vertical
,retail_week
,inventory_prop
,sum(b2c_gmb_usd_plan) as LW_seller_coupon_GMV
from  P_SLR_TRACKER_T.PP_CouponHist_1_coupon_sum1 
where retail_year = 2022 
and focus_flag in ('Focused','Protrader') 
and promotion_type = 'seller coupon' 
and vertical = 'Home & Garden'
group by 1,2,3) d
on a.inventory_prop = d.inventory_prop and a.retail_week = d.retail_week

--LY coupon GMV (2021)
left join (
select vertical
,retail_week-1 as retail_week
,inventory_prop
,sum(b2c_gmb_usd_plan) as LYLW_seller_coupon_GMV 
from  P_SLR_TRACKER_T.PP_CouponHist_1_coupon_sum1 
where retail_year = 2021 
and focus_flag in ('Focused','Protrader') 
and promotion_type = 'seller coupon' 
and vertical = 'Home & Garden'
group by 1,2,3) e 
on a.inventory_prop = e.inventory_prop and a.retail_week = e.retail_week

--L2Y coupon GMV (2020)
left join (
select vertical
,retail_week-1 as retail_week
,inventory_prop
,sum(b2c_gmb_usd_plan) as L2YLW_seller_coupon_GMV
from  P_SLR_TRACKER_T.PP_CouponHist_1_coupon_sum1 
where retail_year = 2020 
and focus_flag in ('Focused','Protrader') 
and promotion_type = 'seller coupon' 
and vertical = 'Home & Garden'
group by 1,2,3) f
on a.inventory_prop = f.inventory_prop and a.retail_week = f.retail_week

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Seller Offers GMV (DAILY DEALS, SME, RPP, CODED COUPONS, STP)
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--TY seller offer GMV (2022)
left join (
select retail_year,retail_week,vertical,inventory_prop,sum(seller_offer_GMV) as LW_seller_offers_GMV
from (
	select 
	retail_year
	,retail_week
	,vertical
	,inventory_prop
	,sum(promotion_GMV) as seller_offer_GMV
	from P_SLR_TRACKER_T.seller_union_all_hist 
	where retail_year = 2022
	and vertical = 'Home & Garden' 
	and inventory_prop_flag in ('Focused','Protrader') 
	and promotion_type in ('DAILY DEALS','SME','RPP','CODED COUPONS')
	group by 1,2,3,4

	union all

	select
	retail_year
	,retail_week_2 as retail_week
	,STP_Vertical as vertical
	,inventory_prop
	,sum(STP_GMV) as seller_offer_GMV
	from P_SLR_TRACKER_T.STP_FINAL_HIST
	where retail_year = 2022
	and STP_vertical = 'Home & Garden' 
	and inv_prop_flag in ('Focused','Protrader') 
	group by 1,2,3,4)
group by 1,2,3,4
) g
on a.vertical = g.vertical and a.inventory_prop = g.inventory_prop and a.retail_week = g.retail_week

--LY seller offer GMV (2021)
left join (
select retail_year,retail_week,vertical,inventory_prop,sum(seller_offer_GMV) as LYLW_seller_offers_GMV
from (
	select 
	retail_year
	,retail_week-1 as retail_week
	,vertical
	,inventory_prop
	,sum(promotion_GMV) as seller_offer_GMV
	from P_SLR_TRACKER_T.seller_union_all_hist 
	where retail_year = 2021
	and vertical = 'Home & Garden' 
	and inventory_prop_flag in ('Focused','Protrader')  
	and promotion_type in ('DAILY DEALS','SME','RPP','CODED COUPONS')
	group by 1,2,3,4

	union all

	select
	retail_year
	,retail_week_2-1 as retail_week
	,STP_Vertical as vertical
	,inventory_prop
	,sum(STP_GMV) as seller_offer_GMV
	from P_SLR_TRACKER_T.STP_FINAL_HIST
	where retail_year = 2021
	and STP_vertical = 'Home & Garden' 
	and inv_prop_flag in ('Focused','Protrader') 
	group by 1,2,3,4)
group by 1,2,3,4
) h
on a.vertical = h.vertical and a.inventory_prop = h.inventory_prop and a.retail_week = h.retail_week

--L2Y seller offer GMV (2020)
left join (
select retail_year,retail_week,vertical,inventory_prop,sum(seller_offer_GMV) as L2YLW_seller_offers_GMV
from (
	select 
	retail_year
	,retail_week-1 as retail_week
	,vertical
	,inventory_prop
	,sum(promotion_GMV) as seller_offer_GMV
	from P_SLR_TRACKER_T.seller_union_all_hist 
	where retail_year = 2020
	and vertical = 'Home & Garden' 
	and inventory_prop_flag in ('Focused','Protrader')  
	and promotion_type in ('DAILY DEALS','SME','RPP','CODED COUPONS')
	group by 1,2,3,4
	
	union all

	select
	retail_year
	,retail_week_2-1 as retail_week
	,STP_Vertical as vertical
	,inventory_prop
	,sum(STP_GMV) as seller_offer_GMV
	from P_SLR_TRACKER_T.STP_FINAL_HIST
	where retail_year = 2020
	and STP_vertical = 'Home & Garden' 
	and inv_prop_flag in ('Focused','Protrader') 
	group by 1,2,3,4)
group by 1,2,3,4
) i
on a.vertical = i.vertical and a.inventory_prop = i.inventory_prop and a.retail_week = i.retail_week

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- eBay funded Coupon GMV (Site wise / Price take over)
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--TY ebay funded coupon GMV (2022)
left join (
select vertical
,retail_week
,inventory_prop
,sum(b2c_gmb_usd_plan) as LW_ebay_funded_coupon_GMV
from  P_SLR_TRACKER_T.PP_CouponHist_1_coupon_sum1 
where retail_year = 2022 
and focus_flag in ('Focused','Protrader') 
and promotion_type = 'ebay funded' 
and vertical = 'Home & Garden'
group by 1,2,3) j
on a.inventory_prop = j.inventory_prop and a.retail_week = j.retail_week

--LY ebay funded coupon GMV (2021)
left join (
select vertical
,retail_week-1 as retail_week
,inventory_prop
,sum(b2c_gmb_usd_plan) as LYLW_ebay_funded_coupon_GMV 
from  P_SLR_TRACKER_T.PP_CouponHist_1_coupon_sum1 
where retail_year = 2021 
and focus_flag in ('Focused','Protrader') 
and promotion_type = 'ebay funded' 
and vertical = 'Home & Garden'
group by 1,2,3) k 
on a.inventory_prop = k.inventory_prop and a.retail_week = k.retail_week

--L2Y ebay funded coupon GMV (2020)
left join (
select vertical
,retail_week-1 as retail_week
,inventory_prop
,sum(b2c_gmb_usd_plan) as L2YLW_ebay_funded_coupon_GMV
from  P_SLR_TRACKER_T.PP_CouponHist_1_coupon_sum1 
where retail_year = 2020 
and focus_flag in ('Focused','Protrader')  
and promotion_type = 'ebay funded' 
and vertical = 'Home & Garden'
group by 1,2,3) l
on a.inventory_prop = l.inventory_prop and a.retail_week = l.retail_week

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Forecast
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
left join (
select 
a.vertical
,a.retail_week
,b.initiative as inventory_prop 
,b.phasing_ratio * a.GMV_Forecast as forecast
from P_WAJ_T.Forecast_UK_Verticals1_v1 a 
left join P_Waj_T.Q32021_inv_phasing b 
on a.vertical = b.vertical and a.retail_week = b.retail_week
where a.vertical = 'Home & Garden'
and b.focused <> 'Core'
) forc 
on a.vertical = forc.vertical and a.retail_week = forc.retail_week and a.inventory_prop = forc.inventory_prop

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Funnel  (Pending Holly updating Q1 2022 Inv Prop)
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
/*Funnel metrics
left join (
select 
retail_year
,retail_week
,new_vertical
,inventory_prop
,(sum(SRP_IMP_1)+sum(OFF_EBAY_SRP_1) + sum(Store_IMP_1)) as TTL_Impressions
,sum(TTL_VI) as TTL_VI 
,sum(BI) as Funnel_BI
from p_hroon_t.vrtcl_funnel_final
where retail_year = 2022 
and new_vertical = 'Home & Garden' 
and inventory_prop like ('%Focus%') or inventory_prop like ('%Protrader%')
group by 1,2,3,4) z 
on a.vertical = z.new_vertical and a.retail_week = z.retail_week and a.inventory_prop = z.inventory_prop 
*/
);


------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
/*****************************************************************************************************************Seller Coupon****************************************************************************************************************/
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
drop table if exists p_uk_bc_t.HG_summary_seller_coupon;
create table p_uk_bc_t.HG_summary_seller_coupon as 
(
select
cal.age_for_rtl_week_id
,cal.age_for_rtl_qtr_id
,concat('Q',cal.rtl_qtr_of_rtl_year_id) as retail_quarter
,cal.age_for_rtl_year_id
,a.retail_year
,a.retail_week
,a.coupon_name
,a.slr_id
,b.user_slctd_id
,case when a.inventory_prop = 'OTHERS' then 'Core' 
	  when a.inventory_prop is null then 'NA' 
	  else inventory_prop end as inv_prop
,a.focus_flag
,sum(a.gmb_usd_plan) as coupon_gmb
,sum(a.qty_bght) as bi
,sum(a.contra_usd_plan) as coupon_spend
from P_SLR_TRACKER_T.PP_CouponHist_1_coupon_sum1 a
left join access_views.dw_users b 
on a.slr_id=b.user_id  
inner join (select distinct retail_year,retail_week,age_for_rtl_week_id,age_for_rtl_qtr_id,age_for_rtl_year_id,rtl_qtr_of_rtl_year_id from access_views.dw_cal_dt where age_for_rtl_year_id between -1 and 0) cal
on a.retail_year=cal.retail_year and a.retail_week=cal.retail_week
where vertical = 'Home & Garden' and promotion_type='seller coupon'
group by 1,2,3,4,5,6,7,8,9,10,11
);

--Historic seller coupon description
drop table if exists p_uk_bc_t.HG_summary_seller_coupon_his;
create table p_uk_bc_t.HG_summary_seller_coupon_his as(
select cal.age_for_rtl_week_id,cal.age_for_rtl_qtr_id,cal.age_for_rtl_year_id,a.retail_year, a.retail_week, a.promotion_type, a.coupon_name, a.coupon_desc, a.discount_offer, a.start_date, a.end_date, datediff(a.end_date, a.start_date)+1 as promo_duration_day, sum(a.B2C_GMB_USD_PLAN) as GMB
from P_SLR_TRACKER_T.PP_CouponHist_1_coupon_sum1 a
inner join (select distinct retail_year,retail_week,age_for_rtl_week_id,age_for_rtl_qtr_id,age_for_rtl_year_id from access_views.dw_cal_dt where age_for_rtl_year_id between -2 and 0) cal
on a.retail_year=cal.retail_year and a.retail_week=cal.retail_week
where a.promotion_type = 'seller coupon' and cal.age_for_rtl_week_id<=-1
group by 1,2,3,4,5,6,7,8,9,10,11,12);

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
/************************************************************************************************Deep dive of inventory prop at L3 level History************************************************************************************************/
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
drop table if exists p_uk_bc_t.HG_summary_L3_his;
create table p_uk_bc_t.HG_summary_L3_his as(
select 
cal.age_for_rtl_week_id
,cal.age_for_rtl_qtr_id
,cal.age_for_rtl_year_id
,cal.rtl_qtr_of_rtl_year_id
,a.retail_year
,a.retail_week
,case when a.inventory_prop = 'OTHERS' then 'Core' 
	  when a.inventory_prop is null then 'NA' 
	  else a.inventory_prop end as inventory_prop
,a.categ_lvl2_id
,a.categ_lvl2_name
,a.categ_lvl3_id
,a.categ_lvl3_name
,sum(GMV) as GMV
,sum(BI) as BI
from  P_CSI_TBS_T.UKI_FINAL_v2_trading a--created to reflect current category hierarchy of listing
inner join (select distinct retail_year, retail_week, age_for_rtl_week_id, age_for_rtl_qtr_id, age_for_rtl_year_id, rtl_qtr_of_rtl_year_id from access_views.dw_cal_dt where age_for_rtl_year_id between -2 and 0) cal
on a.retail_year=cal.retail_year and a.retail_week=cal.retail_week
where a.vertical = 'Home & Garden' 
group by 1,2,3,4,5,6,7,8,9,10,11);

--Summary with Yo2Y
drop table if exists p_uk_bc_t.HG_summary_L3;
create table p_uk_bc_t.HG_summary_L3 as(
select 
cal.age_for_rtl_week_id
,cal.age_for_rtl_qtr_id
,concat('Q',cal.rtl_qtr_of_rtl_year_id) as retail_quarter
,a.retail_year
,a.retail_week
,case when a.inventory_prop = 'OTHERS' then 'Core' 
	  when a.inventory_prop is null then 'NA' 
	  else a.inventory_prop end as inventory_prop
,a.categ_lvl2_id
,a.categ_lvl2_name
,a.categ_lvl3_id
,a.categ_lvl3_name
,a.LW_GMV
,b.L2YLW_GMV
,c.LYLW_GMV
,a.LW_BI
,b.L2YLW_BI
,c.LYLW_BI 
from
(select retail_year, retail_week, inventory_prop, categ_lvl2_id, categ_lvl2_name, categ_lvl3_id, categ_lvl3_name, sum(GMV) as LW_GMV, sum(BI) as LW_BI from p_uk_bc_t.HG_summary_L3_his where age_for_rtl_week_id=-1 group by 1,2,3,4,5,6,7) a
left join 
(select retail_year, retail_week, inventory_prop, categ_lvl2_id, categ_lvl2_name, categ_lvl3_id, categ_lvl3_name, sum(GMV) as L2YLW_GMV, sum(BI) as L2YLW_BI from p_uk_bc_t.HG_summary_L3_his where age_for_rtl_week_id=-105 group by 1,2,3,4,5,6,7) b
on a.inventory_prop=b.inventory_prop and a.categ_lvl3_id=b.categ_lvl3_id and a.retail_week=b.retail_week-1
left join 
(select retail_year, retail_week, inventory_prop, categ_lvl2_id, categ_lvl2_name, categ_lvl3_id, categ_lvl3_name, sum(GMV) as LYLW_GMV, sum(BI) as LYLW_BI from p_uk_bc_t.HG_summary_L3_his where age_for_rtl_week_id=-52 group by 1,2,3,4,5,6,7) c
on a.inventory_prop=c.inventory_prop and a.categ_lvl3_id=c.categ_lvl3_id and a.retail_week=c.retail_week-1
left join 
(select distinct retail_year, retail_week, age_for_rtl_week_id, age_for_rtl_qtr_id, rtl_qtr_of_rtl_year_id from access_views.dw_cal_dt) cal
on a.retail_year=cal.retail_year and a.retail_week=cal.retail_week);

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
/***********************************************************************************************************Seller Segment Reporting***********************************************************************************************************/
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Seller level GMV ((L52W)
drop table if exists p_uk_bc_t.HG_summary_slr;
create table p_uk_bc_t.HG_summary_slr as(
select 
base.age_for_rtl_week_id
,base.age_for_rtl_qtr_id
,base.age_for_rtl_year_id
,base.rtl_qtr_of_rtl_year_id
,base.retail_year
,base.retail_week 
,base.seller_id
,usr.user_slctd_id as seller_name
,case when base.inventory_prop = 'OTHERS' then 'Core' 
	  when base.inventory_prop is null then 'NA' 
	  else base.inventory_prop end as inventory_prop

,case when focus.seller_id is not null and pt_focus.seller_id is not null then "CM & PT Focused Seller" 
	  when focus.seller_id is not null and pt_focus.seller_id is null then "CM Focused Seller"
	  when focus.seller_id is null and pt_focus.seller_id is not null then "PT Focused Seller" else "Not Focused Seller" end as seller_type

,case when focus.seller_id is not null and pt_focus.seller_id is not null then concat(focus.category_manager," & ",pt_focus.protrader) 
	  when focus.seller_id is not null and pt_focus.seller_id is null then focus.category_manager
	  when focus.seller_id is null and pt_focus.seller_id is not null then pt_focus.protrader else "No Focus Manager" end as focused_manager
	  
,sum(base.GMV) as GMV
,sum(base.BI) as BI
,count(distinct base.item_id) as converted_lstg
,count(distinct base.buyer_id) as buyer_cnt

from P_CSI_TBS_T.UKI_Final_V1_trading_item base

inner join access_views.dw_users usr
on base.seller_id = usr.user_id 

left join (select seller_id, max(am_name) as category_manager from p_awang_ops_t.seller_ops_83 where seller_vertical='Home & Garden' group by 1) focus
on base.seller_id=focus.seller_id 

left join (select seller_id, max(pt_name) as protrader from P_UK_BC_T.PT_focused_Q421 group by 1) pt_focus
on base.seller_id=pt_focus.seller_id 

where base.vertical='Home & Garden'
and base.age_for_rtl_week_id between -52 and -1
group by 1,2,3,4,5,6,7,8,9,10,11);


-- H&G Live Listing on UK site from LW top 1000 UK B2C seller (L4W)
drop table if exists P_InventoryPlanning_T.HG_summary_ll;
create table P_InventoryPlanning_T.HG_summary_ll as(
select 
cal.age_for_rtl_week_id
,cal.age_for_rtl_qtr_id
,cal.age_for_rtl_year_id
,cal.rtl_qtr_of_rtl_year_id
,cal.retail_year
,cal.retail_week 
,base.item_id
,case when base.inventory_prop = 'OTHERS' then 'Core' 
	  when base.inventory_prop is null then 'NA' 
	  else base.inventory_prop end as inventory_prop
,base.focus_flag
,lstg.slr_id as seller_id
,usr.user_slctd_id as seller_name
,lstg.auct_start_dt
,lstg.auct_end_dt
,case when focus.seller_id is not null and pt_focus.seller_id is not null then "CM & PT Focused Seller" 
	  when focus.seller_id is not null and pt_focus.seller_id is null then "CM Focused Seller"
	  when focus.seller_id is null and pt_focus.seller_id is not null then "PT Focused Seller" else "Not Focused Seller" end as seller_type

,case when focus.seller_id is not null and pt_focus.seller_id is not null then concat(focus.category_manager," & ",pt_focus.protrader) 
	  when focus.seller_id is not null and pt_focus.seller_id is null then focus.category_manager
	  when focus.seller_id is null and pt_focus.seller_id is not null then pt_focus.protrader else "No Focus Manager" end as focused_manager
	  
from p_awang_ops_t.item_invent_lstg base--UK seller listing base

inner join prs_restricted_v.slng_lstg_super_fact lstg
on base.item_id=lstg.item_id

inner join (
	select distinct(seller_id) from
	(select seller_id,sum(GMV) as tot_GMV 
	from p_uk_bc_t.HG_summary_slr
	where age_for_rtl_week_id=-1
	group by 1
	qualify (row_number() over (order by tot_GMV desc))<=1000)--Only include the top 1000 sellers in LW
	) top
on lstg.slr_id=top.seller_id 	

inner join access_views.dw_cal_dt cal 
on lstg.auct_start_dt < cal.cal_dt and lstg.auct_end_dt >= cal.cal_dt 
and cal.age_for_rtl_week_id between -4 and -1

inner join access_views.dw_users usr
on lstg.slr_id = usr.user_id

left join (select seller_id, max(am_name) as category_manager from p_awang_ops_t.seller_ops_83 where seller_vertical='Home & Garden' group by 1) focus
on lstg.slr_id=focus.seller_id 

left join (select seller_id, max(pt_name) as protrader from P_UK_BC_T.PT_focused_Q421 group by 1) pt_focus
on lstg.slr_id=pt_focus.seller_id 

where base.new_vertical='Home & Garden'
and lstg.item_site_id = 3--UK site
and lstg.auct_type_code not in (10,15));


--Combine to show top seller performance of last 4 weeks and rolling 52 weeks GMV/BI
drop table if exists P_uk_bc_T.HG_summary_slr_l4w;
create table P_uk_bc_T.HG_summary_slr_l4w as (
select 
L4W.*
,LL.LW_LL
,LL.LW_1_LL
,LL.LW_2_LL
,LL.LW_3_LL
,roll52.Rolling52W_GMV
,roll52.Rolling52W_BI

from
	(select distinct(seller_id) from
	(select seller_id,sum(GMV) as tot_GMV 
	from p_uk_bc_t.HG_summary_slr
	where age_for_rtl_week_id=-1
	group by 1
	qualify (row_number() over (order by tot_GMV desc))<=1000)--Only include the top 1000 sellers in LW
	) top

-- Converted
inner join

	(select 
	seller_id
	,seller_name
	,seller_type
	,focused_manager
	,inventory_prop
	,sum(case when age_for_rtl_week_id=-1 then GMV end) as LW_GMV
	,sum(case when age_for_rtl_week_id=-2 then GMV end) as LW_1_GMV
	,sum(case when age_for_rtl_week_id=-3 then GMV end) as LW_2_GMV
	,sum(case when age_for_rtl_week_id=-4 then GMV end) as LW_3_GMV
	,sum(case when age_for_rtl_week_id=-1 then BI end) as LW_BI
	,sum(case when age_for_rtl_week_id=-2 then BI end) as LW_1_BI
	,sum(case when age_for_rtl_week_id=-3 then BI end) as LW_2_BI
	,sum(case when age_for_rtl_week_id=-4 then BI end) as LW_3_BI
	,sum(case when age_for_rtl_week_id=-1 then converted_lstg end) as LW_converted_lstg
	,sum(case when age_for_rtl_week_id=-2 then converted_lstg end) as LW_1_converted_lstg
	,sum(case when age_for_rtl_week_id=-3 then converted_lstg end) as LW_2_converted_lstg
	,sum(case when age_for_rtl_week_id=-4 then converted_lstg end) as LW_3_converted_lstg
	,sum(case when age_for_rtl_week_id=-1 then buyer_cnt end) as LW_buyer_cnt
	,sum(case when age_for_rtl_week_id=-2 then buyer_cnt end) as LW_1_buyer_cnt
	,sum(case when age_for_rtl_week_id=-3 then buyer_cnt end) as LW_2_buyer_cnt
	,sum(case when age_for_rtl_week_id=-4 then buyer_cnt end) as LW_3_buyer_cnt
	from p_uk_bc_t.HG_summary_slr 
	where age_for_rtl_week_id between -4 and -1
	group by 1,2,3,4,5
	) L4W

on top.seller_id=L4W.seller_id

-- Live Listing
left join

	(select 
	seller_id
	,seller_name
	,seller_type
	,focused_manager
	,inventory_prop
	,count(distinct (case when age_for_rtl_week_id=-1 then item_id end)) as LW_LL
	,count(distinct (case when age_for_rtl_week_id=-2 then item_id end)) as LW_1_LL
	,count(distinct (case when age_for_rtl_week_id=-3 then item_id end)) as LW_2_LL
	,count(distinct (case when age_for_rtl_week_id=-4 then item_id end)) as LW_3_LL
	from P_InventoryPlanning_T.HG_summary_ll
	where age_for_rtl_week_id between -4 and -1
	group by 1,2,3,4,5) LL
	
on L4W.seller_id=LL.seller_id and L4W.inventory_prop=LL.inventory_prop

--Rolling 52 weeks GMV/BI
left join

	(select 
	seller_id
	,seller_name
	,seller_type
	,focused_manager
	,inventory_prop
	,sum(GMV) as Rolling52W_GMV
	,sum(BI) as Rolling52W_BI
	from p_uk_bc_t.HG_summary_slr 
	where age_for_rtl_week_id between -52 and -1
	group by 1,2,3,4,5) roll52
	
on L4W.seller_id=roll52.seller_id and L4W.inventory_prop=roll52.inventory_prop
);

-- L52W GMV/BI data connection of top 1000 sellers created for Poppy to drive her own excel files
drop table if exists P_uk_bc_T.poppy_top1000;
create table P_uk_bc_T.poppy_top1000 as (
select 
a.seller_id
,a.seller_name
,a.seller_type
,a.retail_year
,a.retail_week 
,a.inventory_prop
,a.GMV
,a.BI
from p_uk_bc_t.HG_summary_slr a
inner join (
	select distinct(seller_id) from
	(select seller_id,sum(GMV) as tot_GMV 
	from p_uk_bc_t.HG_summary_slr
	where age_for_rtl_week_id=-1
	group by 1
	qualify (row_number() over (order by tot_GMV desc))<=1000)--Only include the top 1000 sellers in LW
	) top
on a.seller_id=top.seller_id 	
order by a.seller_id,a.age_for_rtl_week_id desc
);


-- /********************************************************************************************************OLD CODE for Yo2Y LAPPING********************************************************************************************************/
-- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- /********************************************************************************************************LW All Vertical (Focused Only)********************************************************************************************************/
-- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- /*Inventory Prop Focused*/
-- drop table if exists p_uk_bc_t.all_vert_focused;
-- create table p_uk_bc_t.all_vert_focused as (
-- select a.*,b.L2YLW_GMV,c.focused_forecast 
-- from
-- --LW
-- (select vertical, retail_year, retail_week, sum(GMV) as LW_GMV from P_CSI_TBS_T.UKI_FINAL where inventory_prop like ('%Focus%') group by 1,2,3)a

-- inner join (select distinct retail_year, retail_week, age_for_rtl_week_id, age_for_rtl_qtr_id, age_for_rtl_year_id, rtl_qtr_of_rtl_year_id from access_views.dw_cal_dt where age_for_rtl_year_id=0) cal
-- on a.retail_year=cal.retail_year and a.retail_week=cal.retail_week and cal.age_for_rtl_week_id=-1

-- --L2YLW
-- left join (select vertical, retail_week-1 as retail_week, sum(GMV) as L2YLW_GMV from P_CSI_TBS_T.UKI_FINAL where retail_year = 2020 and inventory_prop like ('%Focus%') group by 1,2) b 
-- on a.vertical = b.vertical and a.retail_week = b.retail_week 

-- --Forecast
-- left join (
-- 	select vertical,retail_week,sum(forecast) as focused_forecast
-- 	from
-- 	(select 
-- 	a.vertical
-- 	,a.retail_week
-- 	,b.initiative as inventory_prop 
-- 	,b.phasing_ratio * a.GMV_Forecast as forecast
-- 	from P_WAJ_T.Forecast_UK_Verticals1_v1 a 
-- 	left join P_Waj_T.Q32021_inv_phasing b 
-- 	on a.vertical = b.vertical and a.retail_week = b.retail_week
-- 	where b.focused ='Focused')
-- 	group by 1,2
-- ) c 
-- on a.vertical = c.vertical and a.retail_week = c.retail_week
-- ); 

-- /*All B2C Dom*/

-- drop table if exists p_uk_bc_t.all_vert;
-- create table p_uk_bc_t.all_vert as (
-- select 
-- a.retail_year
-- ,a.retail_week
-- ,a.vertical
-- ,a.GMV_B2C_DOM
-- ,b.L2Y_GMV_B2C_DOM
-- ,forc.GMV_forecast
-- from 
-- --LW
-- (select * from P_UK_FPA_T.EU_FUNNEL where rev_rollup = 'UK' and vertical <> 'Total') a
-- inner join (select distinct retail_year, retail_week, age_for_rtl_week_id, age_for_rtl_qtr_id, age_for_rtl_year_id, rtl_qtr_of_rtl_year_id from access_views.dw_cal_dt where age_for_rtl_year_id=0) cal
-- on a.retail_year=cal.retail_year and a.retail_week=cal.retail_week and cal.age_for_rtl_week_id=-1 

-- --L2YLW
-- left join (
-- 	select
-- 	f.retail_year
-- 	,f.retail_week
-- 	,f.retail_wk_end_date	
-- 	,rev_rollup
-- 	,vertical
-- 	,GMV_B2C_DOM as L2Y_GMV_B2C_DOM
-- 	from P_UK_FPA_T.EU_FUNNEL as f
-- 	inner join (select retail_year, retail_week, retail_wk_end_date from access_views.dw_cal_dt where age_for_rtl_week_id = -1 -52 -52 group by 1,2,3) as cal---105
-- 	on f.retail_wk_end_date = cal.retail_wk_end_date
-- ) b
-- on a.rev_rollup = b.rev_rollup and a.vertical = b.vertical	
	
-- --Forecast
-- left join P_WAJ_T.Forecast_UK_Verticals1_v1 forc
-- on a.vertical=forc.vertical and a.retail_week=forc.retail_week
-- );

-- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- /*****************************************************************************************************Weekly Summary (Focused & Protrader)*****************************************************************************************************/
-- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

-- drop table if exists p_uk_bc_t.HG_summary;
-- create table p_uk_bc_t.HG_summary as (
-- select
-- cal.age_for_rtl_week_id
-- ,cal.age_for_rtl_qtr_id
-- ,concat('Q',cal.rtl_qtr_of_rtl_year_id) as retail_quarter
-- ,a.retail_year
-- ,a.retail_week
-- ,a.vertical
-- ,a.inventory_prop
-- ,case when a.inventory_prop like ('%Focus%') then 'Focused'
--       when a.inventory_prop like ('%Scal%') then 'Scaling'
--       when a.inventory_prop like ('%Protrader%') then 'Protrader'
--       when a.inventory_prop like ('%Other%') then 'ROnew_vertical'
--       else 'NA'
-- end as focus_flag
-- ,a.LW_GMV
-- ,aa.LLW_GMV
-- ,b.LYLW_GMV
-- ,c.L2YLW_GMV

-- ,forc.forecast

-- ,d.LW_seller_coupon_GMV
-- ,e.LYLW_seller_coupon_GMV 
-- ,f.L2YLW_seller_coupon_GMV


-- ,g.LW_seller_offers_GMV
-- ,h.LYLW_seller_offers_GMV
-- ,i.L2YLW_seller_offers_GMV

-- ,j.LW_ebay_funded_coupon_GMV
-- ,k.LYLW_ebay_funded_coupon_GMV
-- ,l.L2YLW_ebay_funded_coupon_GMV

-- --,z.TTL_Impressions as Impressions
-- --,z.TTL_VI as Viewed_Items
-- --,z.Funnel_BI

-- ,a.LW_BI

-- from
-- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- -- GMV
-- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- --TYLW GMV (2022)
-- (select vertical, retail_year, retail_week, inventory_prop, sum(GMV) as LW_GMV, sum(BI) as LW_BI from P_CSI_TBS_T.UKI_FINAL where retail_year = 2022 and vertical = 'Home & Garden' and inventory_prop <> 'OTHERS' group by 1,2,3,4) a

-- left join (select distinct retail_year, retail_week, age_for_rtl_week_id, age_for_rtl_qtr_id, age_for_rtl_year_id, rtl_qtr_of_rtl_year_id from access_views.dw_cal_dt where age_for_rtl_year_id=0) cal
-- on a.retail_year=cal.retail_year and a.retail_week=cal.retail_week

-- --TYLLW GMV (2022 wOw)
-- left join (select vertical, retail_week+1 as retail_week, inventory_prop, sum(GMV) as LLW_GMV from P_CSI_TBS_T.UKI_FINAL where retail_year = 2022 group by 1,2,3) aa 
-- on a.vertical = aa.vertical and a.retail_week = aa.retail_week and a.inventory_prop = aa.inventory_prop

-- --LYLW GMV (2021)
-- left join (select vertical, retail_week-1 as retail_week, inventory_prop, sum(GMV) as LYLW_GMV from P_CSI_TBS_T.UKI_FINAL where retail_year = 2021 group by 1,2,3) b 
-- on a.vertical = b.vertical and a.retail_week = b.retail_week and a.inventory_prop = b.inventory_prop

-- --L2YLW GMV (2020)
-- left join (select vertical, retail_week-1 as retail_week, inventory_prop, sum(GMV) as L2YLW_GMV from P_CSI_TBS_T.UKI_FINAL where retail_year = 2020 group by 1,2,3) c 
-- on a.vertical = c.vertical and a.retail_week = c.retail_week and a.inventory_prop = c.inventory_prop


-- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- -- Seller Coupon GMV
-- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- --TY coupon GMV (2022)
-- left join (
-- select vertical
-- ,retail_week
-- ,inventory_prop
-- ,sum(b2c_gmb_usd_plan) as LW_seller_coupon_GMV
-- from  P_SLR_TRACKER_T.PP_CouponHist_1_coupon_sum1 
-- where retail_year = 2022 
-- and focus_flag in ('Focused','Protrader') 
-- and promotion_type = 'seller coupon' 
-- and vertical = 'Home & Garden'
-- group by 1,2,3) d
-- on a.inventory_prop = d.inventory_prop and a.retail_week = d.retail_week

-- --LY coupon GMV (2021)
-- left join (
-- select vertical
-- ,retail_week-1 as retail_week
-- ,inventory_prop
-- ,sum(b2c_gmb_usd_plan) as LYLW_seller_coupon_GMV 
-- from  P_SLR_TRACKER_T.PP_CouponHist_1_coupon_sum1 
-- where retail_year = 2021 
-- and focus_flag in ('Focused','Protrader') 
-- and promotion_type = 'seller coupon' 
-- and vertical = 'Home & Garden'
-- group by 1,2,3) e 
-- on a.inventory_prop = e.inventory_prop and a.retail_week = e.retail_week

-- --L2Y coupon GMV (2020)
-- left join (
-- select vertical
-- ,retail_week-1 as retail_week
-- ,inventory_prop
-- ,sum(b2c_gmb_usd_plan) as L2YLW_seller_coupon_GMV
-- from  P_SLR_TRACKER_T.PP_CouponHist_1_coupon_sum1 
-- where retail_year = 2020 
-- and focus_flag in ('Focused','Protrader') 
-- and promotion_type = 'seller coupon' 
-- and vertical = 'Home & Garden'
-- group by 1,2,3) f
-- on a.inventory_prop = f.inventory_prop and a.retail_week = f.retail_week

-- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- -- Seller Offers GMV (DAILY DEALS, SME, RPP, CODED COUPONS, STP)
-- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- --TY seller offer GMV (2022)
-- left join (
-- select retail_year,retail_week,vertical,inventory_prop,sum(seller_offer_GMV) as LW_seller_offers_GMV
-- from (
-- 	select 
-- 	retail_year
-- 	,retail_week
-- 	,vertical
-- 	,inventory_prop
-- 	,sum(promotion_GMV) as seller_offer_GMV
-- 	from P_SLR_TRACKER_T.seller_union_all_hist 
-- 	where retail_year = 2022
-- 	and vertical = 'Home & Garden' 
-- 	and inventory_prop_flag in ('Focused','Protrader') 
-- 	and promotion_type in ('DAILY DEALS','SME','RPP','CODED COUPONS')
-- 	group by 1,2,3,4

-- 	union all

-- 	select
-- 	retail_year
-- 	,retail_week_2 as retail_week
-- 	,STP_Vertical as vertical
-- 	,inventory_prop
-- 	,sum(STP_GMV) as seller_offer_GMV
-- 	from P_SLR_TRACKER_T.STP_FINAL_HIST
-- 	where retail_year = 2022
-- 	and STP_vertical = 'Home & Garden' 
-- 	and inv_prop_flag in ('Focused','Protrader') 
-- 	group by 1,2,3,4)
-- group by 1,2,3,4
-- ) g
-- on a.vertical = g.vertical and a.inventory_prop = g.inventory_prop and a.retail_week = g.retail_week

-- --LY seller offer GMV (2021)
-- left join (
-- select retail_year,retail_week,vertical,inventory_prop,sum(seller_offer_GMV) as LYLW_seller_offers_GMV
-- from (
-- 	select 
-- 	retail_year
-- 	,retail_week-1 as retail_week
-- 	,vertical
-- 	,inventory_prop
-- 	,sum(promotion_GMV) as seller_offer_GMV
-- 	from P_SLR_TRACKER_T.seller_union_all_hist 
-- 	where retail_year = 2021
-- 	and vertical = 'Home & Garden' 
-- 	and inventory_prop_flag in ('Focused','Protrader')  
-- 	and promotion_type in ('DAILY DEALS','SME','RPP','CODED COUPONS')
-- 	group by 1,2,3,4

-- 	union all

-- 	select
-- 	retail_year
-- 	,retail_week_2-1 as retail_week
-- 	,STP_Vertical as vertical
-- 	,inventory_prop
-- 	,sum(STP_GMV) as seller_offer_GMV
-- 	from P_SLR_TRACKER_T.STP_FINAL_HIST
-- 	where retail_year = 2021
-- 	and STP_vertical = 'Home & Garden' 
-- 	and inv_prop_flag in ('Focused','Protrader') 
-- 	group by 1,2,3,4)
-- group by 1,2,3,4
-- ) h
-- on a.vertical = h.vertical and a.inventory_prop = h.inventory_prop and a.retail_week = h.retail_week

-- --L2Y seller offer GMV (2020)
-- left join (
-- select retail_year,retail_week,vertical,inventory_prop,sum(seller_offer_GMV) as L2YLW_seller_offers_GMV
-- from (
-- 	select 
-- 	retail_year
-- 	,retail_week-1 as retail_week
-- 	,vertical
-- 	,inventory_prop
-- 	,sum(promotion_GMV) as seller_offer_GMV
-- 	from P_SLR_TRACKER_T.seller_union_all_hist 
-- 	where retail_year = 2020
-- 	and vertical = 'Home & Garden' 
-- 	and inventory_prop_flag in ('Focused','Protrader')  
-- 	and promotion_type in ('DAILY DEALS','SME','RPP','CODED COUPONS')
-- 	group by 1,2,3,4
	
-- 	union all

-- 	select
-- 	retail_year
-- 	,retail_week_2-1 as retail_week
-- 	,STP_Vertical as vertical
-- 	,inventory_prop
-- 	,sum(STP_GMV) as seller_offer_GMV
-- 	from P_SLR_TRACKER_T.STP_FINAL_HIST
-- 	where retail_year = 2020
-- 	and STP_vertical = 'Home & Garden' 
-- 	and inv_prop_flag in ('Focused','Protrader') 
-- 	group by 1,2,3,4)
-- group by 1,2,3,4
-- ) i
-- on a.vertical = i.vertical and a.inventory_prop = i.inventory_prop and a.retail_week = i.retail_week

-- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- -- eBay funded Coupon GMV (Site wise / Price take over)
-- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- --TY ebay funded coupon GMV (2022)
-- left join (
-- select vertical
-- ,retail_week
-- ,inventory_prop
-- ,sum(b2c_gmb_usd_plan) as LW_ebay_funded_coupon_GMV
-- from  P_SLR_TRACKER_T.PP_CouponHist_1_coupon_sum1 
-- where retail_year = 2022 
-- and focus_flag in ('Focused','Protrader') 
-- and promotion_type = 'ebay funded' 
-- and vertical = 'Home & Garden'
-- group by 1,2,3) j
-- on a.inventory_prop = j.inventory_prop and a.retail_week = j.retail_week

-- --LY ebay funded coupon GMV (2021)
-- left join (
-- select vertical
-- ,retail_week-1 as retail_week
-- ,inventory_prop
-- ,sum(b2c_gmb_usd_plan) as LYLW_ebay_funded_coupon_GMV 
-- from  P_SLR_TRACKER_T.PP_CouponHist_1_coupon_sum1 
-- where retail_year = 2021 
-- and focus_flag in ('Focused','Protrader') 
-- and promotion_type = 'ebay funded' 
-- and vertical = 'Home & Garden'
-- group by 1,2,3) k 
-- on a.inventory_prop = k.inventory_prop and a.retail_week = k.retail_week

-- --L2Y ebay funded coupon GMV (2020)
-- left join (
-- select vertical
-- ,retail_week-1 as retail_week
-- ,inventory_prop
-- ,sum(b2c_gmb_usd_plan) as L2YLW_ebay_funded_coupon_GMV
-- from  P_SLR_TRACKER_T.PP_CouponHist_1_coupon_sum1 
-- where retail_year = 2020 
-- and focus_flag in ('Focused','Protrader')  
-- and promotion_type = 'ebay funded' 
-- and vertical = 'Home & Garden'
-- group by 1,2,3) l
-- on a.inventory_prop = l.inventory_prop and a.retail_week = l.retail_week

-- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- -- Forecast
-- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- left join (
-- select 
-- a.vertical
-- ,a.retail_week
-- ,b.initiative as inventory_prop 
-- ,b.phasing_ratio * a.GMV_Forecast as forecast
-- from P_WAJ_T.Forecast_UK_Verticals1_v1 a 
-- left join P_Waj_T.Q32021_inv_phasing b 
-- on a.vertical = b.vertical and a.retail_week = b.retail_week
-- where a.vertical = 'Home & Garden'
-- and b.focused <> 'Core'
-- ) forc 
-- on a.vertical = forc.vertical and a.retail_week = forc.retail_week and a.inventory_prop = forc.inventory_prop

-- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- -- Funnel  (Pending Holly updating Q1 2022 Inv Prop)
-- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- /*Funnel metrics
-- left join (
-- select 
-- retail_year
-- ,retail_week
-- ,new_vertical
-- ,inventory_prop
-- ,(sum(SRP_IMP_1)+sum(OFF_EBAY_SRP_1) + sum(Store_IMP_1)) as TTL_Impressions
-- ,sum(TTL_VI) as TTL_VI 
-- ,sum(BI) as Funnel_BI
-- from p_hroon_t.vrtcl_funnel_final
-- where retail_year = 2022 
-- and new_vertical = 'Home & Garden' 
-- and inventory_prop like ('%Focus%') or inventory_prop like ('%Protrader%')
-- group by 1,2,3,4) z 
-- on a.vertical = z.new_vertical and a.retail_week = z.retail_week and a.inventory_prop = z.inventory_prop 
-- */
-- );


-- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- /*****************************************************************************************************************Seller Coupon****************************************************************************************************************/
-- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- drop table if exists p_uk_bc_t.HG_summary_seller_coupon;
-- create table p_uk_bc_t.HG_summary_seller_coupon as 
-- (
-- select
-- cal.age_for_rtl_week_id
-- ,cal.age_for_rtl_qtr_id
-- ,concat('Q',cal.rtl_qtr_of_rtl_year_id) as retail_quarter
-- ,cal.age_for_rtl_year_id
-- ,a.retail_year
-- ,a.retail_week
-- ,a.coupon_name
-- ,a.slr_id
-- ,b.user_slctd_id
-- ,case when a.inventory_prop = 'OTHERS' then 'Core' 
-- 	  when a.inventory_prop is null then 'NA' 
-- 	  else inventory_prop end as inv_prop
-- ,a.focus_flag
-- ,sum(a.gmb_usd_plan) as coupon_gmb
-- ,sum(a.qty_bght) as bi
-- ,sum(a.contra_usd_plan) as coupon_spend
-- from P_SLR_TRACKER_T.PP_CouponHist_1_coupon_sum1 a
-- left join access_views.dw_users b 
-- on a.slr_id=b.user_id  
-- inner join (select distinct retail_year,retail_week,age_for_rtl_week_id,age_for_rtl_qtr_id,age_for_rtl_year_id,rtl_qtr_of_rtl_year_id from access_views.dw_cal_dt where age_for_rtl_year_id between -1 and 0) cal
-- on a.retail_year=cal.retail_year and a.retail_week=cal.retail_week
-- where vertical = 'Home & Garden' and promotion_type='seller coupon'
-- group by 1,2,3,4,5,6,7,8,9,10,11
-- );

-- --Historic seller coupon description
-- drop table if exists p_uk_bc_t.HG_summary_seller_coupon_his;
-- create table p_uk_bc_t.HG_summary_seller_coupon_his as(
-- select cal.age_for_rtl_week_id,cal.age_for_rtl_qtr_id,cal.age_for_rtl_year_id,a.retail_year, a.retail_week, a.promotion_type, a.coupon_name, a.coupon_desc, a.discount_offer, a.start_date, a.end_date, datediff(a.end_date, a.start_date)+1 as promo_duration_day, sum(a.B2C_GMB_USD_PLAN) as GMB
-- from P_SLR_TRACKER_T.PP_CouponHist_1_coupon_sum1 a
-- inner join (select distinct retail_year,retail_week,age_for_rtl_week_id,age_for_rtl_qtr_id,age_for_rtl_year_id from access_views.dw_cal_dt where age_for_rtl_year_id between -2 and 0) cal
-- on a.retail_year=cal.retail_year and a.retail_week=cal.retail_week
-- where a.promotion_type = 'seller coupon' and cal.age_for_rtl_week_id<=-1
-- group by 1,2,3,4,5,6,7,8,9,10,11,12);

-- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- /************************************************************************************************Deep dive of inventory prop at L3 level History************************************************************************************************/
-- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- drop table if exists p_uk_bc_t.HG_summary_L3_his;
-- create table p_uk_bc_t.HG_summary_L3_his as(
-- select 
-- cal.age_for_rtl_week_id
-- ,cal.age_for_rtl_qtr_id
-- ,cal.age_for_rtl_year_id
-- ,cal.rtl_qtr_of_rtl_year_id
-- ,a.retail_year
-- ,a.retail_week
-- ,case when a.inventory_prop = 'OTHERS' then 'Core' 
-- 	  when a.inventory_prop is null then 'NA' 
-- 	  else a.inventory_prop end as inventory_prop
-- ,a.categ_lvl2_id
-- ,a.categ_lvl2_name
-- ,a.categ_lvl3_id
-- ,a.categ_lvl3_name
-- ,sum(GMV) as GMV
-- ,sum(BI) as BI
-- from  P_CSI_TBS_T.UKI_FINAL_v2_trading a--created to reflect current category hierarchy of listing
-- inner join (select distinct retail_year, retail_week, age_for_rtl_week_id, age_for_rtl_qtr_id, age_for_rtl_year_id, rtl_qtr_of_rtl_year_id from access_views.dw_cal_dt where age_for_rtl_year_id between -2 and 0) cal
-- on a.retail_year=cal.retail_year and a.retail_week=cal.retail_week
-- where a.vertical = 'Home & Garden' 
-- group by 1,2,3,4,5,6,7,8,9,10,11);

-- --Summary with Yo2Y
-- drop table if exists p_uk_bc_t.HG_summary_L3;
-- create table p_uk_bc_t.HG_summary_L3 as(
-- select 
-- cal.age_for_rtl_week_id
-- ,cal.age_for_rtl_qtr_id
-- ,concat('Q',cal.rtl_qtr_of_rtl_year_id) as retail_quarter
-- ,a.retail_year
-- ,a.retail_week
-- ,case when a.inventory_prop = 'OTHERS' then 'Core' 
-- 	  when a.inventory_prop is null then 'NA' 
-- 	  else a.inventory_prop end as inventory_prop
-- ,a.categ_lvl2_id
-- ,a.categ_lvl2_name
-- ,a.categ_lvl3_id
-- ,a.categ_lvl3_name
-- ,a.LW_GMV
-- ,b.L2YLW_GMV
-- ,c.LYLW_GMV
-- ,a.LW_BI
-- ,b.L2YLW_BI
-- ,c.LYLW_BI 
-- from
-- (select retail_year, retail_week, inventory_prop, categ_lvl2_id, categ_lvl2_name, categ_lvl3_id, categ_lvl3_name, sum(GMV) as LW_GMV, sum(BI) as LW_BI from p_uk_bc_t.HG_summary_L3_his where age_for_rtl_week_id=-1 group by 1,2,3,4,5,6,7) a
-- left join 
-- (select retail_year, retail_week, inventory_prop, categ_lvl2_id, categ_lvl2_name, categ_lvl3_id, categ_lvl3_name, sum(GMV) as L2YLW_GMV, sum(BI) as L2YLW_BI from p_uk_bc_t.HG_summary_L3_his where age_for_rtl_week_id=-105 group by 1,2,3,4,5,6,7) b
-- on a.inventory_prop=b.inventory_prop and a.categ_lvl3_id=b.categ_lvl3_id and a.retail_week=b.retail_week-1
-- left join 
-- (select retail_year, retail_week, inventory_prop, categ_lvl2_id, categ_lvl2_name, categ_lvl3_id, categ_lvl3_name, sum(GMV) as LYLW_GMV, sum(BI) as LYLW_BI from p_uk_bc_t.HG_summary_L3_his where age_for_rtl_week_id=-52 group by 1,2,3,4,5,6,7) c
-- on a.inventory_prop=c.inventory_prop and a.categ_lvl3_id=c.categ_lvl3_id and a.retail_week=c.retail_week-1
-- left join 
-- (select distinct retail_year, retail_week, age_for_rtl_week_id, age_for_rtl_qtr_id, rtl_qtr_of_rtl_year_id from access_views.dw_cal_dt) cal
-- on a.retail_year=cal.retail_year and a.retail_week=cal.retail_week);

-- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- /***********************************************************************************************************Seller Segment Reporting***********************************************************************************************************/
-- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- -- Seller level GMV ((L52W)
-- drop table if exists p_uk_bc_t.HG_summary_slr;
-- create table p_uk_bc_t.HG_summary_slr as(
-- select 
-- base.age_for_rtl_week_id
-- ,base.age_for_rtl_qtr_id
-- ,base.age_for_rtl_year_id
-- ,base.rtl_qtr_of_rtl_year_id
-- ,base.retail_year
-- ,base.retail_week 
-- ,base.seller_id
-- ,usr.user_slctd_id as seller_name
-- ,case when base.inventory_prop = 'OTHERS' then 'Core' 
-- 	  when base.inventory_prop is null then 'NA' 
-- 	  else base.inventory_prop end as inventory_prop

-- ,case when focus.seller_id is not null and pt_focus.seller_id is not null then "CM & PT Focused Seller" 
-- 	  when focus.seller_id is not null and pt_focus.seller_id is null then "CM Focused Seller"
-- 	  when focus.seller_id is null and pt_focus.seller_id is not null then "PT Focused Seller" else "Not Focused Seller" end as seller_type

-- ,case when focus.seller_id is not null and pt_focus.seller_id is not null then concat(focus.category_manager," & ",pt_focus.protrader) 
-- 	  when focus.seller_id is not null and pt_focus.seller_id is null then focus.category_manager
-- 	  when focus.seller_id is null and pt_focus.seller_id is not null then pt_focus.protrader else "No Focus Manager" end as focused_manager
	  
-- ,sum(base.GMV) as GMV
-- ,sum(base.BI) as BI
-- ,count(distinct base.item_id) as converted_lstg
-- ,count(distinct base.buyer_id) as buyer_cnt

-- from P_CSI_TBS_T.UKI_Final_V1_trading_item base

-- inner join access_views.dw_users usr
-- on base.seller_id = usr.user_id 

-- left join (select seller_id, max(am_name) as category_manager from p_awang_ops_t.seller_ops_83 where seller_vertical='Home & Garden' group by 1) focus
-- on base.seller_id=focus.seller_id 

-- left join (select seller_id, max(pt_name) as protrader from P_UK_BC_T.PT_focused_Q421 group by 1) pt_focus
-- on base.seller_id=pt_focus.seller_id 

-- where base.vertical='Home & Garden'
-- and base.age_for_rtl_week_id between -52 and -1
-- group by 1,2,3,4,5,6,7,8,9,10,11);


-- -- H&G Live Listing on UK site from LW top 1000 UK B2C seller (L4W)
-- drop table if exists P_InventoryPlanning_T.HG_summary_ll;
-- create table P_InventoryPlanning_T.HG_summary_ll as(
-- select 
-- cal.age_for_rtl_week_id
-- ,cal.age_for_rtl_qtr_id
-- ,cal.age_for_rtl_year_id
-- ,cal.rtl_qtr_of_rtl_year_id
-- ,cal.retail_year
-- ,cal.retail_week 
-- ,base.item_id
-- ,case when base.inventory_prop = 'OTHERS' then 'Core' 
-- 	  when base.inventory_prop is null then 'NA' 
-- 	  else base.inventory_prop end as inventory_prop
-- ,base.focus_flag
-- ,lstg.slr_id as seller_id
-- ,usr.user_slctd_id as seller_name
-- ,lstg.auct_start_dt
-- ,lstg.auct_end_dt
-- ,case when focus.seller_id is not null and pt_focus.seller_id is not null then "CM & PT Focused Seller" 
-- 	  when focus.seller_id is not null and pt_focus.seller_id is null then "CM Focused Seller"
-- 	  when focus.seller_id is null and pt_focus.seller_id is not null then "PT Focused Seller" else "Not Focused Seller" end as seller_type

-- ,case when focus.seller_id is not null and pt_focus.seller_id is not null then concat(focus.category_manager," & ",pt_focus.protrader) 
-- 	  when focus.seller_id is not null and pt_focus.seller_id is null then focus.category_manager
-- 	  when focus.seller_id is null and pt_focus.seller_id is not null then pt_focus.protrader else "No Focus Manager" end as focused_manager
	  
-- from p_awang_ops_t.item_invent_lstg base--UK seller listing base

-- inner join prs_restricted_v.slng_lstg_super_fact lstg
-- on base.item_id=lstg.item_id

-- inner join (
-- 	select distinct(seller_id) from
-- 	(select seller_id,sum(GMV) as tot_GMV 
-- 	from p_uk_bc_t.HG_summary_slr
-- 	where age_for_rtl_week_id=-1
-- 	group by 1
-- 	qualify (row_number() over (order by tot_GMV desc))<=1000)--Only include the top 1000 sellers in LW
-- 	) top
-- on lstg.slr_id=top.seller_id 	

-- inner join access_views.dw_cal_dt cal 
-- on lstg.auct_start_dt < cal.cal_dt and lstg.auct_end_dt >= cal.cal_dt 
-- and cal.age_for_rtl_week_id between -4 and -1

-- inner join access_views.dw_users usr
-- on lstg.slr_id = usr.user_id

-- left join (select seller_id, max(am_name) as category_manager from p_awang_ops_t.seller_ops_83 where seller_vertical='Home & Garden' group by 1) focus
-- on lstg.slr_id=focus.seller_id 

-- left join (select seller_id, max(pt_name) as protrader from P_UK_BC_T.PT_focused_Q421 group by 1) pt_focus
-- on lstg.slr_id=pt_focus.seller_id 

-- where base.new_vertical='Home & Garden'
-- and lstg.item_site_id = 3--UK site
-- and lstg.auct_type_code not in (10,15));


-- --Combine to show top seller performance of last 4 weeks and rolling 52 weeks GMV/BI
-- drop table if exists P_uk_bc_T.HG_summary_slr_l4w;
-- create table P_uk_bc_T.HG_summary_slr_l4w as (
-- select 
-- L4W.*
-- ,LL.LW_LL
-- ,LL.LW_1_LL
-- ,LL.LW_2_LL
-- ,LL.LW_3_LL
-- ,roll52.Rolling52W_GMV
-- ,roll52.Rolling52W_BI

-- from
-- 	(select distinct(seller_id) from
-- 	(select seller_id,sum(GMV) as tot_GMV 
-- 	from p_uk_bc_t.HG_summary_slr
-- 	where age_for_rtl_week_id=-1
-- 	group by 1
-- 	qualify (row_number() over (order by tot_GMV desc))<=1000)--Only include the top 1000 sellers in LW
-- 	) top

-- -- Converted
-- inner join

-- 	(select 
-- 	seller_id
-- 	,seller_name
-- 	,seller_type
-- 	,focused_manager
-- 	,inventory_prop
-- 	,sum(case when age_for_rtl_week_id=-1 then GMV end) as LW_GMV
-- 	,sum(case when age_for_rtl_week_id=-2 then GMV end) as LW_1_GMV
-- 	,sum(case when age_for_rtl_week_id=-3 then GMV end) as LW_2_GMV
-- 	,sum(case when age_for_rtl_week_id=-4 then GMV end) as LW_3_GMV
-- 	,sum(case when age_for_rtl_week_id=-1 then BI end) as LW_BI
-- 	,sum(case when age_for_rtl_week_id=-2 then BI end) as LW_1_BI
-- 	,sum(case when age_for_rtl_week_id=-3 then BI end) as LW_2_BI
-- 	,sum(case when age_for_rtl_week_id=-4 then BI end) as LW_3_BI
-- 	,sum(case when age_for_rtl_week_id=-1 then converted_lstg end) as LW_converted_lstg
-- 	,sum(case when age_for_rtl_week_id=-2 then converted_lstg end) as LW_1_converted_lstg
-- 	,sum(case when age_for_rtl_week_id=-3 then converted_lstg end) as LW_2_converted_lstg
-- 	,sum(case when age_for_rtl_week_id=-4 then converted_lstg end) as LW_3_converted_lstg
-- 	,sum(case when age_for_rtl_week_id=-1 then buyer_cnt end) as LW_buyer_cnt
-- 	,sum(case when age_for_rtl_week_id=-2 then buyer_cnt end) as LW_1_buyer_cnt
-- 	,sum(case when age_for_rtl_week_id=-3 then buyer_cnt end) as LW_2_buyer_cnt
-- 	,sum(case when age_for_rtl_week_id=-4 then buyer_cnt end) as LW_3_buyer_cnt
-- 	from p_uk_bc_t.HG_summary_slr 
-- 	where age_for_rtl_week_id between -4 and -1
-- 	group by 1,2,3,4,5
-- 	) L4W

-- on top.seller_id=L4W.seller_id

-- -- Live Listing
-- left join

-- 	(select 
-- 	seller_id
-- 	,seller_name
-- 	,seller_type
-- 	,focused_manager
-- 	,inventory_prop
-- 	,count(distinct (case when age_for_rtl_week_id=-1 then item_id end)) as LW_LL
-- 	,count(distinct (case when age_for_rtl_week_id=-2 then item_id end)) as LW_1_LL
-- 	,count(distinct (case when age_for_rtl_week_id=-3 then item_id end)) as LW_2_LL
-- 	,count(distinct (case when age_for_rtl_week_id=-4 then item_id end)) as LW_3_LL
-- 	from P_InventoryPlanning_T.HG_summary_ll
-- 	where age_for_rtl_week_id between -4 and -1
-- 	group by 1,2,3,4,5) LL
	
-- on L4W.seller_id=LL.seller_id and L4W.inventory_prop=LL.inventory_prop

-- --Rolling 52 weeks GMV/BI
-- left join

-- 	(select 
-- 	seller_id
-- 	,seller_name
-- 	,seller_type
-- 	,focused_manager
-- 	,inventory_prop
-- 	,sum(GMV) as Rolling52W_GMV
-- 	,sum(BI) as Rolling52W_BI
-- 	from p_uk_bc_t.HG_summary_slr 
-- 	where age_for_rtl_week_id between -52 and -1
-- 	group by 1,2,3,4,5) roll52
	
-- on L4W.seller_id=roll52.seller_id and L4W.inventory_prop=roll52.inventory_prop
-- );

-- -- L52W GMV/BI data connection of top 1000 sellers created for Poppy to drive her own excel files
-- drop table if exists P_uk_bc_T.poppy_top1000;
-- create table P_uk_bc_T.poppy_top1000 as (
-- select 
-- a.seller_id
-- ,a.seller_name
-- ,a.seller_type
-- ,a.retail_year
-- ,a.retail_week 
-- ,a.inventory_prop
-- ,a.GMV
-- ,a.BI
-- from p_uk_bc_t.HG_summary_slr a
-- inner join (
-- 	select distinct(seller_id) from
-- 	(select seller_id,sum(GMV) as tot_GMV 
-- 	from p_uk_bc_t.HG_summary_slr
-- 	where age_for_rtl_week_id=-1
-- 	group by 1
-- 	qualify (row_number() over (order by tot_GMV desc))<=1000)--Only include the top 1000 sellers in LW
-- 	) top
-- on a.seller_id=top.seller_id 	
-- order by a.seller_id,a.age_for_rtl_week_id desc
-- );



-- /*
-- --QC Check

-- select * from p_uk_bc_t.HG_summary;

-- --Seller Offers
-- select 
-- inventory_prop
-- ,promotion_type
-- ,sum(promotion_GMV) as seller_offer_GMV
-- ,sum(listing_cnt)
-- from P_SLR_TRACKER_T.seller_union_all_hist 
-- where 
-- vertical = 'Home & Garden' 
-- and Inventory_prop like ('%Focus%') 
-- and promotion_type in ('DAILY DEALS','SME','RPP','CODED COUPONS')
-- and retail_year=2022 and retail_week=1
-- group by 1,2

-- select
-- inventory_prop
-- ,sum(STP_GMV) as seller_offer_GMV
-- from P_SLR_TRACKER_T.STP_FINAL_HIST
-- where retail_year = 2022 and retail_week_2=1
-- and STP_vertical = 'Home & Garden' 
-- and inv_prop_flag = 'Focused'
-- group by 1

-- --ebay funded 
-- select promotion_type,sum(B2C_GMB_USD_PLAN)
-- from  P_SLR_TRACKER_T.PP_CouponHist_1_coupon_sum1
-- where 
-- retail_year = 2020 and retail_week = 2
-- and vertical = 'Home & Garden'
-- and focus_flag = 'Focused' 
-- group by 1 order by 1
-- */


-- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- -- Excel Data Connection
-- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- /*
-- --Data connection: HG Inventory Prop
-- select 
-- retail_year
-- ,retail_week
-- ,case when inventory_prop like ('%Focus%') then 'Focused'
--       when inventory_prop like ('%Scal%') then 'Scaling'
--       when inventory_prop like ('%Protrader%') then 'Protrader'
--       when inventory_prop like ('%Other%') then 'ROnew_vertical'
--       else 'NA'
-- end as focus_flag
-- ,inventory_prop
-- ,sum(GMV) as Weekly_GMV
-- ,sum(BI) as Weekly_BI 
-- from P_CSI_TBS_T.UKI_FINAL 
-- where vertical = 'Home & Garden' 
-- and inventory_prop <> 'OTHERS'
-- and retail_year in (2020,2021,2022)
-- group by 1,2,3,4;

-- */

-- /*Report cannot display 2020 Seller Offers GMV till Week 26*/

-- /*
-- --Week 19
-- select min(retail_week)
-- from P_SLR_TRACKER_T.seller_union_all_hist 
-- 	where retail_year = 2020
-- 	and vertical = 'Home & Garden' 
-- 	and Inventory_prop like ('%Focus%') 
-- 	and promotion_type in ('DAILY DEALS','SME','RPP','CODED COUPONS')
	
-- --Week 26
-- select min(retail_week_2)	
-- from P_SLR_TRACKER_T.STP_FINAL_HIST
-- 	where retail_year = 2020
-- 	and STP_vertical = 'Home & Garden' 
-- 	and inv_prop_flag = 'Focused'
-- */


-- /*
-- --Inv prop coupon forecast: -  Applied the historical coupon breakdown rather than using the inventory prop phasing ratio, because some inventory prop have higher coupon GMV than others
-- --This isn't an official report/measurement, just for the team purpose
-- select 
-- inventory_prop
-- ,focus_flag
-- ,sum(b2c_gmb_usd_plan) as seller_coupon_GMV 
-- from  P_SLR_TRACKER_T.PP_CouponHist_1_coupon_sum1 
-- where retail_year = 2021 
-- and promotion_type = 'seller coupon' 
-- and vertical = 'Home & Garden'
-- group by 1,2 order by 1
-- */

-- /*
-- --Checking other trade deck figures:

-- --Acquistion: D2C Sellers iGMV 
-- select 
-- retail_week
-- ,vertical
-- ,acq_tag
-- ,sum(gmv_plan_usd) as gmv
-- from p_eupricing_t.uk_new_sellers_kpis 
-- where vertical  = 'Home & Garden' and retail_year=2022
-- group by 1,2,3;

-- --Acquistion: Reseller iGMV
-- select 
-- retail_week 
-- ,iGMV
-- from p_macheung_t.reseller_iGMV_adj_2021
-- where vertical  = 'Home & Garden'; 

-- --Acquisition target: 'https://ebayinc.sharepoint.com/sites/UKPlanning/Shared Documents/Planning Team Members/Mansie/Acquisition/[2022 Acquisition Targets v1.xlsx]input'!$A:$G
-- select * from p_macheung_t.acquisition_target_2021
-- where retail_year=2022
-- and vertical  = 'Home & Garden' 
-- order by retail_week;

-- --Focused sellers
-- select sum(GMV) FROM P_SLR_TRACKER_T.seller_gmv_yoy_new where vertical  = 'Home & Garden'
-- select * from P_SLR_TRACKER_T.seller_ops_summary_a order by 1;

-- select * from P_SLR_TRACKER_T.seller_gmv_yoy_weekly_a 
-- where retail_year=2022 and vertical  = 'Home & Garden'
-- and retail_week=3
-- order by retail_week desc, GMV desc
-- */









