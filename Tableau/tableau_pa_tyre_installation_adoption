------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------
--UKPLAN-249
--Tableau: Tyre Installation Adoption Weekly
--Epic Link:Tableau Report Transition 2023-Q2
------------------------------------------------------------------------------------------------

-- 1. Seller list: List of tyre sellers
drop table if exists   p_InventoryPlanning_t.tyres_install_sellers  ; 
create table  p_InventoryPlanning_t.tyres_install_sellers  as (
select distinct ck.seller_id ,
case when  ck.seller_id=w.seller_id_active then 'Y' else 'N' end as active_seller
from  DW_CHECKOUT_TRANS ck 
left outer JOIN DW_USERs U ON U.USER_ID= ck.SELLER_ID 
left join ( select distinct SELLER_ID as seller_id_active from    p_InventoryPlanning_t.tyres_install_active ) w on ck.seller_id=w.seller_id_active
where site_id =3 
--and USER_SLCTD_ID in ( select distinct seller_name from P_ICHAN_T.tyre_install_upload )
and seller_id in (select distinct seller_id from p_InventoryPlanning_t.tyres_install_sellers_master ) 
);


--- 2. a
-- Transaction level data 
drop table if exists   p_InventoryPlanning_t.tyres_install_txn  ; 
create table  p_InventoryPlanning_t.tyres_install_txn
as 
(select * from (
SELECT	
  U.USER_SLCTD_ID,
  ck.SELLER_ID,
  BUYER_ID,
  TRANSACTION_ID,
   CK.CREATED_DT,
   ck.item_id, 
   ck.oms_extrnl_rfrnc_id,
   Active_seller,
CASE WHEN Retail_year  IN (2018,2019) AND RETAIL_WEEK =1 THEN 2019
WHEN Retail_year  IN (2019,2020) AND RETAIL_WEEK =1 THEN 2020
WHEN Retail_year  IN (2020,2021) AND RETAIL_WEEK =53 THEN 2020
WHEN Retail_year  IN (2021,2022) AND RETAIL_WEEK =52 THEN 2021
ELSE Retail_year end as Retail_year ,
cal.AGE_FOR_QTR_ID,
cal.QTR_OF_YEAR_ID,
cal.RETAIL_week,
case when categ_lvl2_id in (20710, 69197, 185066) then 'Electronics'
		when meta_categ_id in (26395) then 'Lifestyle'
		when CATEG_LVL3_ID in (260325) then 'Lifestyle'
		when categ_lvl2_id in (386, 238, 1202, 49019, 183446, 80546, 222, 11731, 1082, 767, 233, 2613, 1188, 1039, 11743, 19169, 2562, 2616, 436, 14737, 2631, 2624, 717, 16486, 61573, 246) then 'Home & Garden'
		when categ_lvl3_id in (35000, 98989) then 'Home & Garden'
		when categ_lvl3_id in (3244) then 'Parts & Accessories'
		when categ_lvl3_id in (124982, 259225,180969, 260509) then 'Business & Industrial'
		when categ_lvl2_id in (46576) then 'Parts & Accessories'
		when bsns_vrtcl_name in ('Collectibles') and meta_categ_id in (220, 237, 550)  then 'Collectibles B2C'
		when bsns_vrtcl_name in ('Collectibles') and categ_lvl2_id in (180250) then 'Collectibles B2C' 
		else bsns_vrtcl_name end as vertical,
meta_categ_id, 
CATEG_LVL2_ID, 
categ_lvl2_name, 
categ_lvl3_name, 
categ_lvl3_id,
categ_lvl4_name, 
categ_lvl4_id,
 QUANTITY,
 item_price,
 GMV_PLAN_USD as  GMV_20
--case when CNDTN_ROLLUP_ID = 1 then 'New' when   CNDTN_ROLLUP_ID = 3 then 'Used' else  CNDTN_ROLLUP_ID  end as Condition,
--SUM(CAST(CK.QUANTITY AS DECIMAL(18,2))* CAST(CK.ITEM_PRICE AS DECIMAL(18,2))*CAST(LPR.CURNCY_PLAN_RATE AS DECIMAL(18,2))) AS GMV,
--sum(QUANTITY) as BI
			FROM   DW_CHECKOUT_TRANS ck -- select * from   DW_CHECKOUT_TRANS  where item_id=143974673597 and site_id =3  and SALE_TYPE NOT IN (10,15) and GMV_DT >='2022-08-10';
			
			INNER join ( select seller_id, max(active_seller) active_seller from  p_InventoryPlanning_t.tyres_install_sellers group by 1 ) as  t  on ck.seller_id=t.seller_id
			---left join (  select distinct seller_id from  p_InventoryPlanning_t.tyres_install_active ) as  w  on ck.seller_id=w.seller_id
			INNER JOIN ( select CURNCY_PLAN_RATE,CURNCY_ID from  ACCESS_VIEWS.SSA_CURNCY_PLAN_RATE_DIM group by 1,2)AS LPR
				ON LPR.CURNCY_ID = CK.LSTG_CURNCY_ID
			INNER JOIN ACCESS_VIEWS.DW_CAL_DT CAL ON CAL.CAL_DT = CK.GMV_DT   and retail_year >=2023  and  age_for_rtl_week_id <=0
			INNER JOIN DW_CATEGORY_GROUPINGS CAT ON CAT.LEAF_CATEG_ID = ck.LEAF_CATEG_ID AND CAT.SITE_ID in(3) AND CAT.SAP_CATEGORY_ID NOT IN (5,7,41,23,-999)
			--ON CAT.LEAF_CATEG_ID = ck.LEAF_CATEG_ID AND CAT.SITE_ID in(3) AND CAT.SAP_CATEGORY_ID NOT IN (5,7,41,23,-999)

			inner JOIN lstg_item_cndtn CNDTN ON ck.item_id = CNDTN.item_id  AND ck.auct_end_dt = CNDTN.AUCT_END_DT
			left outer JOIN DW_USERs U ON U.USER_ID= ck.SELLER_ID 
			
			WHERE 1=1
				and CK.SALE_TYPE NOT IN (10,15)
				and ck.site_id = 3
				and slr_cntry_id = 3
				and SLR_CNTRY_ID=BYR_CNTRY_ID
				and  CNDTN_ROLLUP_ID = 1)
where  	vertical IN ('Parts & Accessories','Business & Industrial'));


-- 2b.Add  aspect tyre number
drop table if exists   p_InventoryPlanning_t.tyres_install_data  ; 
create table  p_InventoryPlanning_t.tyres_install_data as (
SELECT ck.* ,base.unit_quantity
FROM p_InventoryPlanning_t.tyres_install_txn ck -- 
left join (select item_id, max(unit_quantity) as unit_quantity  from ( select 
						upper(ASPCT_VLU_NM) as unit_quantity,
						aspct.item_id,
						aspct.auct_end_dt,
						lower(PRDCT_ASPCT_NM) as lcase_aspect_name
						from
						ITEM_ASPCT_CLSSFCTN ASPCT
						where
						lower(PRDCT_ASPCT_NM) in ('unit quantity' )and NS_TYPE_CD='df'
						 and  aspct.auct_end_dt  >=  date '2021-01-01' group by 1,2,3,4)group by 1 )  base
 						ON ck.ITEM_ID = base.ITEM_ID ) ;
						
--3a. WCFMC_PROFILE
 drop table if exists   p_InventoryPlanning_t.WCFMC_PROFILE  ; 
create table  p_InventoryPlanning_t.WCFMC_PROFILE AS 
 SELECT lower(A.USER_ID) AS SELLER_NAME,
  U.USER_ID AS SELLER_ID,
  lower(A.BUYER_PROFILE) AS BUYER_NAME,
  y.USER_ID AS BUYER_ID,
  A.ORDER_NUMBER  
FROM  P_ICHAN_T.WCFMC_UPLOAD A
left outer JOIN DW_USERs U ON U.USER_SLCTD_ID= A.USER_ID  
left join  DW_USERs y  on  y.USER_SLCTD_ID= a.BUYER_PROFILE;

--3b. add WCFMC flag
drop table if exists   p_InventoryPlanning_t.tyres_install_WCFMC_txn  ;
create table  p_InventoryPlanning_t.tyres_install_WCFMC_txn as (			 
select a.* ,b.retail_year, b.retail_week,
case when b.oms_extrnl_rfrnc_id=a.order_number then 1 else 0 end as WCFMC_txn
from  p_InventoryPlanning_t.WCFMC_PROFILE a ---
inner join  p_InventoryPlanning_t.tyres_install_data  b on b.oms_extrnl_rfrnc_id=a.order_number 			  
); 


-- 4. Tyre installation - transaction count Top level
Drop table if exists   p_InventoryPlanning_t.tyres_install_top ; 
Create table  p_InventoryPlanning_t.tyres_install_top
as 
(select * from (
SELECT	
Active_seller,
CASE WHEN Retail_year  IN (2018,2019) AND RETAIL_WEEK =1 THEN 2019
WHEN Retail_year  IN (2019,2020) AND RETAIL_WEEK =1 THEN 2020
WHEN Retail_year  IN (2020,2021) AND RETAIL_WEEK =53 THEN 2020
WHEN Retail_year  IN (2021,2022) AND RETAIL_WEEK =52 THEN 2021
ELSE Retail_year end as Retail_year ,
cal.AGE_FOR_QTR_ID,
cal.QTR_OF_YEAR_ID,
cal.RETAIL_week,
case when categ_lvl2_id in (20710, 69197, 185066) then 'Electronics'
		when meta_categ_id in (26395) then 'Lifestyle'
		when CATEG_LVL3_ID in (260325) then 'Lifestyle'
		when categ_lvl2_id in (386, 238, 1202, 49019, 183446, 80546, 222, 11731, 1082, 767, 233, 2613, 1188, 1039, 11743, 19169, 2562, 2616, 436, 14737, 2631, 2624, 717, 16486, 61573, 246) then 'Home & Garden'
		when categ_lvl3_id in (35000, 98989) then 'Home & Garden'
		when categ_lvl3_id in (3244) then 'Parts & Accessories'
		when categ_lvl3_id in (124982, 259225,180969, 260509) then 'Business & Industrial'
		when categ_lvl2_id in (46576) then 'Parts & Accessories'
		when bsns_vrtcl_name in ('Collectibles') and meta_categ_id in (220, 237, 550)  then 'Collectibles B2C'
		when bsns_vrtcl_name in ('Collectibles') and categ_lvl2_id in (180250) then 'Collectibles B2C' 
		else bsns_vrtcl_name end as vertical,
meta_categ_id, 
CATEG_LVL2_ID, 
categ_lvl2_name, 
categ_lvl3_name, 
categ_lvl3_id,
categ_lvl4_name, 
categ_lvl4_id,
 sum(QUANTITY) quantity,
count(distinct TRANSACTION_ID) tran_count,
count( distinct ck.item_id) ck_count,
 --item_price,
 sum(GMV_PLAN_USD ) as  GMV_20
--case when CNDTN_ROLLUP_ID = 1 then 'New' when   CNDTN_ROLLUP_ID = 3 then 'Used' else  CNDTN_ROLLUP_ID  end as Condition,
--SUM(CAST(CK.QUANTITY AS DECIMAL(18,2))* CAST(CK.ITEM_PRICE AS DECIMAL(18,2))*CAST(LPR.CURNCY_PLAN_RATE AS DECIMAL(18,2))) AS GMV,
--sum(QUANTITY) as BI
			FROM   DW_CHECKOUT_TRANS ck
			left join ( select seller_id, max(active_seller) active_seller from  p_InventoryPlanning_t.tyres_install_sellers group by 1 ) as  t  on ck.seller_id=t.seller_id
			---left join (  select distinct seller_id from  p_InventoryPlanning_t.tyres_install_active ) as  w  on ck.seller_id=w.seller_id
			INNER JOIN ( select CURNCY_PLAN_RATE,CURNCY_ID from  ACCESS_VIEWS.SSA_CURNCY_PLAN_RATE_DIM group by 1,2)AS LPR
				ON LPR.CURNCY_ID = CK.LSTG_CURNCY_ID
			INNER JOIN ACCESS_VIEWS.DW_CAL_DT CAL ON CAL.CAL_DT = CK.GMV_DT   and retail_year >=2022  and  age_for_rtl_week_id <=-1
			INNER JOIN DW_CATEGORY_GROUPINGS CAT ON CAT.LEAF_CATEG_ID = ck.LEAF_CATEG_ID AND CAT.SITE_ID in(3) AND CAT.SAP_CATEGORY_ID NOT IN (5,7,41,23,-999)
			--ON CAT.LEAF_CATEG_ID = ck.LEAF_CATEG_ID AND CAT.SITE_ID in(3) AND CAT.SAP_CATEGORY_ID NOT IN (5,7,41,23,-999)

			inner JOIN lstg_item_cndtn CNDTN ON ck.item_id = CNDTN.item_id  AND ck.auct_end_dt = CNDTN.AUCT_END_DT
			left outer JOIN DW_USERs U ON U.USER_ID= ck.SELLER_ID 
			
			WHERE 1=1
				and CK.SALE_TYPE NOT IN (10,15)
				--and buyer_id ='1861757700'
				and ck.site_id = 3
				and slr_cntry_id = 3
				and SLR_CNTRY_ID=BYR_CNTRY_ID
				and  CNDTN_ROLLUP_ID = 1
				and CATEG_LVL4_ID =179680 
			--	and  ck.seller_id in (1198964979 , 2053636368,2049396253,2053643116,1086909773)
				--and BUYER_ID= 171694201
				GROUP BY 1,2 ,3 ,4,5,6,7,8,9,10,11,12,13
)
where  	vertical IN ('Parts & Accessories','Business & Industrial'));

-- 5. Seller standard
DROP TABLE IF EXISTS P_InventoryPlanning_T.ETRS_TYRE_SELLER;
CREATE TABLE P_InventoryPlanning_T.ETRS_TYRE_SELLER AS
(
SELECT
usr.user_id,
usr.user_slctd_id,
SPS_SLR_LEVEL_CD,

CASE WHEN SPS_SLR_LEVEL_CD = 1 THEN 'eTRS' 
WHEN SPS_SLR_LEVEL_CD = 2 THEN 'Above Standard' 
WHEN SPS_SLR_LEVEL_CD = 3 THEN 'Standard' 
WHEN SPS_SLR_LEVEL_CD = 4 THEN 'Below Standard' 
ELSE 'No seller standard'END AS SELLER_STANDARD
FROM
prs_secure_v.dw_users usr 
left join ( SELECT USER_ID,
			SPS_SLR_LEVEL_CD, 
				last_eval_Dt from  PRS_RESTRICTED_V.SPS_LEVEL_METRIC_SUM X 
				where SPS_EVAL_TYPE_CD = 1 AND SPS_PRGRM_ID = 3 group by 1,2,3 qualify (row_number() over (partition by user_id order by last_eval_Dt desc))=1)std
    on usr.user_id = std.user_id	
where USR.user_id in ( select SELLER_ID from p_InventoryPlanning_t.tyres_install_sellers_master )
);



-- 6. Seller LISTING LEVEL
Drop table if exists   p_ichan_t.ll_tyre_installation_a ;
create table  p_ichan_t.ll_tyre_installation_a as 
(
select * from (
select 
age_for_rtl_week_id,
--rim_diameter,
--ManufacturerPartNumber,
--Grade,
active_seller,
lst.Slr_ID,
  U.USER_SLCTD_ID,
cal.retail_year,
cal.retail_week,
   CAT.meta_categ_id, 
	 CAT.CATEG_LVL2_ID, 
	 CAT.categ_lvl2_name, 
	  CAT.CATEG_LVL3_ID, 
	 CAT.categ_lvl3_name, 
	  CAT.CATEG_LVL4_ID, 
	 CAT.categ_lvl4_name,
	 count( distinct lst.item_id) as ll
	-- site_id
from  DW_LSTG_ITEM lst --on ck.item_id=lst.item_id 
inner join (select user_id  from p_InventoryPlanning_T.ETRS_TYRE_SELLER where SPS_SLR_LEVEL_CD in (1,2,3) ) etrs on lst.slr_id=etrs.user_id		
inner join ( select distinct seller_id, max(active_seller) active_seller  from   p_InventoryPlanning_t.tyres_install_sellers  group by 1 ) w on lst.slr_id=w.seller_id 
INNER JOIN DW_CATEGORY_GROUPINGS CAT ON CAT.LEAF_CATEG_ID = lst.LEAF_CATEG_ID AND CAT.SITE_ID = lst.ITEM_SITE_ID and cat.site_id =3 and CATEG_LVL4_ID in (179680)-- select distinct site_id from 
INNER JOIN  LSTG_ITEM_CNDTN COND ON COND.AUCT_END_DT = lst.AUCT_END_DT AND COND.ITEM_ID = lst.ITEM_ID AND  COND.CNDTN_ROLLUP_ID =  1  /*THEN 'Used' */  
INNER JOIN (select CAL_DT,RETAIL_YEAR, Retail_week, AGE_FOR_RTL_WEEK_ID from DW_CAL_DT group by 1,2, 3, 4 ) CAL 	ON Lst.AUCT_START_DT < CAL.CAL_DT AND Lst.AUCT_END_DT >= CAL.CAL_DT AND RETAIL_YEAR =2022 -- and AGE_FOR_RTL_WEEK_ID <= -1 
left outer JOIN DW_USERs U ON U.USER_ID= lst.Slr_ID 
inner join (select item_id, max(rim_diameter) as rim_diameter  from ( select 
						upper(ASPCT_VLU_NM) as rim_diameter,
						aspct.item_id,
						aspct.auct_end_dt,
						lower(PRDCT_ASPCT_NM) as lcase_aspect_name
						from
						ITEM_ASPCT_CLSSFCTN ASPCT
						where
						lower(PRDCT_ASPCT_NM) in ('rim diameter' )and NS_TYPE_CD='df'
						 and  aspct.auct_end_dt >=  date '2022-01-01' group by 1,2,3,4) where rim_diameter in (13,14,15,16,17,18,19,20 ,21,22) group by 1 )  base
						 on base.item_id=lst.item_id
where lst.WACKO_YN = 'N'                      
AND lst.AUCT_TYPE_CODE NOT IN (10,15)
and lst.ITEM_CNTRY_ID=3
and lst.SLR_site_ID = 3 -- change country site id if needed 
--- 	and  CATEG_LVL3_ID in (33743)
-- and CATEG_LVL3_ID in (177599,33743)
and CATEG_LVL4_ID in (179680)
and lst.AUCT_end_dt between '2022-01-01' and   '2024-12-31'
group by 1,2,3,4,5,6,7,8,9,10,11,12,13) where retail_year >=2022  and AGE_FOR_RTL_WEEK_ID <= -1 
 );


-- 7. DEFINE INSTALLATION DEFINITION
			
DROP TABLE IF EXISTS   p_InventoryPlanning_t.tyres_install_ADOPTION_AK  ;
CREATE TABLE    p_InventoryPlanning_t.tyres_install_ADOPTION_AK  AS (

SELECT 
A.RETAIL_YEAR,A.RETAIL_WEEK,
A.USER_SLCTD_ID,
SUM(IFNULL(B.INSTALLATION_COUNT,0)) AS INSTALLATION_COUNT_OWN,
SUM(IFNULL(WCF.WCFMC_TXN,0)) AS INSTALLATION_COUNT_WCFMC,
SUM(IFNULL(TYRE_CK_COUNT,0)) AS TYRE_CK_COUNT
--SUM(IFNULL(INSTALLATION_COUNT,0))/SUM(IFNULL(TYRE_CK_COUNT,0)) ADOPTION_RATE
FROM   (
			SELECT 
			RETAIL_YEAR,RETAIL_WEEK, 
			USER_SLCTD_ID,
			COUNT(*) AS TYRE_CK_COUNT  FROM (
			sELECT DISTINCT  RETAIL_YEAR,RETAIL_WEEK, 
			USER_SLCTD_ID,
			BUYER_ID,
			CREATED_DT,TRANSACTION_ID
			FROM p_InventoryPlanning_t.tyres_install_data 
			WHERE   CATEG_LVL4_ID in (179680 ) ) -- tyres and tube /* ,124313*/
			GROUP BY 1,2,3 )A 
LEFT JOIN  ( 
		SELECT 
		RETAIL_YEAR,
			RETAIL_WEEK, 
			USER_SLCTD_ID,
			COUNT(*) AS INSTALLATION_COUNT  
			FROM (
					sELECT DISTINCT  RETAIL_WEEK,RETAIL_YEAR, 
					USER_SLCTD_ID,
					BUYER_ID,
					CREATED_DT,TRANSACTION_ID
					FROM p_InventoryPlanning_t.tyres_install_data WHERE  categ_lvl4_name ='Vehicle Services & Repairs' 
					and USER_SLCTD_ID in (
							'asdatyres',
							'blackcircles_tyres',
							'etyres',
							'ractyres') )
								GROUP BY 1,2,3 ) B ON A.RETAIL_YEAR=B.RETAIL_YEAR AND  A.RETAIL_WEEK=B.RETAIL_WEEK AND A.USER_SLCTD_ID=B.USER_SLCTD_ID
LEFT JOIN (select distinct seller_name,  retail_year, retail_week , count(distinct order_number)  as WCFMC_TXN from p_InventoryPlanning_t.tyres_install_WCFMC_txn group by 1,2, 3 ) WCF  ON A.RETAIL_YEAR=WCF.RETAIL_YEAR AND  A.RETAIL_WEEK=WCF.RETAIL_WEEK AND A.USER_SLCTD_ID=WCF.Seller_name
GROUP BY 1,2,3		) ;


-- 8 Summarise definition
DROP TABLE IF EXISTS   p_InventoryPlanning_t.tyres_install_ADOPTION_CK  ;
CREATE TABLE    p_InventoryPlanning_t.tyres_install_ADOPTION_CK  AS (

SELECT 
RETAIL_YEAR,
RETAIL_WEEK,
USER_SLCTD_ID,
SUM(IFNULL(CAST(INSTALLATION_COUNT_OWN  AS STRING),0)) AS INSTALLATION_COUNT_OWN,
SUM(IFNULL(CAST(INSTALLATION_COUNT_WCFMC AS STRING),0)) AS INSTALLATION_COUNT_WCFMC,
SUM(IFNULL(CAST(TYRE_CK_COUNT AS STRING),0)) AS TYRE_CK_COUNT,
SUM(IFNULL(CAST(INSTALLATION_COUNT_OWN AS STRING),0)+ IFNULL(CAST(INSTALLATION_COUNT_WCFMC AS STRING),0) )/SUM(IFNULL(CAST(TYRE_CK_COUNT AS STRING),0)) ADOPTION_RATE
FROM  p_InventoryPlanning_t.tyres_install_ADOPTION_AK 
GROUP BY 1,2,3);

SELECT CAST(TYRE_CK_COUNT AS FLOAT) AS conv
FROM p_InventoryPlanning_t.tyres_install_ADOPTION_AK;


-- 9. Adoption Rate and KPIs for weekly report
DROP TABLE IF EXISTS   P_ukplan_report_T.pa_tyres_install_WEEKLY  ;
CREATE TABLE    P_ukplan_report_T.pa_tyres_install_WEEKLY  AS 

SELECT 
case when a.retail_year =cal.retail_year then 'Current_Year' else 'Other' end as Year_Filter,
case when  a.retail_year =cal.retail_year and rw.retail_week= a.retail_week then 'RW'  else 'other' end as RW_filter ,
concat('RW', rw.retail_week)  as RW_Label ,
 
A.USER_SLCTD_ID,
A.Active_seller,
CASE WHEN A.USER_SLCTD_ID=PL.USER_SLCTD_ID THEN 'Y' ELSE 'N' END AS ADOPT_WCFMC,
A.Retail_year,
A.Retail_week,

IFNULL(W.INSTALLATION_COUNT_OWN,0) AS INSTALLATION_TRANSACTION,
IFNULL(W.INSTALLATION_COUNT_WCFMC,0) AS INSTALLATION_TRANSACTION_WCFMC,
IFNULL(W.TYRE_CK_COUNT,0)  AS TYRE_TRANSACTION,
IFNULL(W.ADOPTION_RATE,0)  AS ADOPTION_RATE,

A.GMV20_Tyre_Category,
A.GMV20_Services_Category,
g.GMV_Top, 
IFNULL(B.buyer_COUNT,0)AS  buyer_COUNT,
GMV20_Tyre_Category/g.gmv_top as pc_gmv_tyre_categ,
GMV20_Services_Category/g.gmv_top as pc_adoption_tyre_categ,
IFNULL(lst.tyre_ll,0) AS tyre_ll,
IFNULL(lst.tyre_ll,0)/IFNULL(k.ll_top ,0) as pc_tyre_listing
FROM 
( 

select 
USER_SLCTD_ID,
Active_seller,
Retail_year,
Retail_week,
--sum(case when  categ_lvl3_name ='Vehicle Services & Repairs' then QUANTITY ELSE 0 END )ADOPTION,
--sum(case when   CATEG_LVL4_ID =179680 then QUANTITY ELSE 0 END )TOTAL_QUANTITY,
--sum(case when  categ_lvl3_name ='Vehicle Services & Repairs' then QUANTITY ELSE 0 END )/sum(case when   CATEG_LVL4_ID =179680 then QUANTITY ELSE 0 END )ADOPTION_RATE,
sum(case when   CATEG_LVL4_ID =179680 then QUANTITY*item_price ELSE 0 END ) GMV_Tyre_Category,
sum(case when  categ_lvl3_name ='Vehicle Services & Repairs' then QUANTITY * item_price ELSE 0 END ) GMV_Services_Category,

sum(case when   CATEG_LVL4_ID =179680 then GMV_20 ELSE 0 END ) GMV20_Tyre_Category,
sum(case when  categ_lvl3_name ='Vehicle Services & Repairs' then GMV_20 ELSE 0 END ) GMV20_Services_Category
--,sum(case when   CATEG_LVL4_ID =179680 then GMV_20 ELSE 0 END )/

from p_InventoryPlanning_t.tyres_install_data group by 1,2,3 ,4   ) A-- select * from   p_InventoryPlanning_t.tyres_install_data  WHERE USER_SLCTD_ID='blackcircles_tyres' AND BUYER_ID=2010524604 ===CREATED_DT='2022-03-30'--AND  TRANSACTION_ID=1974593668004--ITEM_ID =142534755622 limit 1000;
left join p_InventoryPlanning_t.tyres_install_ADOPTION_CK  W on A.USER_SLCTD_ID=W.USER_SLCTD_ID AND A.Retail_year=W.Retail_year AND A.retail_week=W.RETAIL_WEEK-- select * from   p_InventoryPlanning_t.tyres_install_ADOPTION_CK  WHERE USER_SLCTD_ID='blackcircles_tyres'
LEFT JOIN (select
				RETAIL_YEAR,
				RETAIL_WEEK,
				USER_SLCTD_ID,
				
				count(distinct buyer_id )buyer_COUNT
				from p_InventoryPlanning_t.tyres_install_data 
				WHERE categ_lvl3_name ='Vehicle Services & Repairs' group by 1,2,3) B ON A.RETAIL_YEAR=B.RETAIL_YEAR and A.RETAIL_WEEK=B.RETAIL_WEEK AND A.USER_SLCTD_ID=B.USER_SLCTD_ID
				
Left join ( select Retail_year, retail_week, sum( GMV_20)  as Gmv_top from p_InventoryPlanning_t.tyres_install_top  where  CATEG_LVL4_ID =179680 group by 1,2 ) g on a.retail_year =g.retail_year and  a.retail_week =g.retail_week

left join (
						select
						retail_year,
						slr_id,
						user_slctd_id,
						retail_week,
						sum(case when  CATEG_LVL3_ID =177599 then ll else 0 end )  as vehicle_service,
						sum(case when  CATEG_LVL4_ID =179680 then ll else 0 end )as tyre_ll,---sum(ll) ll ,
						sum(case when CATEG_LVL4_ID =179680  then ll else 0 end ) /sum(ll) as pc_tyre_listing
						from    p_ichan_t.ll_tyre_installation_a 
						where active_seller ='Y'
						group by 1,2,3,4 		) lst on   a.retail_year =lst.retail_year and  a.retail_week =lst.retail_week AND A.USER_SLCTD_ID=lst.USER_SLCTD_ID
						
Left join ( select Retail_year, retail_week, sum( ll)  as ll_top from    p_ichan_t.ll_tyre_installation_a  where  CATEG_LVL4_ID =179680 group by 1,2 ) k on a.retail_year =k.retail_year and  a.retail_week =k.retail_week
left join ( select USER_SLCTD_ID , sum(INSTALLATION_COUNT_WCFMC) WCFMC 
			from p_InventoryPlanning_t.tyres_install_ADOPTION_CK GROUP BY 1 
				HAVING WCFMC>0 ) PL ON A.USER_SLCTD_ID=PL.USER_SLCTD_ID
left join ( select distinct retail_year from DW_CAL_DT where AGE_FOR_WEEK_ID =-1)   cal on a.retail_year =cal.retail_year
left join ( select distinct retail_week from DW_CAL_DT where AGE_FOR_WEEK_ID =-1)   rw on a.retail_week =rw.retail_week
;
-- SELECT retail_week,  sum(ADOPTION_RATE) ADOPTION_RATE , sum(installation_transaction_wcfmc) wcfmc  FROM  P_ukplan_report_T.pa_tyres_install_WEEKLY where retail_year =2023 group by 1 order by 1  LIMIT 1000 ;

-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
-----------------------BUYER
--a.  For the buyers buying installation : their postcode
--b. for each buyer, Business or personal account
--c. 

-- 10. Buyer Transaction level data (Buyer who used the installed services)
drop table if exists   p_InventoryPlanning_t.tyres_install_group_buyer  ; 
create table  p_InventoryPlanning_t.tyres_install_group_buyer
as 
(
SELECT	
  U.USER_SLCTD_ID,
  ck.SELLER_ID,
  ck.BUYER_ID,
  TRANSACTION_ID,
   CK.CREATED_DT,
   ck.item_id, 
CASE WHEN Retail_year  IN (2018,2019) AND RETAIL_WEEK =1 THEN 2019
WHEN Retail_year  IN (2019,2020) AND RETAIL_WEEK =1 THEN 2020
WHEN Retail_year  IN (2020,2021) AND RETAIL_WEEK =53 THEN 2020
WHEN Retail_year  IN (2021,2022) AND RETAIL_WEEK =52 THEN 2021
ELSE Retail_year end as Retail_year ,
cal.AGE_FOR_QTR_ID,
cal.QTR_OF_YEAR_ID,
cal.RETAIL_week,
case when categ_lvl2_id in (20710, 69197, 185066) then 'Electronics'
		when meta_categ_id in (26395) then 'Lifestyle'
		when CATEG_LVL3_ID in (260325) then 'Lifestyle'
		when categ_lvl2_id in (386, 238, 1202, 49019, 183446, 80546, 222, 11731, 1082, 767, 233, 2613, 1188, 1039, 11743, 19169, 2562, 2616, 436, 14737, 2631, 2624, 717, 16486, 61573, 246) then 'Home & Garden'
		when categ_lvl3_id in (35000, 98989) then 'Home & Garden'
		when categ_lvl3_id in (3244) then 'Parts & Accessories'
		when categ_lvl3_id in (124982, 259225,180969, 260509) then 'Business & Industrial'
		when categ_lvl2_id in (46576) then 'Parts & Accessories'
		--when bsns_vrtcl_name in ('Collectibles') and meta_categ_id in (220, 237, 550)  then 'Collectibles B2C'
		--when bsns_vrtcl_name in ('Collectibles') and categ_lvl2_id in (180250) then 'Collectibles B2C' 
		else bsns_vrtcl_name end as vertical,
meta_categ_id, 
CATEG_LVL2_ID, 
categ_lvl2_name, 
categ_lvl3_name, 
categ_lvl3_id,
 QUANTITY,
 item_price,
 GMV_PLAN_USD as  GMV_20
--case when CNDTN_ROLLUP_ID = 1 then 'New' when   CNDTN_ROLLUP_ID = 3 then 'Used' else  CNDTN_ROLLUP_ID  end as Condition,
--SUM(CAST(CK.QUANTITY AS DECIMAL(18,2))* CAST(CK.ITEM_PRICE AS DECIMAL(18,2))*CAST(LPR.CURNCY_PLAN_RATE AS DECIMAL(18,2))) AS GMV,
--sum(QUANTITY) as BI
			FROM   DW_CHECKOUT_TRANS ck
			INNER join ( select distinct BUYER_ID from  p_InventoryPlanning_t.tyres_install_txn WHERE categ_lvl3_name ='Vehicle Services & Repairs'  ) as  t  on ck.BUYER_ID=t.BUYER_ID
			--INNER JOIN ( select CURNCY_PLAN_RATE,CURNCY_ID from  ACCESS_VIEWS.SSA_CURNCY_PLAN_RATE_DIM group by 1,2)AS LPR 				ON LPR.CURNCY_ID = CK.LSTG_CURNCY_ID
			INNER JOIN ACCESS_VIEWS.DW_CAL_DT CAL ON CAL.CAL_DT = CK.GMV_DT   and retail_year >=2019  and  age_for_rtl_week_id <=-1
			INNER JOIN DW_CATEGORY_GROUPINGS CAT ON CAT.LEAF_CATEG_ID = ck.LEAF_CATEG_ID AND CAT.SITE_ID in(3) AND CAT.SAP_CATEGORY_ID NOT IN (5,7,41,23,-999)
			--ON CAT.LEAF_CATEG_ID = ck.LEAF_CATEG_ID AND CAT.SITE_ID in(3) AND CAT.SAP_CATEGORY_ID NOT IN (5,7,41,23,-999)

			inner JOIN lstg_item_cndtn CNDTN ON ck.item_id = CNDTN.item_id  AND ck.auct_end_dt = CNDTN.AUCT_END_DT
			left outer JOIN DW_USERs U ON U.USER_ID= ck.SELLER_ID 
			
			WHERE 1=1
				and CK.SALE_TYPE NOT IN (10,15)
				--and buyer_id ='1861757700'
				and ck.site_id = 3
				and slr_cntry_id = 3
				and SLR_CNTRY_ID=BYR_CNTRY_ID
		
);

-- 11. B2C sellers
drop table if exists   P_ICHAN_T.b2c_sellers;
create table P_ICHAN_T.b2c_sellers as(
sELECT 	seller_ID
			,USER_SLCTD_ID
			, CASE WHEN HIST.USEGM_ID = 206 THEN 'B2C' ELSE 'C2C' END SLR_SEGMENT
			 ,        SUM( GMV_PLAN_USD )as  GMV_20
			,              sum(QUANTITY) as BI
			FROM   DW_CHECKOUT_TRANS ck
		--	INNER JOIN ( select CURNCY_PLAN_RATE,CURNCY_ID from  ACCESS_VIEWS.SSA_CURNCY_PLAN_RATE_DIM group by 1,2)AS SSA				ON SSA.CURNCY_ID = CK.LSTG_CURNCY_ID
			INNER JOIN ACCESS_VIEWS.DW_CAL_DT CAL ON CAL.CAL_DT = CK.GMV_DT  and  age_for_rtl_week_id >= -52  and  age_for_rtl_week_id <=-1 -- and retail_year in (2021) --change here for time period if needed 
			INNER JOIN DW_CATEGORY_GROUPINGS CAT ON CAT.LEAF_CATEG_ID = ck.LEAF_CATEG_ID AND CAT.SITE_ID in(3) AND CAT.SAP_CATEGORY_ID NOT IN (5,7,41,23,-999) 
			inner JOIN lstg_item_cndtn cond ON ck.item_id = cond.item_id  AND ck.auct_end_dt = cond.AUCT_END_DT
			inner  JOIN DW_USEGM_HIST HIST ON HIST.USER_ID=ck.Seller_ID AND HIST.USEGM_GRP_ID  = 48 
			left outer JOIN DW_USERs U ON U.USER_ID= ck.seller_id 
			WHERE 1=1
				and CK.SALE_TYPE NOT IN (10,15)
				and ck.site_id = 3
				and slr_cntry_id = 3
				AND BYR_CNTRY_ID=3
				and HIST.USEGM_ID = 206
				AND bsns_vrtcl_name ='Parts & Accessories'
			GROUP BY 1,2,3);
			
-- 12 Buyer whether new to the tyre installation  category or new to site
 -- to show whos new to the  category /vertical / whos new to site?
DROP TABLE IF EXISTS   p_InventoryPlanning_t.tyres_install_BUYER_cohort  ;
CREATE TABLE    p_InventoryPlanning_t.tyres_install_BUYER_cohort  AS  (
Select a.BUYER_ID,  
case when  a.buyer_id=nw.buyer_id   then 'Y' else 'N' end as New_Tyre_Buyer,
case when  a.buyer_id=ns.buyer_id   then 'Y' else 'N' end as New_Installed_Buyer,
case when  a.buyer_id=np.buyer_id   then 'Y' else 'N' end as New_PA_Buyer,
case when  a.buyer_id=ne.buyer_id   then 'Y' else 'N' end as New_eBay_Buyer,
case when  A.BUYER_ID=B.PRIMARY_USER_ID then 'Y' else 'N' end as B2B_Buyer,
case when  A.BUYER_ID=C.USER_SLCTD_ID then 'Y' else 'N' end as B2C_Seller

from ( select distinct buyer_id from   p_InventoryPlanning_t.tyres_install_group_buyer )  a
left join (Select BUYER_ID , first_quarter from (select BUYER_ID, min(age_for_qtr_id) first_quarter from  p_InventoryPlanning_t.tyres_install_group_buyer where  categ_lvl3_name  ='Wheels, Tyres & Parts'  group by 1  ) where   first_quarter in (0) 		) nw on a.buyer_id=nw.buyer_id 
left join ( Select BUYER_ID , first_quarter from (select BUYER_ID, min(age_for_qtr_id) first_quarter from  p_InventoryPlanning_t.tyres_install_group_buyer where  categ_lvl3_name  ='Vehicle Services & Repairs' group by 1  ) where   first_quarter in (0) ) ns on a.buyer_id=ns.buyer_id 
left join (Select BUYER_ID , first_quarter from (select BUYER_ID, min(age_for_qtr_id) first_quarter from  p_InventoryPlanning_t.tyres_install_group_buyer where  vertical  =  'Parts & Accessories' group by 1  ) where   first_quarter in (0)  			) np on a.buyer_id=np.buyer_id 
left join (Select BUYER_ID , first_quarter from (select BUYER_ID, min(age_for_qtr_id) first_quarter from  p_InventoryPlanning_t.tyres_install_group_buyer  group by 1  ) where   first_quarter in (0) 														) ne on a.buyer_id=ne.buyer_id 
LEFT JOIN ( SELECT DISTINCT PRIMARY_USER_ID FROM p_eupricing_t.ymm_b2b_buyers )  B ON A.BUYER_ID=B.PRIMARY_USER_ID
LEFT JOIN ( SELECT DISTINCT USER_SLCTD_ID FROM P_ICHAN_T.b2c_sellers ) C ON A.BUYER_ID=C.USER_SLCTD_ID
)
;
-- 13. Assign cohorts

DROP TABLE IF EXISTS   p_InventoryPlanning_t.tyres_install_BUYER_new  ;
CREATE TABLE    p_InventoryPlanning_t.tyres_install_BUYER_new  AS  (
select 
case
when  New_Installed_Buyer ='Y'   and New_eBay_Buyer ='Y' then 'Installed_first_time_and_new_to_ebay'
when  New_Installed_Buyer ='Y' and 	New_PA_Buyer ='Y'  then 'Installed_first_time_and_new_to_PA'
when  New_Installed_Buyer ='Y' and 	New_Tyre_Buyer ='Y'  then 'Installed_first_time_and_new_to_Tyre'
else 'Used_Installation_before' end as Buyer_Cohort
,*
from  p_InventoryPlanning_t.tyres_install_BUYER_cohort ) ;

-- a. is the buyer new to the   categ_lvl3_name  ='Wheels, Tyres & Parts'? --236
-- b. is the buyer new to the Installation category? categ_lvl3_name  ='Vehicle Services & Repairs' --598
-- c. Is the buyer new to P&A? -- 44
-- d. Is the buyer new to ebay.co.uk B2C?--21

--14. BUYER INFO
Drop table  if exists  p_InventoryPlanning_t.TYRE_INSTALL_BUYER_GROUP;
create table p_InventoryPlanning_t.TYRE_INSTALL_BUYER_GROUP as(
select distinct TRANSACTION_ID ,
A.BUYER_ID,
CASE WHEN  A.BUYER_ID=B.PRIMARY_USER_ID THEN 'Business Buyer'
WHEN A.BUYER_ID=C.USER_SLCTD_ID THEN 'Business Buyer' ELSE 'All Other Buyer' END AS BUYER_GROUPING,
CASE WHEN A.BUYER_ID=D.BUYER_ID  THEN BUYER_COHORT ELSE 'Not_installation_User' END AS BUYER_COHORT

from ( select * from  p_InventoryPlanning_t.tyres_install_txn where  CATEG_LVL4_ID in (179680) ) A
LEFT JOIN ( SELECT DISTINCT PRIMARY_USER_ID FROM p_eupricing_t.ymm_b2b_buyers )  B ON A.BUYER_ID=B.PRIMARY_USER_ID
LEFT JOIN ( SELECT DISTINCT USER_SLCTD_ID FROM P_ICHAN_T.b2c_sellers ) C ON A.BUYER_ID=C.USER_SLCTD_ID
left join ( select distinct buyer_id, buyer_cohort from   p_InventoryPlanning_t.tyres_install_BUYER_new ) D ON A.BUYER_ID=D.BUYER_ID
);
-- 218216 
--SELECT  BUYER_COHORT, count(distinct buyer_id)   FROM  p_InventoryPlanning_t.TYRE_INSTALL_BUYER_GROUP group by 1 ;
select * from p_InventoryPlanning_t.TYRE_INSTALL_BUYER_GROUP; 


-- 15. find the buyer latest delivery address, order date by desc order and get the transaction_id
Drop table  if exists  p_InventoryPlanning_t.TYRE_INSTALL_BUYER_order;
create table p_InventoryPlanning_t.TYRE_INSTALL_BUYER_order as(
select buyer_id, created_dt,TRANSACTION_ID , order_rank FROM ( 
select 
ROW_NUMBER () OVER (  PARTITION BY buyer_id order by created_dt desc) order_rank  ,
* from  p_InventoryPlanning_t.tyres_install_group_buyer  ) WHERE  order_rank  in ( 1)  ); 

 select * from p_InventoryPlanning_t.TYRE_INSTALL_BUYER_order ;

--- 16. DELIVERY ADDRESS
Drop table  if exists  p_InventoryPlanning_t.TYRE_INSTALL_shipping;
create table p_InventoryPlanning_t.TYRE_INSTALL_shipping as(
   SELECT SSA.CK_TRANS_ID
   ,X.BUYER_ID
    , X.BUYER_GROUPING
	,X.BUYER_COHORT
	, ADR.cntct_name
	, ADR.ZIP
	, ADR.ADDR1_TXT
	, ADR.ADDR2_TXT
	, ADR.CITY_TXT
	, ADR.CNTRY_ID
	, ADR.CNTRY_TXT
	, LBL_AD.CNTCT_NAME AS LBL_CONTACT_NAME
	, LBL_AD.ADDR1_TXT AS LBL_ADDR1
	, LBL_AD.ADDR2_TXT AS LBL_ADDR2
	, LBL_AD.CITY_TXT AS LBL_CITY
	, LBL_AD.CNTRY_TXT AS LBL_COUNTRY
	, LBL_AD.STATE_PRVNC_TXT AS LBL_STATE
	, LBL_AD.PSTL_CODE_TXT AS LBL_ZIP
FROM SSA_SHPMT_TRANS_FACT SSA
LEFT JOIN  PRS_SECURE_V.DW_USER_ADDRESSES ADR
	ON SSA.CK_TO_ADDR_ID = ADR.ADDRESS_ID
LEFT JOIN DW_SHIPMENT SHP
	on SSA.SHIPMENT_ID = SHP.SHIPMENT_ID
LEFT JOIN PRS_SECURE_V.DW_SHPMT_LABEL_ADDR LBL_AD
	ON SHP.TO_ADDRESS_ID = LBL_AD.SHPMT_LABEL_ADDR_ID
-- If SHPMNT_CLNT_CD = 0 then COALESCE(DW_USER_ADRESSES.ADDRESS_ID, DW_SHPMT_SOLD_SHPNG_ADDR.SHPNG_ADDR_ID)
-- if SHPMNT_CLNT_CD = 1 then COALESCE(DW_SHPMT_LABEL_ADDR.SHPMT_LABEL_ADDR_ID, DW_USER_ADRESSES.ADDRESS_ID)
INNER JOIN (select distinct TRANSACTION_ID,BUYER_ID, BUYER_GROUPING ,BUYER_COHORT from  p_InventoryPlanning_t.TYRE_INSTALL_BUYER_GROUP) X ON  SSA.CK_TRANS_ID =X.TRANSACTION_ID
inner join ( select distinct transaction_id from   p_InventoryPlanning_t.TYRE_INSTALL_BUYER_order  ) o on   SSA.CK_TRANS_ID =o.TRANSACTION_ID
WHERE 1=1
-- AND SSA.CK_DT > '2021-01-01'
AND SSA.BUYER_CNTRY_ID = 3 ) ;
--AND SSA.CK_TRANS_ID IN (select distinct TRANSACTION_ID, BUYER_GROUPING from  p_InventoryPlanning_t.TYRE_INSTALL_BUYER_GROUP));

--SELECT distinct buyer_cohort  FROM p_InventoryPlanning_t.TYRE_INSTALL_shipping limit 100; 


---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
---16. Buyer location
-- buyer segmentation
DROP TABLE IF EXISTS   P_ukplan_report_T.tyres_install_HEATMAP  ;
CREATE TABLE    P_ukplan_report_T.tyres_install_HEATMAP  AS 
select a.*,B.BUYER_GROUPING ,B.BUYER_COHORT, B.cntct_name , B.ZIP, B.CITY_TXT
from 
(
select BUYER_ID,  retail_year, retail_week,

sum(case when  categ_lvl3_name ='Vehicle Services & Repairs' then QUANTITY ELSE 0 END )ADOPTION,
sum(case when  categ_lvl3_name ='Wheels, Tyres & Parts' then QUANTITY*item_price ELSE 0 END ) GMV_Tyre_Category,
sum(case when  categ_lvl3_name ='Vehicle Services & Repairs' then QUANTITY * item_price ELSE 0 END ) GMV_Services_Category,
sum( case when vertical='Parts & Accessories' then  QUANTITY * item_price ELSE 0 END) Total_PA_GMV,
sum( case when vertical<>'Parts & Accessories' then  QUANTITY * item_price ELSE 0 END) Other_vertical_GMV

---FROM  p_InventoryPlanning_t.tyres_install_data --- select * from p_InventoryPlanning_t.tyres_install_group_buyer
FROM  p_InventoryPlanning_t.tyres_install_group_buyer --- select * from p_InventoryPlanning_t.tyres_install_group_buyer where retail_year >=2022 and buyer_id='24318164' and retail_week=17
---WHERE  categ_lvl3_name ='Vehicle Services & Repairs' 
where retail_year >=2023 ---and buyer_id='24318164'
GROUP BY 1,2,3 ) A
INNER   join ( select * from (select *,  RANK() OVER (    PARTITION BY BUYER_ID      ORDER BY cntct_name  ) RANK_NO  from (SELECT DISTINCT BUYER_ID, BUYER_GROUPING ,BUYER_COHORT, cntct_name , ZIP, CITY_TXT FROM p_InventoryPlanning_t.TYRE_INSTALL_shipping) )where rank_no =1)  B ON A.BUYER_ID=B.BUYER_ID
 ;
--SELECT * FROM  P_ukplan_report_T.tyres_install_HEATMAP ;
------ buyer profile:

--17. 

-- 18. Recreate seller list in case being dropped
DROP TABLE if exists   p_InventoryPlanning_t.tyres_install_sellers  ; 
CREATE table  p_InventoryPlanning_t.tyres_install_sellers  as (
select distinct ck.seller_id ,
case when  ck.seller_id=w.seller_id_active then 'Y' else 'N' end as active_seller
from  DW_CHECKOUT_TRANS ck 
left outer JOIN DW_USERs U ON U.USER_ID= ck.SELLER_ID 
left join ( select distinct SELLER_ID as seller_id_active from    p_InventoryPlanning_t.tyres_install_active ) w on ck.seller_id=w.seller_id_active
where site_id =3 
and USER_SLCTD_ID in ( select distinct seller_name from P_ICHAN_T.tyre_install_upload )
);

--19. Recreate listing table again incase being dropped
Drop table if exists   p_ichan_t.ll_tyre_installation_a ;
create table  p_ichan_t.ll_tyre_installation_a as (
select * from 
(
select 
--MPN,
--ManufacturerPartNumber,
--Grade,
age_for_rtl_week_id,
active_seller,
lst.Slr_ID,
  U.USER_SLCTD_ID,
cal.retail_year,
cal.retail_week,
   CAT.meta_categ_id, 
	 CAT.CATEG_LVL2_ID, 
	 CAT.categ_lvl2_name, 
	  CAT.CATEG_LVL3_ID, 
	 CAT.categ_lvl3_name, 
	  CAT.CATEG_LVL4_ID, 
	 CAT.categ_lvl4_name,
	 count( distinct lst.item_id) as ll
	-- site_id
from  DW_LSTG_ITEM lst --on ck.item_id=lst.item_id 
INNER JOIN DW_CATEGORY_GROUPINGS CAT ON CAT.LEAF_CATEG_ID = lst.LEAF_CATEG_ID AND CAT.SITE_ID = lst.ITEM_SITE_ID and cat.site_id =3
INNER JOIN  LSTG_ITEM_CNDTN COND ON COND.AUCT_END_DT = lst.AUCT_END_DT AND COND.ITEM_ID = lst.ITEM_ID AND  COND.CNDTN_ROLLUP_ID =  1 
INNER JOIN (select CAL_DT,RETAIL_YEAR, QTR_OF_YEAR_ID,Retail_week, AGE_FOR_RTL_WEEK_ID from DW_CAL_DT group by 1,2, 3, 4,5 ) CAL  ON Lst.AUCT_START_DT < CAL.CAL_DT AND Lst.AUCT_END_DT >= CAL.CAL_DT AND RETAIL_YEAR >= 2022
left join ( select distinct seller_id, max(active_seller) active_seller  from   p_InventoryPlanning_t.tyres_install_sellers  group by 1 ) w on lst.slr_id=w.seller_id 
left outer JOIN DW_USERs U ON U.USER_ID= lst.Slr_ID 
where lst.WACKO_YN = 'N'                      
AND lst.AUCT_TYPE_CODE NOT IN (10,15)
and lst.ITEM_CNTRY_ID=3
and lst.SLR_site_ID = 3 -- change country site id if needed 
--- 	and  CATEG_LVL3_ID in (33743)
and CATEG_LVL3_ID in (177599,33743)
---and lst.AUCT_end_dt >= CURRENT_DATE
group by 1,2,3,4,5,6,7,8,9,10,11,12,13) where  age_for_rtl_week_id <=-1
 );
 


----------------------------------------------------------------
--20. identify new tyre lister  --
-------------------------------------------------------------
Drop table if exists   P_InventoryPlanning_T.tyre_seller_new_listing ;--- select * from   P_InventoryPlanning_T.tyre_seller_new_listing where USER_SLCTD_ID='mygenuin645645';
Create table P_InventoryPlanning_T.tyre_seller_new_listing as   (
Select 
lst.Slr_ID,
U.USER_SLCTD_ID,
CAT.CATEG_LVL4_ID, 
CAT.categ_lvl4_name,
case  when cond.cndtn_rollup_id=1 then 'New'
when cond.cndtn_rollup_id=2 then 'Refurb'   
when cond.cndtn_rollup_id=3 then 'Used'  else 'Other' end  as item_cond,
min(AUCT_START_DT) as first_listing_date
---count( distinct lst.item_id) as LL
from  DW_LSTG_ITEM lst --on ck.item_id=lst.item_id SELECT * FROM DW_LSTG_ITEM  WEHRE  slr_id =1077516705  and lst.AUCT_end_dt >= CURRENT_DATE
INNER JOIN DW_CATEGORY_GROUPINGS CAT ON CAT.LEAF_CATEG_ID = lst.LEAF_CATEG_ID AND CAT.SITE_ID = lst.ITEM_SITE_ID and site_id =3
INNER JOIN  LSTG_ITEM_CNDTN COND ON COND.AUCT_END_DT = lst.AUCT_END_DT AND COND.ITEM_ID = lst.ITEM_ID  ----AND  COND.CNDTN_ROLLUP_ID =  3  /*THEN 'Used' */  
INNER JOIN ACCESS_VIEWS.DW_CAL_DT AS CAL    	ON CAL.CAL_DT =lst.AUCT_START_DT AND retail_year >=2019 and age_for_rtl_week_id <= 0 --  and  age_for_rtl_week_id >= -10
INNER JOIN DW_USEGM_HIST AS HIST          ON HIST.USER_ID = lst.slr_id         AND HIST.USEGM_GRP_ID = 48          AND HIST.USEGM_ID = 206 --B2C only sellers
left outer JOIN DW_USERs U ON U.USER_ID= lst.Slr_ID 
where lst.WACKO_YN = 'N'                      
AND lst.AUCT_TYPE_CODE NOT IN (10,15)
and lst.SLR_site_ID = 3 -- change country site id if needed 
and    CATEG_LVL4_ID in (179680 ) -- tyres and tube /* ,124313*/
and cond.cndtn_rollup_id=1
 group by 1,2,3,4,5
 );

-- 21. New listing This Week  
Drop table  if exists  P_ukplan_report_T.tyre_install_new_listing_seller_id;
Create table P_ukplan_report_T.tyre_install_new_listing_seller_id as   ( 
Select * from (
Select 
CAL.Retail_year,
CAL.Retail_week,
Slr_ID,
USER_SLCTD_ID,
CATEG_LVL4_ID,
categ_lvl4_name,
item_cond,
first_listing_date,
CAL.age_for_rtl_week_id
from  P_InventoryPlanning_T.tyre_seller_new_listing a
left join   ACCESS_VIEWS.DW_CAL_DT CAL ON CAL.CAL_DT =a.first_listing_date  ) 
where age_for_rtl_week_id >=-3
and slr_id not in (select distinct seller_id from p_InventoryPlanning_t.tyres_install_sellers_master )
);

-- 22. extract the live listing count of these new listers
drop table  if exists  P_ukplan_report_T.tyre_install_new_listing_seller;
Create table   P_ukplan_report_T.tyre_install_new_listing_seller as   (select * from (
Select 
Retail_year,
Retail_week, 
AGE_FOR_RTL_WEEK_ID,
lst.Slr_ID,
U.USER_SLCTD_ID,
CAT.CATEG_LVL4_ID, 
CAT.categ_lvl4_name,
case  when cond.cndtn_rollup_id=1 then 'New'
when cond.cndtn_rollup_id=2 then 'Refurb'   
when cond.cndtn_rollup_id=3 then 'Used'  else 'Other' end  as item_cond,
-- min(AUCT_START_DT) as first_listing_date
count( distinct lst.item_id) as LL
from  DW_LSTG_ITEM lst --on ck.item_id=lst.item_id SELECT * FROM DW_LSTG_ITEM  WEHRE  slr_id =1077516705  and lst.AUCT_end_dt >= CURRENT_DATE
INNER JOIN DW_CATEGORY_GROUPINGS CAT ON CAT.LEAF_CATEG_ID = lst.LEAF_CATEG_ID AND CAT.SITE_ID = lst.ITEM_SITE_ID and site_id =3
INNER JOIN  LSTG_ITEM_CNDTN COND ON COND.AUCT_END_DT = lst.AUCT_END_DT AND COND.ITEM_ID = lst.ITEM_ID  ----AND  COND.CNDTN_ROLLUP_ID =  3  /*THEN 'Used' */  
INNER JOIN (select CAL_DT,RETAIL_YEAR, QTR_OF_YEAR_ID,Retail_week, AGE_FOR_RTL_WEEK_ID from DW_CAL_DT group by 1,2, 3, 4,5 ) CAL  ON Lst.AUCT_START_DT < CAL.CAL_DT AND Lst.AUCT_END_DT >= CAL.CAL_DT AND RETAIL_YEAR >= 2022
INNER JOIN DW_USEGM_HIST AS HIST          ON HIST.USER_ID = lst.slr_id         AND HIST.USEGM_GRP_ID = 48          AND HIST.USEGM_ID = 206 --B2C only sellers
left outer JOIN DW_USERs U ON U.USER_ID= lst.Slr_ID 
where lst.WACKO_YN = 'N'       
and slr_id in ( select distinct slr_id from  P_ukplan_report_T.tyre_install_new_listing_seller_id) 
AND lst.AUCT_TYPE_CODE NOT IN (10,15)
and lst.SLR_site_ID = 3 -- change country site id if needed 
and    CATEG_LVL4_ID in (179680 ) -- tyres and tube /* ,124313*/
and cond.cndtn_rollup_id=1
 group by 1,2,3,4,5,6,7,8 ) where  AGE_FOR_RTL_WEEK_ID between -4 and  0
 );
 
