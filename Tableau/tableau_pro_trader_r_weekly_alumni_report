/*
Jira: UKPLAN-216

Title: Pro Trader Alumni Weekly Report 
Author: Tugrul Ates
Date: 2023-07-04
*/


create view P_InventoryPlanning_T.vw_protrader_alumni_weekly_report_data as 

--GMV and CBT
with seller_gmv_cbt as 
(
select 
	t1.slr_id as seller_id
	,t2.seller_name
	,nvl(t2.seller_vertical, '') as seller_vertical
	,nvl(t2.seller_segment, '') as seller_segment
	,t2.report_cohort
	,t2.report_start_retail_year
	,t2.report_start_retail_week
	,t3.retail_week
	,t3.retail_year
	--GMV
	,sum(t1.gmv20_plan) as gmv_plan

	--CBT/GSP
	,sum(
		case when t1.byr_cntry_id != t1.slr_cntry_id then t1.gmv20_plan
		else 0 
		end) as cbt_gmv_plan
	
	
from PRS_RESTRICTED_V.SLNG_TRANS_SUPER_FACT as t1

left join P_InventoryPlanning_T.protrader_alumni_weekly_report_sellers as t2
on t1.slr_id = t2.seller_id 

left join dw_cal_dt as t3
on t1.gmv_dt = t3.CAL_DT

where 1=1

and t1.slr_cntry_id = 3
and t1.ck_wacko_yn = 'N'
and t1.iscore = 1
and t3.retail_year >= 2023
--and t1.slr_id = 306693225
--and t1.slr_id in (784524240, 16662420)
group by 1,2,3,4,5,6,7,8,9
)


--Live Listings and Promoted Listings Adoption
, seller_LL_PLS as 
(
select 
	distinct t1.seller_id 
	,t4.retail_week
	,t4.retail_year
	--LL
	,count(distinct t2.item_id) as Live_Listings


	--Promoted Listings Standard
	,count(distinct
		case
		when (date(t3.end_ts) BETWEEN t4.RETAIL_START_DATE and t4.RETAIL_WK_END_DATE ) or t3.end_ts is null then t2.item_id 
		else null 
		end) as active_promoted_listings

from P_InventoryPlanning_T.protrader_alumni_weekly_report_sellers as t1

left join DW_LSTG_ITEM as t2 
on t1.seller_id = t2.slr_id 

left join PRS_RESTRICTED_V.PL_ADS_CMPGN_ITEM as t3
on t1.seller_id = t3.slr_id
and t2.slr_id = t3.slr_id
and t2.item_id = t3.item_id

left join dw_cal_dt as t4
on t2.auct_start_dt <= t4.cal_dt 
and t2.auct_end_dt >= t4.cal_dt 

where 1=1 

and t2.item_site_id = 3
and t2.wacko_yn = 'N'
and t2.auct_type_code NOT IN (10,15)  --10: CreditPartialSale, 15: AWCredit --> This exclusion logic was taken from "GitHub/uk-planning/Home_Garden/b2c_hg_a_Large Merchant Migration Listings" scrip
and t4.RETAIL_YEAR >= 2023
--and t1.seller_id = 306693225
--and t1.seller_id in (784524240, 16662420)
group by 1,2,3
)

--Price Promotions via Seller Marketing Engine 
,seller_price_promotions as 
(
SELECT 
	t1.seller_id 
	,t1.retail_year 
	,t1.retail_week
	,SUM(GMV) AS gmv_plan_on_promo

FROM P_DLSS_V.GMV_ON_PROMO_TXN as t1

WHERE 1=1
--and t1.seller_id in (select distinct seller_id from P_InventoryPlanning_T.protrader_alumni_weekly_report_sellers )
and t1.retail_year >= 2023
--and t1.seller_id = 306693225
--and t1.seller_id in (784524240, 16662420)
--AND t1.B2C_IND = 1 -- Self identified B2C flag for EU
--AND t1.CK_SLR_CNTRY_ID = 3 -- UK seller transactions
--AND t1.CORE_CAT = 1 -- only core categories
AND
(t1.BO_IND = 1 -- Best offer transactions
OR t1.SIO_IND = 1 -- Seller initiated offer
OR t1.SIO_M2M_IND = 1 -- Seller initiated offer via M2M
OR t1.SHIPPING_DISCOUNT = 32 -- shipping discount triggered
OR t1.ORDER_DISCOUNT = 32 -- order discount triggered
OR t1.SALE_EVENT = 32 -- sale event triggered
OR t1.VOLUME_DISCOUNT_P = 32 -- MB triggered
OR t1.VOLUME_DISCOUNT = 32 -- MB triggered
OR t1.CODED_COUPON_PUBLIC = 32 -- SME Coded coupon triggered
OR t1.CODED_COUPON_PRIVATE = 32 -- SME Coded coupon triggered
OR t1.NEW_MDM_IND = 1 -- Markdown
-- OR t1.STP_NEW_IND = 1 -- Strike through pricing
)
group by 1,2,3
)




select 
	distinct t1.seller_id
	,t1.seller_name
	,t1.seller_vertical
	,t1.seller_segment
	,t1.report_cohort
	,t1.report_start_retail_year
	,t1.report_start_retail_week
	,t1.retail_week
	,t1.retail_year
	,t1.gmv_plan
	,t1.cbt_gmv_plan
	,t2.live_listings
	,t2.active_promoted_listings
	,t3.gmv_plan_on_promo

from seller_gmv_cbt as t1

left join seller_LL_PLS as t2
on t1.seller_id = t2.seller_id 
and t1.retail_year = t2.retail_year
and t1.retail_week = t2.retail_week

left join seller_price_promotions as t3
on t1.seller_id = t3.seller_id 
and t2.seller_id = t3.seller_id 
and t1.retail_year = t3.retail_year
and t2.retail_year = t3.retail_year
and t1.retail_week = t3.retail_week
and t2.retail_week = t3.retail_week
;

-- Testing the data views
--select * from P_InventoryPlanning_T.vw_protrader_alumni_weekly_report_data
--select * from P_InventoryPlanning_T.protrader_alumni_weekly_report_sellers