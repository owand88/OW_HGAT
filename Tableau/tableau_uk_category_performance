-- JIRA:            UKPLAN-372
-- Task:            Tableau: Category Performance Dashboard

-- Author: 			Tugrul Ates
-- Date:            2023-05-24

-- Stakeholder: 	All UK business
-- Description: 	Provides the annual and quarterly Seller Count, GMV, SI and ASP performance details by Vertical, Meta, L2, L3 and L4 levels for the last 4 years

-- Notes:           For the historical GMV data, we will use a materialised table which will only need updating on 1st January in each year
--                  For the current year GMV data, we will use a view
-- 


create table P_ukplan_report_T.category_performance_last_4_years as 

with trnx_data as 
( 
	select
		 cal.RETAIL_YEAR
		,cal.RETAIL_WEEK
		,cal.WEEK_BEG_DT as week_start_date
		,cal.WEEK_END_DT as week_end_date
		,cal.RTL_QTR_OF_RTL_YEAR_ID as quarter_id
		,cat.NEW_VERTICAL as adjusted_vertical
		,nvl(focus.FOCUSED_VERTICAL_LVL1,'') as focus_category_vertical
		,cat.SITE_ID
		,cat.META_CATEG_ID
		,cat.META_CATEG_NAME
		,cat.CATEG_LVL2_ID
		,cat.CATEG_LVL2_NAME
		,cat.CATEG_LVL3_ID
		,cat.CATEG_LVL3_NAME
		,cat.CATEG_LVL4_ID
		,cat.CATEG_LVL4_NAME
		-- ,tran.seller_country_group_name as seller_country
		-- ,upper(cty.cntry_code) as buyer_country
		,tran.SITE_GROUP_NAME as site_country
		,case when tran.SLR_CNTRY_ID != tran.BYR_CNTRY_ID then 'CBT' else 'DOM' end as dom_cbt_flag
		,tran.EU_B2C_C2C_FLAG as b2c_c2c_flag
		,case 
		when tran.ITEM_CNDTN_ID in (1000, 1500, 1750) then 'New'
		when tran.ITEM_CNDTN_ID in (2000, 2010, 2020, 2030, 2500) then 'Refurb'
		when tran.ITEM_CNDTN_ID in (3000, 4000, 5000, 6000, 7000) then 'Used'
		else 'Other'
		end as item_condition_group
		-- ,case
		-- 	when tran.item_cndtn_id = 1000 then 'New'
		-- 	when tran.item_cndtn_id = 1500 then 'New - Other'
		-- 	when tran.item_cndtn_id = 1750 then 'New - With defects'
		-- 	when tran.item_cndtn_id = 2000 then 'Refurb - Certified'
		-- 	when tran.item_cndtn_id = 2010 then 'Refurb - Excellent'
		-- 	when tran.item_cndtn_id = 2020 then 'Refurb - Very Good'
		-- 	when tran.item_cndtn_id = 2030 then 'Refurb - Good'
		-- 	when tran.item_cndtn_id = 2500 then 'Refurb - Seller'			
		-- 	when tran.item_cndtn_id = 3000 then 'Used'
		-- 	when tran.item_cndtn_id = 4000 then 'Used - Very Good'
		-- 	when tran.item_cndtn_id = 5000 then 'Used - Good'
		-- 	when tran.item_cndtn_id = 6000 then 'Used - Acceptable'
		-- 	when tran.item_cndtn_id = 7000 then 'Used - For parts / not working'
		-- 	else 'Other'
		-- 	end as item_condition
		,sum(tran.GMV20_PLAN) as gmv_plan_usd
		,sum(tran.GMV20_SOLD_QUANTITY) as sold_items

	from PRS_RESTRICTED_V.SLNG_TRANS_SUPER_FACT as tran

	join ACCESS_VIEWS.DW_CAL_DT as cal  
		on tran.GMV_DT = cal.CAL_DT 

	join P_INVENTORYPLANNING_T.dw_category_groupings_adj as cat 
		on tran.LEAF_CATEG_ID = cat.LEAF_CATEG_ID 
		and tran.LSTG_SITE_ID = cat.SITE_ID

	left join access_views.focused_vert_txn focus 
		on tran.ITEM_ID=focus.LSTG_ID 
		and tran.CK_TRANS_ID=focus.CK_TRANS_ID 
		and tran.LSTG_SITE_ID = focus.LSTG_SITE_ID 
		and tran.LEAF_CATEG_ID = focus.LEAF_CATEG_ID

	-- left join dw_countries as cty on cty.cntry_id = tran.byr_cntry_id

	where 1=1
		and tran.slr_cntry_id = 3
		and cat.site_id = 3
		and year(tran.gmv_dt) >= year(current_date) - 4  --This is to return the results for the last 4 years
		and year(tran.gmv_dt) < year(current_date)  --This is to return the results for the last 4 years
		--and tran.gmv_dt = '2023-08-12'
		and tran.ck_wacko_yn = 'N'
		and tran.iscore = 1
		and cat.sap_category_id not in (5, 7, 41,23,-999)

	group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20
)



,traffic_data 
(
	select
		 cal.RETAIL_YEAR
		,cal.RETAIL_WEEK
		,cal.RTL_QTR_OF_RTL_YEAR_ID as quarter_id
		,cat.SITE_ID
		,cat.NEW_VERTICAL as adjusted_vertical
		,cat.META_CATEG_ID
		,cat.CATEG_LVL2_ID
		,cat.CATEG_LVL3_ID
		,cat.CATEG_LVL4_ID
		,lstg.EU_B2C_C2C_FLAG as b2c_c2c_flag
		,case when trfc.SITE_ID = lstg.SLR_SITE_ID then 'DOM' else 'CBT' end as dom_cbt_flag
		,case 
		when lstg.ITEM_CNDTN_ID in (1000, 1500, 1750) then 'New'
		when lstg.ITEM_CNDTN_ID in (2000, 2010, 2020, 2030, 2500) then 'Refurb'
		when lstg.ITEM_CNDTN_ID in (3000, 4000, 5000, 6000, 7000) then 'Used'
		else 'Other'
		end as item_condition_group
		,sum(trfc.SRP_IMPRSN_CNT) as srp_imp
		,sum(trfc.SRP_IMPRSN_CNT + trfc.STORE_IMPRSN_CNT) as ttl_imp
		,sum(trfc.TTL_VI_CNT) as ttl_views

	from PRS_restricted_V.SLNG_TRFC_SUPER_FACT as trfc

	join PRS_RESTRICTED_V.SLNG_LSTG_SUPER_FACT as lstg
		on trfc.SELLER_ID = lstg.SLR_ID
		and trfc.ITEM_ID = lstg.ITEM_ID
		and trfc.CAL_DT >= lstg.AUCT_START_DT  -- This is to ensure that we use the traffic data after the item is listed on the website

	join ACCESS_VIEWS.DW_CAL_DT as cal  
		on trfc.CAL_DT = cal.CAL_DT 

	join P_INVENTORYPLANNING_T.dw_category_groupings_adj as cat 
		on trfc.LEAF_CATEG_ID = cat.LEAF_CATEG_ID 
		and trfc.SITE_ID = cat.SITE_ID

	where 1=1
		and lstg.SLR_CNTRY_ID = 3  --This ensures that we are only selecting the traffic data for the UK sellers 
		and cat.site_id = 3
		and year(cal.CAL_DT) >= year(current_date) - 4  --This is to return the results for the last 4 years
		and year(cal.CAL_DT) < year(current_date)  --This is to return the results for the last 4 years	
		--and cal.CAL_DT = '2023-08-12'
		and cat.sap_category_id not in (5, 7, 41,23,-999)

	group by 1,2,3,4,5,6,7,8,9,10,11,12
)




select 
	t1.*
	,t2.srp_imp
	,t2.ttl_imp
	,t2.ttl_views

from trnx_data as t1 

left join traffic_data as t2
	on t1.RETAIL_YEAR = t2.RETAIL_YEAR
	and t1.RETAIL_WEEK = t2.RETAIL_WEEK
	and t1.quarter_id = t2.quarter_id
	and t1.adjusted_vertical = t2.adjusted_vertical
	and t1.SITE_ID = t2.SITE_ID
	and t1.META_CATEG_ID = t2.META_CATEG_ID
	and t1.CATEG_LVL2_ID = t2.CATEG_LVL2_ID
	and t1.CATEG_LVL3_ID = t2.CATEG_LVL3_ID
	and t1.CATEG_LVL4_ID = t2.CATEG_LVL4_ID
	and t1.b2c_c2c_flag = t2.b2c_c2c_flag
	and t1.dom_cbt_flag = t2.dom_cbt_flag
	and t1.item_condition_group = t2.item_condition_group
;




-- Performance table for the Current Year

create view P_ukplan_report_T.category_performance_current_year as

with trnx_data as 
( 
	select
		 cal.RETAIL_YEAR
		,cal.RETAIL_WEEK
		,cal.WEEK_BEG_DT as week_start_date
		,cal.WEEK_END_DT as week_end_date
		,cal.RTL_QTR_OF_RTL_YEAR_ID as quarter_id
		,cat.NEW_VERTICAL as adjusted_vertical
		,nvl(focus.FOCUSED_VERTICAL_LVL1,'') as focus_category_vertical
		,cat.SITE_ID
		,cat.META_CATEG_ID
		,cat.META_CATEG_NAME
		,cat.CATEG_LVL2_ID
		,cat.CATEG_LVL2_NAME
		,cat.CATEG_LVL3_ID
		,cat.CATEG_LVL3_NAME
		,cat.CATEG_LVL4_ID
		,cat.CATEG_LVL4_NAME
		-- ,tran.seller_country_group_name as seller_country
		-- ,upper(cty.cntry_code) as buyer_country
		,tran.SITE_GROUP_NAME as site_country
		,case when tran.SLR_CNTRY_ID != tran.BYR_CNTRY_ID then 'CBT' else 'DOM' end as dom_cbt_flag
		,tran.EU_B2C_C2C_FLAG as b2c_c2c_flag
		,case 
		when tran.ITEM_CNDTN_ID in (1000, 1500, 1750) then 'New'
		when tran.ITEM_CNDTN_ID in (2000, 2010, 2020, 2030, 2500) then 'Refurb'
		when tran.ITEM_CNDTN_ID in (3000, 4000, 5000, 6000, 7000) then 'Used'
		else 'Other'
		end as item_condition_group
		-- ,case
		-- 	when tran.item_cndtn_id = 1000 then 'New'
		-- 	when tran.item_cndtn_id = 1500 then 'New - Other'
		-- 	when tran.item_cndtn_id = 1750 then 'New - With defects'
		-- 	when tran.item_cndtn_id = 2000 then 'Refurb - Certified'
		-- 	when tran.item_cndtn_id = 2010 then 'Refurb - Excellent'
		-- 	when tran.item_cndtn_id = 2020 then 'Refurb - Very Good'
		-- 	when tran.item_cndtn_id = 2030 then 'Refurb - Good'
		-- 	when tran.item_cndtn_id = 2500 then 'Refurb - Seller'			
		-- 	when tran.item_cndtn_id = 3000 then 'Used'
		-- 	when tran.item_cndtn_id = 4000 then 'Used - Very Good'
		-- 	when tran.item_cndtn_id = 5000 then 'Used - Good'
		-- 	when tran.item_cndtn_id = 6000 then 'Used - Acceptable'
		-- 	when tran.item_cndtn_id = 7000 then 'Used - For parts / not working'
		-- 	else 'Other'
		-- 	end as item_condition
		,sum(tran.GMV20_PLAN) as gmv_plan_usd
		,sum(tran.GMV20_SOLD_QUANTITY) as sold_items

	from PRS_RESTRICTED_V.SLNG_TRANS_SUPER_FACT as tran

	join ACCESS_VIEWS.DW_CAL_DT as cal  
		on tran.GMV_DT = cal.CAL_DT 

	join P_INVENTORYPLANNING_T.dw_category_groupings_adj as cat 
		on tran.LEAF_CATEG_ID = cat.LEAF_CATEG_ID 
		and tran.LSTG_SITE_ID = cat.SITE_ID

	left join access_views.focused_vert_txn focus 
		on tran.ITEM_ID=focus.LSTG_ID 
		and tran.CK_TRANS_ID=focus.CK_TRANS_ID 
		and tran.LSTG_SITE_ID = focus.LSTG_SITE_ID 
		and tran.LEAF_CATEG_ID = focus.LEAF_CATEG_ID

	-- left join dw_countries as cty on cty.cntry_id = tran.byr_cntry_id

	where 1=1
		and tran.slr_cntry_id = 3
		and cat.site_id = 3
		and year(tran.gmv_dt) = year(current_date)  --This is to return the results for the current year
		and cal.AGE_FOR_RTL_WEEK_ID <= -1  -- This is to extract the results up to the previous completed week
		--and tran.gmv_dt = '2023-08-12'
		and tran.ck_wacko_yn = 'N'
		and tran.iscore = 1
		and cat.sap_category_id not in (5, 7, 41,23,-999)

	group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20
)



,traffic_data 
(
	select
		 cal.RETAIL_YEAR
		,cal.RETAIL_WEEK
		,cal.RTL_QTR_OF_RTL_YEAR_ID as quarter_id
		,cat.SITE_ID
		,cat.NEW_VERTICAL as adjusted_vertical
		,cat.META_CATEG_ID
		,cat.CATEG_LVL2_ID
		,cat.CATEG_LVL3_ID
		,cat.CATEG_LVL4_ID
		,lstg.EU_B2C_C2C_FLAG as b2c_c2c_flag
		,case when trfc.SITE_ID = lstg.SLR_SITE_ID then 'DOM' else 'CBT' end as dom_cbt_flag
		,case 
		when lstg.ITEM_CNDTN_ID in (1000, 1500, 1750) then 'New'
		when lstg.ITEM_CNDTN_ID in (2000, 2010, 2020, 2030, 2500) then 'Refurb'
		when lstg.ITEM_CNDTN_ID in (3000, 4000, 5000, 6000, 7000) then 'Used'
		else 'Other'
		end as item_condition_group
		,sum(trfc.SRP_IMPRSN_CNT) as srp_imp
		,sum(trfc.SRP_IMPRSN_CNT + trfc.STORE_IMPRSN_CNT) as ttl_imp
		,sum(trfc.TTL_VI_CNT) as ttl_views

	from PRS_restricted_V.SLNG_TRFC_SUPER_FACT as trfc

	join PRS_RESTRICTED_V.SLNG_LSTG_SUPER_FACT as lstg
		on trfc.SELLER_ID = lstg.SLR_ID
		and trfc.ITEM_ID = lstg.ITEM_ID
		and trfc.CAL_DT >= lstg.AUCT_START_DT  -- This is to ensure that we use the traffic data after the item is listed on the website

	join ACCESS_VIEWS.DW_CAL_DT as cal  
		on trfc.CAL_DT = cal.CAL_DT 

	join P_INVENTORYPLANNING_T.dw_category_groupings_adj as cat 
		on trfc.LEAF_CATEG_ID = cat.LEAF_CATEG_ID 
		and trfc.SITE_ID = cat.SITE_ID

	where 1=1
		and lstg.SLR_CNTRY_ID = 3  --This ensures that we are only selecting the traffic data for the UK sellers 
		and cat.site_id = 3
		and year(cal.CAL_DT) = year(current_date)  --This is to return the results for the current year
		and cal.AGE_FOR_RTL_WEEK_ID <= -1  -- This is to extract the results up to the previous completed week
		--and cal.CAL_DT = '2023-08-12'
		and cat.sap_category_id not in (5, 7, 41,23,-999)

	group by 1,2,3,4,5,6,7,8,9,10,11,12
)




select 
	t1.*
	,t2.srp_imp
	,t2.ttl_imp
	,t2.ttl_views

from trnx_data as t1 

left join traffic_data as t2
	on t1.RETAIL_YEAR = t2.RETAIL_YEAR
	and t1.RETAIL_WEEK = t2.RETAIL_WEEK
	and t1.quarter_id = t2.quarter_id
	and t1.adjusted_vertical = t2.adjusted_vertical
	and t1.SITE_ID = t2.SITE_ID
	and t1.META_CATEG_ID = t2.META_CATEG_ID
	and t1.CATEG_LVL2_ID = t2.CATEG_LVL2_ID
	and t1.CATEG_LVL3_ID = t2.CATEG_LVL3_ID
	and t1.CATEG_LVL4_ID = t2.CATEG_LVL4_ID
	and t1.b2c_c2c_flag = t2.b2c_c2c_flag
	and t1.dom_cbt_flag = t2.dom_cbt_flag
	and t1.item_condition_group = t2.item_condition_group
;



-- Conbining the Performance data for Current Year + Previous Years

create view P_ukplan_report_T.category_performance_combined_data as 
select * 
from P_ukplan_report_T.category_performance_last_4_years

union all 

select * 
from P_ukplan_report_T.category_performance_current_year 
;
