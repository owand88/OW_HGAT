
-- select * from dw_Category_groupings where site_id = 3 and categ_lvl2_id = 31786
create table p_hroon_t.makeup_ll
select
retail_year,
retail_week,
	CASE
		WHEN Cast(CK.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 5 THEN 'A. <5'
		WHEN Cast(CK.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 10 THEN 'B. 5-10'
		WHEN Cast(CK.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 15 THEN 'C. 10-15'
		WHEN Cast(CK.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 25 THEN 'D. 15-25'
		WHEN Cast(CK.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 50 THEN 'E. 25-50'
		ELSE 'F.50+' END AS
	PRICE_BUCKET,
	categ_lvl3_name,
	categ_lvl4_name,
	CASE WHEN SPS.SPS_SLR_LEVEL_CD = 1 THEN 'eTRS' WHEN SPS.SPS_SLR_LEVEL_CD = 2 THEN 'Above Standard' WHEN SPS.SPS_SLR_LEVEL_CD = 3 THEN 'Standard' WHEN SPS.SPS_SLR_LEVEL_CD = 4 THEN 'Below Standard' ELSE 'No seller standard'END AS SELLER_STANDARD,
	case when U.USER_DSGNTN_ID=2  then 'B2C' else 'C2C' end as bus_flag,
	segment,
	count(distinct ck.slr_id) as Seller_Count,
	count(distinct ck.item_id) as LL

FROM DW_LSTG_ITEM AS CK

LEFT JOIN 
		(SELECT 
			SLR_ID, 
			case when cust_sgmntn_CD = 7 then 'large merchants'
				when cust_sgmntn_CD = 8 then 'merchants'
				when cust_sgmntn_CD = 9 then 'entrepreneurs'
				when cust_sgmntn_CD = 10 then 'regulars'
				when cust_sgmntn_CD = 11 then 'occasional'
			else'other' end as SEGMENT,
			cust_slr_sgmntn_end_dt,
			CUST_SLR_SGMNTN_BEG_DT

			FROM prs_restricted_v.DNA_CUST_SELLER_SGMNTN_HIST

			WHERE cust_sgmntn_grp_cd = 37 -- uk subsegments
				AND  cust_slr_sgmntn_end_dt > current_date 
				
			GROUP BY 1,2,3,4) a
		ON a.slr_id = ck.slr_id -- seller segmentation

INNER JOIN ( select USEGM_GRP_ID,USEGM_ID,END_DATE,USER_ID,BEG_DATE from DW_USEGM_HIST where 
    USEGM_GRP_ID = 48 
    AND USEGM_ID = 206 --B2C only sellers
    AND END_DATE >= '2015-12-30' group by 1,2,3,4,5   )AS HIST 
    ON HIST.USER_ID = CK.SlR_ID
    AND CK.AUCT_END_DT BETWEEN HIST.BEG_DATE AND HIST.END_DATE
 LEFT JOIN ( select ITEM_ID,CNDTN_ROLLUP_ID from ACCESS_VIEWS.LSTG_ITEM_CNDTN group by 1,2 ) AS CNDTN
        ON CK.ITEM_ID = CNDTN.ITEM_ID
INNER JOIN DW_COUNTRIES CN ON CN.CNTRY_ID = CK.SLR_CNTRY_ID
INNER JOIN ACCESS_VIEWS.GLBL_RPRT_GEO_DIM GEO ON CN.REV_ROLLUP_ID = GEO.REV_ROLLUP_ID 
INNER JOIN DW_CAL_DT CAL ON CK.AUCT_START_DT < CAL.CAL_DT AND CK.AUCT_END_DT >= CAL.CAL_DT AND RETAIL_YEAR in (2019,2020,2021) and AGE_FOR_RTL_WEEK_ID <= -1 
left outer join dw_users u
on ck.slr_id = u.user_id

left join (select a.* from (
select
item_id,
auct_end_dt,
lower(PRDCT_ASPCT_NM) as lcase_aspect_name,
upper(ASPCT_VLU_NM) as BRAND,
ROW_NUMBER() over  ( partition by  aspct.item_id, lcase_aspect_name order by lcase_aspect_name ) as RNum -- To avoid duplicate results, this condition partitions the attribute to to contain only 1 aspect value per attribute  
FROM ITEM_ASPCT_CLSSFCTN ASPCT
where 
lower(PRDCT_ASPCT_NM) in ('brand') and NS_TYPE_CD='df' )a
where RNum = 1
) bbase
					ON ck.ITEM_ID = bbase.ITEM_ID AND ck.AUCT_END_dt = bbase.AUCT_END_DT
	
	
left join (select a.* from (
select
item_id,
auct_end_dt,
lower(PRDCT_ASPCT_NM) as lcase_aspect_name,
upper(ASPCT_VLU_NM) as MODEL,
ROW_NUMBER() over  ( partition by  aspct.item_id, lcase_aspect_name order by lcase_aspect_name ) as RNum -- To avoid duplicate results, this condition partitions the attribute to to contain only 1 aspect value per attribute  
FROM ITEM_ASPCT_CLSSFCTN ASPCT
where 
lower(PRDCT_ASPCT_NM) in ('model') and NS_TYPE_CD='df' )a
where RNum = 1
) bbase1
					ON ck.ITEM_ID = bbase1.ITEM_ID AND ck.AUCT_END_dt = bbase1.AUCT_END_DT


INNER JOIN DW_CATEGORY_GROUPINGS CAT 
	ON CAT.LEAF_CATEG_ID = CK.LEAF_CATEG_ID 
	AND CAT.SITE_ID = 3
	AND CAT.SAP_CATEGORY_ID NOT IN (5,7,41,23,-999)   

LEFT JOIN (select USER_ID,
			SPS_SLR_LEVEL_CD, 
			last_eval_Dt from  PRS_RESTRICTED_V.SPS_LEVEL_METRIC_SUM X 
			where SPS_EVAL_TYPE_CD = 1 AND SPS_PRGRM_ID = 3 group by 1,2,3 qualify (row_number() over (partition by user_id order by last_eval_Dt desc))=1) SPS 
	ON ck.slr_id = SPS.user_id -- seller standards
	
WHERE 1=1
AND  CK.AUCT_end_dt >= '2018-01-01'
and ck.WACKO_YN = 'N'                      
AND CK.AUCT_TYPE_CODE NOT IN (10,15)
AND CK.ITEM_SITE_ID in (3)
and ck.auct_end_dt >= date '2018-01-01'	
and categ_lvl2_id = 31786
and ck.slr_CNTRY_ID in (3)
GROUP BY 1,2,3,4,5,6,7,8
		
		---------------------------------------------------------------------------------------------------------------------------------------------------------
		
drop table if exists P_hroon_T.makeup_gmv;

CREATE TABLE P_hroon_T.makeup_gmv AS (
retail_year,
retail_week,
	CASE
		WHEN Cast(CK.item_price AS DECIMAL(18,2))  < 5 THEN 'A. <5'
		WHEN Cast(CK.item_price AS DECIMAL(18,2))  < 10 THEN 'B. 5-10'
		WHEN Cast(CK.item_price AS DECIMAL(18,2))  < 15 THEN 'C. 10-15'
		WHEN Cast(CK.item_price AS DECIMAL(18,2))  < 25 THEN 'D. 15-25'
		WHEN Cast(CK.item_price AS DECIMAL(18,2))  < 50 THEN 'E. 25-50'
		ELSE 'F.50+' END AS
	PRICE_BUCKET,
	categ_lvl3_name,
	categ_lvl4_name,
	CASE WHEN SPS.SPS_SLR_LEVEL_CD = 1 THEN 'eTRS' WHEN SPS.SPS_SLR_LEVEL_CD = 2 THEN 'Above Standard' WHEN SPS.SPS_SLR_LEVEL_CD = 3 THEN 'Standard' WHEN SPS.SPS_SLR_LEVEL_CD = 4 THEN 'Below Standard' ELSE 'No seller standard'END AS SELLER_STANDARD,
	case when U.USER_DSGNTN_ID=2  then 'B2C' else 'C2C' end as bus_flag,
	segment,
	SUM(CK.ITEM_PRICE*QUANTITY* LPR.CURNCY_PLAN_RATE) AS GMV, 
	SUM(QUANTITY) AS BI,
	count(distinct BUYER_ID) as byr_cnt,
	count(distinct(ck.item_id)) as converted_lll,
	GMV/BI as ASP

FROM DW_CHECKOUT_TRANS AS CK

 LEFT JOIN ( select ITEM_ID,CNDTN_ROLLUP_ID, ITEM_CNDTN_ID from ACCESS_VIEWS.LSTG_ITEM_CNDTN group by 1,2,3 ) AS CNDTN
        ON CK.ITEM_ID = CNDTN.ITEM_ID
		
inner  JOIN ACCESS_VIEWS.SSA_CURNCY_PLAN_RATE_DIM LPR 
	ON CK.LSTG_CURNCY_ID = LPR.CURNCY_ID 
INNER JOIN ACCESS_VIEWS.DW_CAL_DT CAL 
	ON CAL.CAL_DT = CK.CREATED_DT 
	and retail_year in (2021) and AGE_FOR_RTL_WEEK_ID <= -1 
	
left outer join dw_users u
	on ck.seller_id = u.user_id

INNER JOIN DW_CATEGORY_GROUPINGS CAT 
	ON CAT.LEAF_CATEG_ID = CK.LEAF_CATEG_ID 
	AND CAT.SITE_ID = 3
	AND CAT.SAP_CATEGORY_ID NOT IN (5,7,41,23,-999)   

LEFT  JOIN DW_USEGM_HIST HIST ON HIST.USER_ID=ck.Seller_ID 
-- AND HIST.USEGM_ID = 206

WHERE 1=1
	AND CK.CK_WACKO_YN  =  'N'
	AND CK.SALE_TYPE NOT IN (10,15)
	and ck.slr_cntry_id = 3
and ck.byr_cntry_id = 3
and ck.slr_cntry_id = ck.byr_cntry_id
-- AND HIST.USEGM_ID = 206
-- and categ_lvl2_id in (20710, 69197, 185066) 
-- 	and item_cndtn_id in (2000, 2500)
	GROUP BY 1,2,3,4,5,6,7,8,9,10

) )
	
-- WITH DATA PRIMARY INDEX(seller_id, RETAIL_WEEK, RETAIL_YEAR, categ_lvl2_id);
;


