/*Aim:
Global initiative on tackling cancelled sales (Product support for Collectibles - Fabio)
Couldn't do the PR to shout out high ASP sales as transactions might be unpaid or cancellated later on

Ask:
﻿Within CCG (L2: 2536) and Coins (Meta: 11116)
Identify any themes from unpaid transactions and paid transactions, if both could have cancellation request raised hence seeing the cancellation reason
﻿Are there any repeated offenders (same buyers / sellers)
Type of transactions (more in auction sales where there is a rush of winning?)
﻿Impact high ASP (~500?)
 
 Reference provided by April Zhou: 
 Nous UPI dashboar:  http://go/upicps  
 Nous Workbench: https://nous.dss.vip.ebay.com/#/tibet/62eb95a59e1e100074a3aba8
 Nous Cancellation Deep Dive dashboard: https://nous.dss.vip.ebay.com/#/storyboard/601cbb9e18787d017006f683 (wiki: https://wiki.vip.corp.ebay.com/display/DataServicesandSolutions/After+Sale+-+Cancel+-+Nous+Storyboard)

*/
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Examples supplied by Kevin
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--item_id:185346310355; transaction_id:2350182588008; UK seller:1262284038; DE buyer: 854996804; created_dt: 2022-03-22; Wacko transaction; GMV_dt blank; 
--item_id:265142948416; transaction_id:2874181997016; UK seller:1092501278; UK buyer: 2308703026; created_dt: 2022-03-30; Not a Wacko transaction; GMV_dt blank; Seller Requested cancellation

--This dataset excludes all wacko transactions
select * from prs_restricted_v.slng_trans_super_fact
where item_id=185346310355  

--ck_wacko_yn='Y'
select * from access_views.dw_checkout_trans
where item_id in (185346310355,265142948416)  

select * from prs_restricted_v.ebay_trans_rltd_event--transaction level table that supports analysis on Bad Buyer Experience
where trans_id in (2350182588008,2874181997016)

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- All paid/unpaid, wacko/not wacko transactions on CCG / Coins items listed on UK site from UK/non-UK buyers to UK B2C/C2C sellers YTD
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
drop table p_uk_bc_t.CCG_Coins_txn;
create table p_uk_bc_t.CCG_Coins_txn as (
select
ck.created_dt--Date of transaction
,ck.transaction_id
,ck.item_id
,ck.sale_type
,case when ck.sale_type in( 1,2,5,8) then "Auction"
     when ck.sale_type in (7,9) then "Fixed Price"
     else "Other" end as sale_type_desc
,lstg.auct_title
,ck.item_price--Committed price (winning auction price or BIN price) for the transaction in listing currency (£)
,case when cast(ck.item_price as decimal(18,2)) between 0.00 and 5.00 then 'A. £0 - £5'
	  when cast(ck.item_price as decimal(18,2)) <=10.00 then 'B. £5 - £10'
	  when cast(ck.item_price as decimal(18,2)) <=20.00 then 'C. £10 - £20'
	  when cast(ck.item_price as decimal(18,2)) <=50.00 then 'D. £20 - £50'
	  when cast(ck.item_price as decimal(18,2)) <=100.00 then 'E. £50 - £100'
	  when cast(ck.item_price as decimal(18,2)) <= 250.00 then 'F. £100 - £250'
	  when cast(ck.item_price as decimal(18,2)) <= 500.00 then 'G. £250 - £500'
	  when cast(ck.item_price as decimal(18,2)) > 500.00 then 'H. £500 +'
	  else 'N/A' end as item_price_bucket
,cat.meta_categ_id
,cat.meta_categ_name
,cat.categ_lvl2_id
,cat.categ_lvl2_name
,lstg.auct_start_dt
,lstg.auct_end_dt
,ck.GMV_dt--Date when GMV is calculated
,ck.paid_ind
,ck.ck_wacko_yn
,ck.seller_id
,bbe.EU_B2C_C2C_flag
,sps.seller_standard as latest_seller_standard
,ck.buyer_id
,bbe.CBT_ind--Indicate if the seller is located in a different country than the buyer
,bbe.shpmt_free_shpng_ind
,bbe.cncl_yn_ind
,bbe.cncl_rqst_id
,case when bbe.cncl_rqst_id is not null and bbe.cncl_rqstr_type_cd = 1 then 'Seller'
	  when bbe.cncl_rqst_id is not null and bbe.cncl_rqstr_type_cd = 2 then 'Buyer'
	  else null end as cncl_requester
,bbe.cncl_rqst_rsn_cd--Cancel request reason
,case when bbe.cncl_rqst_rsn_cd=18 then "WRONG_SHIPPING_ADDRESS"
	  when bbe.cncl_rqst_rsn_cd=19 then "WRONG_SHIPPING_METHOD"
	  when bbe.cncl_rqst_rsn_cd=20 then "WRONG_PAYMENT_METHOD" 
	  else cr_lkp.rqst_rsn_desc end as rqst_rsn_desc
,bbe.cncl_clsr_rsn_cd--Cancel closure reason
,cc_lkp.clsr_rsn_desc
,sum(coalesce(ck.gmv_plan_usd,0)) as tot_GMV_USD
,sum(coalesce(ck.gmv_lc_amt,0)) as tot_GMV_GBP
,sum(coalesce(ck.quantity,0)) AS tot_BI

from access_views.dw_checkout_trans ck

inner join prs_restricted_v.slng_lstg_super_fact lstg
on ck.item_id=lstg.item_id

inner join (select meta_categ_name,meta_categ_id,categ_lvl2_id,categ_lvl2_name,categ_lvl3_id,categ_lvl3_name,categ_lvl4_id,categ_lvl4_name,leaf_categ_id,leaf_categ_name,site_id
			from access_views.dw_category_groupings 
			where sap_category_id not in (5,7,41,23,-999) 
    		group by 1,2,3,4,5,6,7,8,9,10,11) as cat																
on lstg.leaf_categ_id = cat.leaf_categ_id and cat.site_id = 3 

inner join dw_users  u
on ck.seller_id = u.user_id

inner join access_views.dw_cal_dt cal 
on ck.created_dt=cal.cal_dt and cal.age_for_rtl_year_id=0 and cal.age_for_rtl_week_id <=-1--Till 2022 RW30

left join prs_restricted_v.ebay_trans_rltd_event bbe
on ck.item_id=bbe.item_id and ck.transaction_id=bbe.trans_id

left join po_cncl_rqst_rsn_lkp cr_lkp
on bbe.cncl_rqst_rsn_cd=cr_lkp.rqst_rsn_cd

left join po_cncl_clsr_rsn_lkp cc_lkp
on bbe.cncl_clsr_rsn_cd=cc_lkp.clsr_rsn_cd

left join (select 
		   user_id
		   ,sps_slr_level_cd
		   ,case when sps_slr_level_cd = 1 then 'Top Rated' 
			when sps_slr_level_cd = 2 then 'Above Standard' 
			when sps_slr_level_cd = 3 then 'Standard' 
			when sps_slr_level_cd = 4 then 'Below Standard' 
			else 'No seller standard' end as seller_standard
		   ,last_eval_dt 
		   from prs_restricted_v.sps_level_metric_sum--ETRS (eBay Top Rated Seller)
		   where sps_eval_type_cd = 1 and sps_prgrm_id = 3--Seller Standard evaluation type= Effective; Seller Performance Standard Program ID=UK
		   group by 1,2,3,4 
		   qualify (row_number() over (partition by user_id order by last_eval_dt desc))=1) sps
on ck.seller_id = sps.user_id

where ck.site_id=3
and ck.slr_cntry_id = 3
and (cat.meta_categ_id=11116 or cat.categ_lvl2_id=2536)--Coins or CCG

group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30
)
;

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Explore dataset
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--Kevin's examples
select * 
from p_uk_bc_t.CCG_Coins_txn
where transaction_id in (2350182588008,2874181997016); 

--3,249,856
select count(*) from p_uk_bc_t.CCG_Coins_txn;

--0 row
select item_id,transaction_id,count(*) from p_uk_bc_t.CCG_Coins_txn
group by 1,2
having count(*)>1;

--All single-quantity auction format listings will have transaction_id = 0
--Don't use count distinct on transaction_id if it includes Auctions
select count(*)
from p_uk_bc_t.CCG_Coins_txn
where transaction_id=0

--Either Auction (1,010,995) or Fixed price (2,238,861)
select sale_type_desc,count(*) from p_uk_bc_t.CCG_Coins_txn group by 1;

--Only 120 transactions are WACKO
select paid_ind,ck_wacko_yn,count(*) from p_uk_bc_t.CCG_Coins_txn group by 1,2 order by 3 desc;

--About half of WACKO are Auction, half are Fixed price
select paid_ind,sale_type_desc,count(*) from p_uk_bc_t.CCG_Coins_txn where ck_wacko_yn="Y" group by 1,2 order by 3 desc;

--2,238,861 fixed price transaction and 1,010,995 auction transaction
select 
count(distinct (case when transaction_id <> 0 then transaction_id end)) as fixed_price_txn
,count(case when sale_type_desc='Auction' then item_id end) as auction_txn
,count(distinct (case when sale_type_desc='Auction' then item_id end)) as auction_txn_2
from p_uk_bc_t.CCG_Coins_txn

--Export to Excel, all non-Wacko transactions
select
meta_categ_id
,meta_categ_name
,categ_lvl2_id
,categ_lvl2_name
,paid_ind
,cncl_yn_ind
,rqst_rsn_desc 
,cncl_requester
,item_price_bucket
,count(distinct (case when transaction_id <> 0 then transaction_id end)) as fixed_price_txn
,count(case when sale_type_desc='Auction' then item_id end) as auction_txn
from p_uk_bc_t.CCG_Coins_txn
where 
ck_wacko_yn='N'
group by 1,2,3,4,5,6,7,8,9
order by fixed_price_txn + auction_txn desc;

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- CCG Analysis
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

--36 WACKO transctions (0.002%) out of 2,072,535 CCG transactions
select 
paid_ind
,ck_wacko_yn
,count(*) 
from p_uk_bc_t.CCG_Coins_txn 
where 
categ_lvl2_id=2536
group by 1,2 order by 3 desc;


--YTD (till 2022 RW30), there were 2,072,499 CCG non WACKO transactions (78% fixed price)
select 
count(*)
,count(distinct (case when transaction_id <> 0 then transaction_id end)) as fixed_price_txn
,count(case when sale_type_desc='Auction' then item_id end) as auction_txn
from p_uk_bc_t.CCG_Coins_txn
where 
categ_lvl2_id=2536
and ck_wacko_yn="N";


--98% of paid transactions (79% from fixed priced sales)
--2% of transactions were unpaid, 78% of unpaid come from auction sales			
--Only 3% of all transactions were cancelled  
--75% of cancelled transactions were unpaid (78% from auction sales)
--(buyers of auction products likely to not complete payment and cancel the transaction)			

select 
cncl_yn_ind
,paid_ind
,count(distinct (case when transaction_id <> 0 then transaction_id end)) as fixed_price_txn
,count(case when sale_type_desc='Auction' then item_id end) as auction_txn
from p_uk_bc_t.CCG_Coins_txn
where categ_lvl2_id=2536
and ck_wacko_yn="N"
group by 1,2
order by 1,fixed_price_txn + auction_txn desc;


--Cancellation reason (Unpaid auction sales) << From Export data
--90% of cancellations are from items priced <= £100 (as a reference: same 90% of unpaid CCG transactions are of items <= £100)
--Amongst the unpaid, cancelled transactions from auctions, 89% made by sellers, "Order Unpaid"(42%) and "Buyer asked Cancel" (33%) being majority of the cancellation reasons
--For items<=$50, 'Order Unpaid' (requested by seller) is the most common cancellation reasons but >$50 items have a higher share of 'Buyer Asked Cancel' cancellations
--"Out of stock or cannot fulfill" impacts auction sales more than fixed price sales

--Any repeat offenders in cancellation?
drop table p_uk_bc_t.top_buyer_cancel;
create table p_uk_bc_t.top_buyer_cancel as(
select 
buyer_id
,b.user_slctd_id as buyer_name
,case when CBT_ind=0 then 'UK' else 'Non-UK' end as buyer_country
,count(case when paid_ind=0 then buyer_id end) as unpaid_txn
,count(case when paid_ind=1 then buyer_id end) as paid_txn
,count(case when paid_ind=0 and cncl_yn_ind='Y' then buyer_id end) as unpaid_cancelled_txn
,count(case when paid_ind=1 and cncl_yn_ind='Y' then buyer_id end) as paid_cancelled_txn
,count(*) as tot_txn
,count(case when cncl_yn_ind='Y' then buyer_id end) as tot_cancelled_txn
,round(100*tot_cancelled_txn/tot_txn,2) as  cancelled_perc
,row_number() over (order by tot_cancelled_txn desc) as rank 
from p_uk_bc_t.CCG_Coins_txn a
left join access_views.dw_users b
on a.buyer_id=b.user_id
where categ_lvl2_id=2536
and ck_wacko_yn="N"
group by 1,2,3
having tot_cancelled_txn>0
qualify (row_number() over(order by tot_cancelled_txn desc))<=20
);

select * from p_uk_bc_t.top_buyer_cancel;

--6 out of top 20 buyers incurring cancellations are also sellers, all C2C apart from m.y-collectibles (2217090088) who became a B2C seller on 2022-04-29 and generated 60k GMV from CCG sales
--2 of the sellers are Below Standard
drop table if exists p_uk_bc_t.top_buyer_cancel_alsosell;
create table p_uk_bc_t.top_buyer_cancel_alsosell as(
select 
seller_id
,b.user_slctd_id as seller_name
,c.buyer_country as seller_country
,c.rank
--,EU_B2C_C2C_flag
,latest_seller_standard
,count(*) as transaction
,sum(tot_GMV_USD) as GMV
,sum(tot_BI) as BI
from p_uk_bc_t.CCG_Coins_txn a
left join access_views.dw_users b
on a.seller_id=b.user_id
inner join (select distinct buyer_id,rank,buyer_country from p_uk_bc_t.top_buyer_cancel) c--Top 20 buyers incurred cancellations
on a.seller_id=c.buyer_id
where 
categ_lvl2_id=2536
and ck_wacko_yn="N"
group by 1,2,3,4,5
);

select * from  p_uk_bc_t.top_buyer_cancel_alsosell

--m.y-collectibles (2217090088) became a B2C seller on 2022-04-29
select usegm_grp_id,usegm_id,beg_date,end_date from access_views.dw_usegm_hist 
where user_id=2217090088 order by end_date desc,beg_date desc

--Top 20 buyers incurring cancellations (Export to Excel)
select 
a.rank
,a.buyer_id
,a.buyer_name
,a.buyer_country
,case when b.seller_id is not null then 1 else 0 end as also_sell_CCG
,a.unpaid_txn
,a.paid_txn
,a.unpaid_cancelled_txn
,a.paid_cancelled_txn
,a.tot_txn
,a.tot_cancelled_txn
,a.cancelled_perc
from p_uk_bc_t.top_buyer_cancel a
left join p_uk_bc_t.top_buyer_cancel_alsosell b
on a.buyer_id=b.seller_id
order by rank;

----Top 20 buyers incurring cancellations who also sells in CCG (Export to Excel)
select 
rank
,seller_id
,seller_name
,latest_seller_standard
,transaction as total_CCG_transaction
,GMV as total_CCG_GMV
,BI as total_CCG_BI
from p_uk_bc_t.top_buyer_cancel_alsosell
order by total_CCG_GMV desc;

--4 out of top 20 buyers incurring cancellations do not make payments and cancel their transactions
select 
b.buyer_id
,b.buyer_name
,a.rqst_rsn_desc 
,a.cncl_requester
,a.item_price_bucket
,count(*)
from p_uk_bc_t.CCG_Coins_txn a
inner join p_uk_bc_t.top_buyer_cancel b
on a.buyer_id=b.buyer_id
where categ_lvl2_id=2536
and ck_wacko_yn="N"
and cncl_yn_ind='Y'
and b.buyer_id in 
(1691093845
,2011320072
,2381193934
,190367934)
group by 1,2,3,4,5
order by buyer_id,rqst_rsn_desc,item_price_bucket 



select 
a.rqst_rsn_desc 
--,a.item_price_bucket
,count(*)
from p_uk_bc_t.CCG_Coins_txn a
inner join p_uk_bc_t.top_buyer_cancel b
on a.buyer_id=b.buyer_id
where categ_lvl2_id=2536
and ck_wacko_yn="N"
and cncl_yn_ind='Y'
and b.buyer_id in 
(1691093845
,2011320072
,2381193934
,190367934)
group by 1
order by 2 desc;

--less transactions as item price increases
select 
a.item_price_bucket
,count(*)
from p_uk_bc_t.CCG_Coins_txn a
inner join p_uk_bc_t.top_buyer_cancel b
on a.buyer_id=b.buyer_id
where categ_lvl2_id=2536
and ck_wacko_yn="N"
and cncl_yn_ind='Y'
and b.buyer_id in 
(1691093845
,2011320072
,2381193934
,190367934)
group by 1
order by 2 desc


-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Coins Analysis
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

--84 WACKO transctions (0.01%) out of 1,177,321 Coin transactions
select 
ck_wacko_yn
,count(*) 
,round(100*count(*)/sum(count(*)) over (),2)
from p_uk_bc_t.CCG_Coins_txn 
where 
meta_categ_id=11116
group by 1;


--YTD (till 2022 RW30), there were 1,177,237 Coin non WACKO transactions (53% fixed price)
select 
count(*)
,count(distinct (case when transaction_id <> 0 then transaction_id end)) as fixed_price_txn
,count(case when sale_type_desc='Auction' then item_id end) as auction_txn
from p_uk_bc_t.CCG_Coins_txn
where 
meta_categ_id=11116
and ck_wacko_yn="N";


--97% of paid transactions (55% from fixed priced sales)
--3% of transactions were unpaid, 85% of unpaid come from auction sales			
--Only 3% of all transactions were cancelled  
--77% of cancelled transactions were unpaid (84% from auction sales)
--(buyers of auction products likely to not complete payment and cancel the transaction)			

select 
cncl_yn_ind
,paid_ind
,count(distinct (case when transaction_id <> 0 then transaction_id end)) as fixed_price_txn
,count(case when sale_type_desc='Auction' then item_id end) as auction_txn
from p_uk_bc_t.CCG_Coins_txn
where meta_categ_id=11116
and ck_wacko_yn="N"
group by 1,2
order by 1,fixed_price_txn + auction_txn desc;


--Cancellation reason (Unpaid auction sales) << From Export data
--83% of cancellations are from items priced <= £100 (as a reference: same 80% of unpaid CCG transactions are of items <= £100)
--Amongst the unpaid, cancelled transactions from auctions, 93% made by sellers, "Order Unpaid"(41%) and "Buyer asked Cancel" (33%) being majority of the cancellation reasons
--Same as CCG, For items<=$50, 'Order Unpaid' (requested by seller) is the most common cancellation reasons but >$50 items have a higher share of 'Buyer Asked Cancel' cancellations
--Same as CCG, "Out of stock or cannot fulfill" impacts auction sales more than fixed price sales

--Any repeat offenders in cancellation?
drop table p_uk_bc_t.top_buyer_cancel_Coin;
create table p_uk_bc_t.top_buyer_cancel_Coin as(
select 
buyer_id
,b.user_slctd_id as buyer_name
,case when CBT_ind=0 then 'UK' else 'Non-UK' end as buyer_country
,count(case when paid_ind=0 then buyer_id end) as unpaid_txn
,count(case when paid_ind=1 then buyer_id end) as paid_txn
,count(case when paid_ind=0 and cncl_yn_ind='Y' then buyer_id end) as unpaid_cancelled_txn
,count(case when paid_ind=1 and cncl_yn_ind='Y' then buyer_id end) as paid_cancelled_txn
,count(*) as tot_txn
,count(case when cncl_yn_ind='Y' then buyer_id end) as tot_cancelled_txn
,round(100*tot_cancelled_txn/tot_txn,2) as  cancelled_perc
,row_number() over (order by tot_cancelled_txn desc) as rank 
from p_uk_bc_t.CCG_Coins_txn a
left join access_views.dw_users b
on a.buyer_id=b.user_id
where meta_categ_id=11116
and ck_wacko_yn="N"
group by 1,2,3
having tot_cancelled_txn>0
qualify (row_number() over(order by tot_cancelled_txn desc))<=20
);

select * from p_uk_bc_t.top_buyer_cancel_Coin;

--Only 1 out of top 20 buyers incurring cancellations is also seller, inegl_71 (2301520320) is an Above Standard C2C seller and generated 34k GMV from Coin sales
drop table if exists p_uk_bc_t.top_buyer_cancel_alsosell_Coin;
create table p_uk_bc_t.top_buyer_cancel_alsosell_Coin as(
select 
seller_id
,b.user_slctd_id as seller_name
,c.buyer_country as seller_country
,c.rank
--,EU_B2C_C2C_flag
,latest_seller_standard
,count(*) as transaction
,sum(tot_GMV_USD) as GMV
,sum(tot_BI) as BI
from p_uk_bc_t.CCG_Coins_txn a
left join access_views.dw_users b
on a.seller_id=b.user_id
inner join (select distinct buyer_id,rank,buyer_country from p_uk_bc_t.top_buyer_cancel_Coin) c--Top 20 buyers incurred cancellations
on a.seller_id=c.buyer_id
where 
meta_categ_id=11116
and ck_wacko_yn="N"
group by 1,2,3,4,5
);

select * from p_uk_bc_t.top_buyer_cancel_alsosell_Coin;


--Top 20 buyers incurring cancellations (Export to Excel)
select 
a.rank
,a.buyer_id
,a.buyer_name
,a.buyer_country
,case when b.seller_id is not null then 1 else 0 end as also_sell_CCG
,a.unpaid_txn
,a.paid_txn
,a.unpaid_cancelled_txn
,a.paid_cancelled_txn
,a.tot_txn
,a.tot_cancelled_txn
,a.cancelled_perc
from p_uk_bc_t.top_buyer_cancel_Coin a
left join p_uk_bc_t.top_buyer_cancel_alsosell_Coin b
on a.buyer_id=b.seller_id
order by rank;

----Top 20 buyers incurring cancellations who also sells in Coin (Export to Excel)
select 
rank
,seller_id
,seller_name
,latest_seller_standard
,transaction as total_CCG_transaction
,GMV as total_CCG_GMV
,BI as total_CCG_BI
from p_uk_bc_t.top_buyer_cancel_alsosell_Coin
order by total_CCG_GMV desc;


-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Follow Up questions after presenting on 2022-08-10
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--Top line CCG transaction breakdown for £100+ bucket and £1000+ bucket
--Top 100 buyers for CCG with the highest number of cancellation
--Raw data for CCG £1000+

--Top line (1206 transactions)
select 
cncl_yn_ind
,paid_ind
,case when cast(item_price as decimal(18,2)) between 0.00 and 1000.00 then '£0 - £1000'
	  when cast(item_price as decimal(18,2)) > 1000.00 then '£1000 +'
	  else 'N/A' end as price_bucket
,count(distinct (case when transaction_id <> 0 then transaction_id end)) as fixed_price_txn
,count(case when sale_type_desc='Auction' then item_id end) as auction_txn
from p_uk_bc_t.CCG_Coins_txn
where categ_lvl2_id=2536
and ck_wacko_yn="N"
group by 1,2,3
order by 1,fixed_price_txn + auction_txn desc;

create table p_uk_bc_t.top_buyer_cancel_CCG_1000plus as (
select 
buyer_id
,b.user_slctd_id as buyer_name
,case when CBT_ind=0 then 'UK' else 'Non-UK' end as buyer_country
,count(case when paid_ind=0 then buyer_id end) as unpaid_txn
,count(case when paid_ind=1 then buyer_id end) as paid_txn
,count(case when paid_ind=0 and cncl_yn_ind='Y' then buyer_id end) as unpaid_cancelled_txn
,count(case when paid_ind=1 and cncl_yn_ind='Y' then buyer_id end) as paid_cancelled_txn
,count(*) as tot_txn
,count(case when cncl_yn_ind='Y' then buyer_id end) as tot_cancelled_txn
,round(100*tot_cancelled_txn/tot_txn,2) as  cancelled_perc
,row_number() over (order by tot_cancelled_txn desc) as rank 
from p_uk_bc_t.CCG_Coins_txn a
left join access_views.dw_users b
on a.buyer_id=b.user_id
where categ_lvl2_id=2536
and ck_wacko_yn="N"
and cast(item_price as decimal(18,2)) > 1000.00
group by 1,2,3
);

--931 buyers of £1000+ items
select count(*),count(distinct buyer_id) from p_uk_bc_t.top_buyer_cancel_CCG_1000plus;

--251 incurred at least 1 cancellation, 680 (73%) without cancellation
select 
case when tot_cancelled_txn>0 then 1 else 0 end as cancelled
,count(*)
,count(*)/sum(count(*)) over()
from p_uk_bc_t.top_buyer_cancel_CCG_1000plus
group by 1

drop table p_uk_bc_t.top_buyer_cancel_alsosell_CCG_1000plus;
create table p_uk_bc_t.top_buyer_cancel_alsosell_CCG_1000plus as(
select 
seller_id
,b.user_slctd_id as seller_name
,c.buyer_country as seller_country
,c.rank
,a.latest_seller_standard
,min(a.EU_B2C_C2C_flag) as B2C_C2C
,count(*) as transaction
,sum(tot_GMV_USD) as GMV
,sum(tot_BI) as BI
from p_uk_bc_t.CCG_Coins_txn a
left join access_views.dw_users b
on a.seller_id=b.user_id
inner join (select distinct buyer_id,rank,buyer_country from p_uk_bc_t.top_buyer_cancel_CCG_1000plus) c
on a.seller_id=c.buyer_id
where 
categ_lvl2_id=2536
and ck_wacko_yn="N"
group by 1,2,3,4,5
);

--238 buyers are also sellers
select count(*),count(distinct seller_id) from p_uk_bc_t.top_buyer_cancel_alsosell_CCG_1000plus;
--pokichloe is a top rated B2C seller who generated 146K GMV from CCG sales
select * from p_uk_bc_t.top_buyer_cancel_alsosell_CCG_1000plus
order by GMV desc;



--Buyers (Export to Excel)
select 
a.rank
,a.buyer_id
,a.buyer_name
,a.buyer_country
,a.unpaid_txn
,a.paid_txn
,a.unpaid_cancelled_txn
,a.paid_cancelled_txn
,a.tot_txn
,a.tot_cancelled_txn
,a.cancelled_perc

,case when b.seller_id is not null then 1 else 0 end as also_sell_CCG
,b.B2C_C2C
,b.latest_seller_standard
,b.GMV as CCG_GMV_sale
,transaction as CCG_transaction_sale

from p_uk_bc_t.top_buyer_cancel_CCG_1000plus a
left join p_uk_bc_t.top_buyer_cancel_alsosell_CCG_1000plus b
on a.buyer_id=b.seller_id
order by rank;


--All 1206 CCG £1000+ transactions (Export to Excel)
select 
created_dt as transaction_created_dt
,transaction_id
,paid_ind
,GMV_dt
,item_id
,sale_type_desc
,auct_title as listing_title
,item_price
,auct_start_dt as listing_start_dt
,auct_end_dt as listing_end_dt
,seller_id
,buyer_id
,cncl_yn_ind
,cncl_rqst_id
,cncl_requester
,rqst_rsn_desc
from p_uk_bc_t.CCG_Coins_txn
where categ_lvl2_id=2536
and ck_wacko_yn="N"
and cast(item_price as decimal(18,2)) > 1000.00
order by 1,2;

/*----------------------------------------------------------------------------------------------------------------------------------------------
Gabby's Analysis 
4/10/2022
Questions from Kevin - wants to see all buyers with more than 20 CCG transactions and then sort on the UPI and cancellation rates
----------------------------------------------------------------------------------------------------------------------------------------------*/

-- Get total number of distinct buyers that have made a CCG/Coins purchase in the last year/quarter
SELECT 
	c.RETAIL_YEAR
-- 	,c.QTR_OF_YEAR_ID
	,count(distinct buyer_id)

FROM 		p_uk_bc_t.CCG_Coins_txn a

LEFT JOIN 	access_views.dw_users b
ON 			a.buyer_id = b.user_id 

INNER JOIN 	ACCESS_VIEWS.DW_CAL_DT c
ON 			A.created_dt = c.CAL_DT

WHERE 		1=1
AND			categ_lvl2_id = 2536 -- CCG
-- AND			a.meta_categ_id = 11116 --Coins 
AND 		ck_wacko_yn = "N"

GROUP BY 	1--, 2
;


--------------------------------------------------------------------------------------------------------------------------------------
-- CCG Analysis
--------------------------------------------------------------------------------------------------------------------------------------

-- Get total number of CCG items bought per seller in the last year/quarter
with base_data as 
(
	SELECT 
		c.RETAIL_YEAR
-- 		,c.QTR_OF_YEAR_ID
		,buyer_id
		,b.user_slctd_id as buyer_name
		,CASE WHEN CBT_ind = 0 THEN 'UK' ELSE 'Non-UK' END as buyer_country
		,Count(case when paid_ind=0 then buyer_id end) as unpaid_txn
		,count(case when paid_ind=1 then buyer_id end) as paid_txn
		,count(case when paid_ind=0 and cncl_yn_ind='Y' then buyer_id end) as unpaid_cancelled_txn
		,count(case when paid_ind=1 and cncl_yn_ind='Y' then buyer_id end) as paid_cancelled_txn
		,count(*) as tot_txn
		,count(case when cncl_yn_ind='Y' then buyer_id end) as tot_cancelled_txn
		,round(100*tot_cancelled_txn/tot_txn,2) as  cancelled_perc
		,row_number() over (order by tot_cancelled_txn desc) as rank 

	FROM 		p_uk_bc_t.CCG_Coins_txn a

	LEFT JOIN 	access_views.dw_users b
	ON 			a.buyer_id = b.user_id 

	INNER JOIN 	ACCESS_VIEWS.DW_CAL_DT c
	ON 			A.created_dt = c.CAL_DT

	WHERE 		1=1
	AND			categ_lvl2_id = 2536 -- CCG
	AND 		ck_wacko_yn = "N"

	GROUP BY 	1,2,3,4
	HAVING 		tot_txn > 20 -- 20 has been defined by Kevin, will need to limit enough so that the number of rows can be exported 
) 

-- Summarise above table
select 
	count(*) as Tot_Num_Buyers
	,sum(case when tot_cancelled_txn > 0 then 1 else 0 end) as Num_Byrs_at_least_1_cncl
	,sum(case when unpaid_cancelled_txn > 0 then 1 else 0 end) as Num_Byrs_at_least_1_unpaid_cncl
	,sum(case when tot_cancelled_txn > 0 then 1 else 0 end) / count(*) as Tot_cncl_freq
	,sum(case when unpaid_cancelled_txn > 0 then 1 else 0 end) / count(*) as Tot_unpaid_cncl_freq

from base_data
;

-- select all data from above table 
select * from base_data order by 7 desc
;



--------------------------------------------------------------------------------------------------------------------------------------
-- Coins Analysis 
--------------------------------------------------------------------------------------------------------------------------------------

-- Get total number of coin items bought per seller in the last year/quarter
with base_data as 
(
	SELECT 
		c.RETAIL_YEAR
-- 		,c.QTR_OF_YEAR_ID
		,buyer_id
		,b.user_slctd_id as buyer_name
		,CASE WHEN CBT_ind = 0 THEN 'UK' ELSE 'Non-UK' END as buyer_country
		,Count(case when paid_ind=0 then buyer_id end) as unpaid_txn
		,count(case when paid_ind=1 then buyer_id end) as paid_txn
		,count(case when paid_ind=0 and cncl_yn_ind='Y' then buyer_id end) as unpaid_cancelled_txn
		,count(case when paid_ind=1 and cncl_yn_ind='Y' then buyer_id end) as paid_cancelled_txn
		,count(*) as tot_txn
		,count(case when cncl_yn_ind='Y' then buyer_id end) as tot_cancelled_txn
		,round(100*tot_cancelled_txn/tot_txn,2) as  cancelled_perc
		,row_number() over (order by tot_cancelled_txn desc) as rank 

	FROM 		p_uk_bc_t.CCG_Coins_txn a

	LEFT JOIN 	access_views.dw_users b
	ON 			a.buyer_id = b.user_id 

	INNER JOIN 	ACCESS_VIEWS.DW_CAL_DT c
	ON 			A.created_dt = c.CAL_DT

	WHERE 		1=1
	AND			a.meta_categ_id = 11116 -- Coins
	AND 		ck_wacko_yn = "N"

	GROUP BY 	1,2,3,4
	HAVING 		tot_txn > 20 -- 20 has been defined by Kevin, will need to limit enough so that the number of rows can be exported 
) 

-- Summarise above table
select 
	count(*) as Tot_Num_Buyers
	,sum(case when tot_cancelled_txn > 0 then 1 else 0 end) as Num_Byrs_at_least_1_cncl
	,sum(case when unpaid_cancelled_txn > 0 then 1 else 0 end) as Num_Byrs_at_least_1_unpaid_cncl
	,sum(case when tot_cancelled_txn > 0 then 1 else 0 end) / count(*) as Tot_cncl_freq
	,sum(case when unpaid_cancelled_txn > 0 then 1 else 0 end) / count(*) as Tot_unpaid_cncl_freq

from base_data
;

-- select all data from above table 
select * from base_data order by 7 desc
;






































