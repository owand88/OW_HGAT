create table p_hroon_t.bike_gmv
SELECT   
		CAL.RETAIL_YEAR,
		CAL.RETAIL_WEEK,
		BikeType,
		FrameSize,
		Department,
		BRAND,
		case when retail_week <= 42 then 1 else 0 end as flag_week,
		SUM(ITEM_PRICE*QUANTITY* LPR.CURNCY_PLAN_RATE) AS GMV

	FROM ACCESS_VIEWS.DW_CHECKOUT_TRANS AS CK

		INNER JOIN ACCESS_VIEWS.SSA_CURNCY_PLAN_RATE_DIM LPR 
			ON CK.LSTG_CURNCY_ID = LPR.CURNCY_ID

		INNER JOIN ACCESS_VIEWS.DW_CAL_DT CAL 
			ON CAL.CAL_DT = CK.CREATED_DT 
			and retail_year in (2019,2020,2021) 



	INNER JOIN ACCESS_VIEWS.DW_CATEGORY_GROUPINGS CAT 
		ON CAT.LEAF_CATEG_ID = CK.LEAF_CATEG_ID 
		AND CAT.SITE_ID = 3
		AND CAT.SAP_CATEGORY_ID NOT IN (5,7,41,23,-999)

		left join
			(select a.* from (
			select
			item_id,
			auct_end_dt,
			lower(PRDCT_ASPCT_NM) as lcase_aspect_name,
			upper(ASPCT_VLU_NM) as biketype,
			ROW_NUMBER() over  ( partition by  aspct.item_id, lcase_aspect_name order by lcase_aspect_name ) as RNum -- To avoid duplicate results, this condition partitions the attribute to to contain only 1 aspect value per attribute
			FROM ACCESS_VIEWS.ITEM_ASPCT_CLSSFCTN ASPCT
			where
			lower(PRDCT_ASPCT_NM) in ('bike type') and NS_TYPE_CD='df' )a
			where RNum = 1
			) biketype
			on  ck.ITEM_ID = biketype.ITEM_ID
			and ck.auct_end_dt = biketype.auct_end_Dt

		left join
			(select a.* from (
			select
			item_id,
			auct_end_dt,
			lower(PRDCT_ASPCT_NM) as lcase_aspect_name,
			upper(ASPCT_VLU_NM) as FrameSize,
			ROW_NUMBER() over  ( partition by  aspct.item_id, lcase_aspect_name order by lcase_aspect_name ) as RNum -- To avoid duplicate results, this condition partitions the attribute to to contain only 1 aspect value per attribute
			FROM ACCESS_VIEWS.ITEM_ASPCT_CLSSFCTN ASPCT
			where
			lower(PRDCT_ASPCT_NM) in ('frame size') and NS_TYPE_CD='df' )a
			where RNum = 1
			) FrameSize
			on  ck.ITEM_ID = FrameSize.ITEM_ID
			and ck.auct_end_dt = FrameSize.auct_end_Dt

		left join
			(select a.* from (
			select
			item_id,
			auct_end_dt,
			lower(PRDCT_ASPCT_NM) as lcase_aspect_name,
			upper(ASPCT_VLU_NM) as Department,
			ROW_NUMBER() over  ( partition by  aspct.item_id, lcase_aspect_name order by lcase_aspect_name ) as RNum -- To avoid duplicate results, this condition partitions the attribute to to contain only 1 aspect value per attribute
			FROM ACCESS_VIEWS.ITEM_ASPCT_CLSSFCTN ASPCT
			where
			lower(PRDCT_ASPCT_NM) in ('department') and NS_TYPE_CD='df' )a
			where RNum = 1
			) Department
			on  ck.ITEM_ID = Department.ITEM_ID
			and ck.auct_end_dt = Department.auct_end_Dt

		left join
			(select a.* from (
			select
			item_id,
			auct_end_dt,
			lower(PRDCT_ASPCT_NM) as lcase_aspect_name,
			upper(ASPCT_VLU_NM) as BRAND,
			ROW_NUMBER() over  ( partition by  aspct.item_id, lcase_aspect_name order by lcase_aspect_name ) as RNum -- To avoid duplicate results, this condition partitions the attribute to to contain only 1 aspect value per attribute
			FROM ACCESS_VIEWS.ITEM_ASPCT_CLSSFCTN ASPCT
			where
			lower(PRDCT_ASPCT_NM) in ('brand') and NS_TYPE_CD='df' )a
			where RNum = 1
			) t0
			on  ck.ITEM_ID = t0.ITEM_ID
			and ck.auct_end_dt = t0.auct_end_Dt
			
	WHERE 1=1
		AND CK.CK_WACKO_YN  =  'N'
		AND CK.SALE_TYPE NOT IN (10,15)
		AND CK.SITE_ID = 3
		AND CK.SLR_CNTRY_ID = 3
		AND ck.byr_cntry_id =3
		AND CK.SLR_CNTRY_ID = ck.byr_cntry_id 
		AND CAT.CATEG_LVL3_ID = 177831

	GROUP BY 1,2,3,4,5,6,7;



------------------------------------------------------------------------------------------------------
create table p_hroon_t.bike_ll
SELECT
		CAL.RETAIL_YEAR,
		CAL.RETAIL_WEEK,
		BikeType,
		FrameSize,
		Department,
		BRAND,
		case when retail_week <= 42 then 1 else 0 end as flag_week,
		count(distinct(ck.item_id)) as LL

	FROM DW_LSTG_ITEM CK 

	 LEFT JOIN ( select ITEM_ID,CNDTN_ROLLUP_ID from ACCESS_VIEWS.LSTG_ITEM_CNDTN group by 1,2 ) AS CNDTN
			ON CK.ITEM_ID = CNDTN.ITEM_ID
			
	INNER JOIN DW_LSTG_ITEM D 
			ON ck.ITEM_ID = D.ITEM_ID 
			AND ck.AUCT_END_DT = D.AUCT_END_DT
			
	INNER JOIN DW_CATEGORY_GROUPINGS CAT 
			ON CAT.LEAF_CATEG_ID = Ck.LEAF_CATEG_ID 
			AND CAT.SITE_ID = CK.ITEM_SITE_ID 
			and cat.site_id = 3 
			
	INNER JOIN DW_COUNTRIES CN ON CN.CNTRY_ID = CK.SLR_CNTRY_ID
	
	INNER JOIN ACCESS_VIEWS.GLBL_RPRT_GEO_DIM GEO ON CN.REV_ROLLUP_ID = GEO.REV_ROLLUP_ID
	
	INNER JOIN DW_CAL_DT CAL
			ON CK.AUCT_START_DT < CAL.CAL_DT
			AND CK.AUCT_END_DT >= CAL.CAL_DT
			and retail_year in (2020,2019,2021)
			
			
	left outer join dw_users u
			on ck.slr_id = u.user_id
	
	
		left join
			(select a.* from (
			select
			item_id,
			auct_end_dt,
			lower(PRDCT_ASPCT_NM) as lcase_aspect_name,
			upper(ASPCT_VLU_NM) as biketype,
			ROW_NUMBER() over  ( partition by  aspct.item_id, lcase_aspect_name order by lcase_aspect_name ) as RNum -- To avoid duplicate results, this condition partitions the attribute to to contain only 1 aspect value per attribute
			FROM ACCESS_VIEWS.ITEM_ASPCT_CLSSFCTN ASPCT
			where
			lower(PRDCT_ASPCT_NM) in ('bike type') and NS_TYPE_CD='df' )a
			where RNum = 1
			) biketype
			on  ck.ITEM_ID = biketype.ITEM_ID
			and ck.auct_end_dt = biketype.auct_end_Dt

		left join
			(select a.* from (
			select
			item_id,
			auct_end_dt,
			lower(PRDCT_ASPCT_NM) as lcase_aspect_name,
			upper(ASPCT_VLU_NM) as FrameSize,
			ROW_NUMBER() over  ( partition by  aspct.item_id, lcase_aspect_name order by lcase_aspect_name ) as RNum -- To avoid duplicate results, this condition partitions the attribute to to contain only 1 aspect value per attribute
			FROM ACCESS_VIEWS.ITEM_ASPCT_CLSSFCTN ASPCT
			where
			lower(PRDCT_ASPCT_NM) in ('frame size') and NS_TYPE_CD='df' )a
			where RNum = 1
			) FrameSize
			on  ck.ITEM_ID = FrameSize.ITEM_ID
			and ck.auct_end_dt = FrameSize.auct_end_Dt

		left join
			(select a.* from (
			select
			item_id,
			auct_end_dt,
			lower(PRDCT_ASPCT_NM) as lcase_aspect_name,
			upper(ASPCT_VLU_NM) as Department,
			ROW_NUMBER() over  ( partition by  aspct.item_id, lcase_aspect_name order by lcase_aspect_name ) as RNum -- To avoid duplicate results, this condition partitions the attribute to to contain only 1 aspect value per attribute
			FROM ACCESS_VIEWS.ITEM_ASPCT_CLSSFCTN ASPCT
			where
			lower(PRDCT_ASPCT_NM) in ('department') and NS_TYPE_CD='df' )a
			where RNum = 1
			) Department
			on  ck.ITEM_ID = Department.ITEM_ID
			and ck.auct_end_dt = Department.auct_end_Dt

		left join
			(select a.* from (
			select
			item_id,
			auct_end_dt,
			lower(PRDCT_ASPCT_NM) as lcase_aspect_name,
			upper(ASPCT_VLU_NM) as BRAND,
			ROW_NUMBER() over  ( partition by  aspct.item_id, lcase_aspect_name order by lcase_aspect_name ) as RNum -- To avoid duplicate results, this condition partitions the attribute to to contain only 1 aspect value per attribute
			FROM ACCESS_VIEWS.ITEM_ASPCT_CLSSFCTN ASPCT
			where
			lower(PRDCT_ASPCT_NM) in ('brand') and NS_TYPE_CD='df' )a
			where RNum = 1
			) t0
			on  ck.ITEM_ID = t0.ITEM_ID
			and ck.auct_end_dt = t0.auct_end_Dt
			
	WHERE CK.AUCT_end_dt >= '2017-01-01'
		and ck.WACKO_YN = 'N'                      
		AND CK.AUCT_TYPE_CODE NOT IN (10,15)
		AND CK.ITEM_SITE_ID = 3
		AND CAT.CATEG_LVL3_ID = 177831
		and ck.auct_end_dt >= date '2018-01-01'
		and ck.SLR_CNTRY_ID = 3
		group by 1,2,3,4,5,6,7;
		
		


CREATE TABLE P_hroon_t.bike_srp AS

	(SELECT
		CAL.RETAIL_YEAR,
		CAL.RETAIL_WEEK,
		BikeType,
		FrameSize,
		Department,
		BRAND,
		case when retail_week <= 42 then 1 else 0 end as flag_week,
		sum(SRP_IMPRSN_CNT) as SRP_IMP,
		SUM(SRP_VI_CNT) as SRP_VI,
		SUM(other_SRC_VI_CNT) as otherVi,
		SUM(watch_CNT) as Watches

	 FROM PRS_restricted_V.SLNG_TRFC_SUPER_FACT ck

		INNER JOIN ACCESS_VIEWS.DW_CATEGORY_GROUPINGS AS CAT
			ON CK.LEAF_CATEG_ID = CAT.LEAF_CATEG_ID
			AND CK.SITE_ID = CAT.SITE_ID and cat.site_id = 3 
			

			
		left outer join dw_users u
			on ck.SELLER_ID = u.user_id
		
		inner join dw_cal_dt cal 
			on ck.CAL_DT = cal.cal_dt 
			and retail_year in (2019,2020,2021)
			
		left join
			(select a.* from (
			select
			item_id,
			auct_end_dt,
			lower(PRDCT_ASPCT_NM) as lcase_aspect_name,
			upper(ASPCT_VLU_NM) as biketype,
			ROW_NUMBER() over  ( partition by  aspct.item_id, lcase_aspect_name order by lcase_aspect_name ) as RNum -- To avoid duplicate results, this condition partitions the attribute to to contain only 1 aspect value per attribute
			FROM ACCESS_VIEWS.ITEM_ASPCT_CLSSFCTN ASPCT
			where
			lower(PRDCT_ASPCT_NM) in ('bike type') and NS_TYPE_CD='df' )a
			where RNum = 1
			) biketype
			on  ck.ITEM_ID = biketype.ITEM_ID


		left join
			(select a.* from (
			select
			item_id,
			auct_end_dt,
			lower(PRDCT_ASPCT_NM) as lcase_aspect_name,
			upper(ASPCT_VLU_NM) as FrameSize,
			ROW_NUMBER() over  ( partition by  aspct.item_id, lcase_aspect_name order by lcase_aspect_name ) as RNum -- To avoid duplicate results, this condition partitions the attribute to to contain only 1 aspect value per attribute
			FROM ACCESS_VIEWS.ITEM_ASPCT_CLSSFCTN ASPCT
			where
			lower(PRDCT_ASPCT_NM) in ('frame size') and NS_TYPE_CD='df' )a
			where RNum = 1
			) FrameSize
			on  ck.ITEM_ID = FrameSize.ITEM_ID
	

		left join
			(select a.* from (
			select
			item_id,
			auct_end_dt,
			lower(PRDCT_ASPCT_NM) as lcase_aspect_name,
			upper(ASPCT_VLU_NM) as Department,
			ROW_NUMBER() over  ( partition by  aspct.item_id, lcase_aspect_name order by lcase_aspect_name ) as RNum -- To avoid duplicate results, this condition partitions the attribute to to contain only 1 aspect value per attribute
			FROM ACCESS_VIEWS.ITEM_ASPCT_CLSSFCTN ASPCT
			where
			lower(PRDCT_ASPCT_NM) in ('department') and NS_TYPE_CD='df' )a
			where RNum = 1
			) Department
			on  ck.ITEM_ID = Department.ITEM_ID


		left join
			(select a.* from (
			select
			item_id,
			auct_end_dt,
			lower(PRDCT_ASPCT_NM) as lcase_aspect_name,
			upper(ASPCT_VLU_NM) as BRAND,
			ROW_NUMBER() over  ( partition by  aspct.item_id, lcase_aspect_name order by lcase_aspect_name ) as RNum -- To avoid duplicate results, this condition partitions the attribute to to contain only 1 aspect value per attribute
			FROM ACCESS_VIEWS.ITEM_ASPCT_CLSSFCTN ASPCT
			where
			lower(PRDCT_ASPCT_NM) in ('brand') and NS_TYPE_CD='df' )a
			where RNum = 1
			) t0
			on  ck.ITEM_ID = t0.ITEM_ID

			
		

		WHERE 1=1
			and ck.site_id = 3  
			AND CAT.CATEG_LVL3_ID = 177831
			GROUP BY 1,2,3,4,5,6,7
	 )	;
	 
	 ---------------------------------------------------------------------------------------------------------------------------
drop table if exists p_hroon_t.BIKE_FUNNEL;
--------------------------------------------------------------------------------------------------------------------------- 

CREATE table p_hroon_t.BIKE_FUNNEL as

 (SELECT RETAIL_YEAR,RETAIL_WEEK,BikeType,FrameSize,Department,BRAND, flag_week, GMV, ll, SRP_IMP, SRP_VI,  otherVi, Watches

FROM (
 
	SELECT RETAIL_YEAR,RETAIL_WEEK,BikeType,FrameSize,Department,BRAND, flag_week, GMV, cast(0 as decimal(38,10)) AS ll, cast(0 as decimal(38,10)) as SRP_IMP, cast(0 as decimal(38,10)) as SRP_VI, cast(0 as decimal(38,10)) as otherVi, cast(0 as decimal(38,10)) AS Watches
		FROM P_hroon_T.BIKE_GMV

UNION ALL

	SELECT RETAIL_YEAR,RETAIL_WEEK,BikeType,FrameSize,Department,BRAND, flag_week, 0 AS GMV,  ll, 0 as SRP_IMP, 0 as SRP_VI, 0 as otherVi, 0 AS Watches
		FROM P_hroon_T.BIKE_LL

UNION ALL

	SELECT RETAIL_YEAR,RETAIL_WEEK,BikeType,FrameSize,Department,BRAND, flag_week, 0 AS GMV, 0 AS ll,SRP_IMP,	SRP_VI,	otherVi, Watches
		FROM P_hroon_T.BIKE_SRP
		
		) unio

GROUP BY RETAIL_YEAR,RETAIL_WEEK,BikeType,FrameSize,Department,BRAND, flag_week, GMV, ll, SRP_IMP, SRP_VI,  otherVi, Watches
 
 )
 ; 
 
 
 
SELECT g.RETAIL_YEAR,g.RETAIL_WEEK,g.BikeType,g.FrameSize,g.Department,g.BRAND, g.flag_week, GMV, ll, SRP_IMP, SRP_VI,  otherVi, Watches

FROM P_hroon_T.bike_gmv g

LEFT outer JOIN  (select * FROM P_hroon_T.BIKE_LL) ll on 
g.RETAIL_YEAR = ll.retail_year and
g.RETAIL_WEEK = ll.retail_week and
g.BikeType = ll.biketype and
g.frameSize = ll.framesize AND
g.Department = ll.department and
g.BRANd = ll.brand and
g.flag_week = ll.flag_week 

LEFT outer JOIN P_hroon_T.BIKE_SRP s on
		
g.RETAIL_YEAR = s.retail_year and
g.RETAIL_WEEK = s.retail_week and
g.BikeType = s.biketype and
g.frameSize = s.framesize and
g.Department = s.department and
g.BRANd = s.brand and
g.flag_week = s.flag_week
 
 where g.retail_year in (2020,2021)
 