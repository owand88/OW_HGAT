
---------------------------------------------------------------------------------------------------------------------------------------------------------------
-- select * from p_robevans_t.sneaker_final where user_slctd_id = 'hooverlimited' where retail_year in (2020) 
-- select * from P_robevans_T.sneaker_base where retail_year = 2021 and retail_week = 15
drop table if exists P_robevans_T.sneaker_fm_gmv;

CREATE TABLE P_robevans_T.sneaker_fm_gmv AS
(select * from (select
retail_year,
retail_week,
		CASE
		WHEN Cast(CK.ITEM_PRICE AS DECIMAL(18,2))  < 100 THEN 'A. <100'
		WHEN Cast(CK.ITEM_PRICE AS DECIMAL(18,2))  < 125 THEN 'A. 100-125'
		WHEN Cast(CK.ITEM_PRICE AS DECIMAL(18,2))  < 150 THEN 'A. 125-150'
		ELSE 'B.150+' END AS
	PRICE_BUCKET,
	categ_lvl4_name,categ_lvl4_id,categ_lvl3_name, categ_lvl3_id,
	CASE WHEN CNDTN_ROLLUP_ID = 1 THEN 'New' WHEN CNDTN_ROLLUP_ID = 2 THEN 'Refurbished'  WHEN CNDTN_ROLLUP_ID = 3 THEN 'Used' ELSE 'Not Specified' END AS Item_Cond,
		case when U.USER_DSGNTN_ID=2  then 'B2C' else 'C2C' end as bus_flag,
	CASE WHEN UPPER(BRND.ASPCT_VLU_NM_BRAND) IN ('MODIFIED', 'CUSTOMIZED','YES') THEN 'MODIFIED' ELSE 'NO' end AS MODIFIED_ITEM,
	SUM(CK.gmv_plan_usd) AS GMV, 
	SUM(QUANTITY) AS BI,
	count(distinct (buyer_id)) as byr_cnt,
	count(distinct(ck.item_id)) as converted_lll,
	GMV/BI as ASP

FROM DW_CHECKOUT_TRANS AS CK

LEFT JOIN ( select ITEM_ID,CNDTN_ROLLUP_ID from ACCESS_VIEWS.LSTG_ITEM_CNDTN group by 1,2 ) AS CNDTN
        ON CK.ITEM_ID = CNDTN.ITEM_ID
LEFT JOIN (select item_id, auct_titl, AUCT_END_DT from DW_LSTG_ITEM where item_site_id = 3 group by 1,2,3) as i on i.item_id = ck.item_id and i.auct_end_dt = ck.AUCT_END_DT

LEFT JOIN 
                    (
                    SELECT ITEM_ID,
                           AUCT_END_DT,
                           COALESCE(MAX(ASPCT.ASPCT_VLU_NM),'UNKNOWN') AS ASPCT_VLU_NM_BRAND
                            FROM
                            ITEM_ASPCT_CLSSFCTN ASPCT
                            WHERE
                            UPPER(ASPCT.NS_TYPE_CD) IN ('NF','DF') 
                            AND ASPCT.AUCT_END_DT>='2018-12-26'
                            AND UPPER(ASPCT.PRDCT_ASPCT_NM) LIKE ('%MODIFIED ITEM%')
                            GROUP BY 1,2
                            
                        UNION 
                        
                        SELECT  ITEM_ID,
                           AUCT_END_DT,
                          COALESCE(MAX(ASPCT_COLD.ASPCT_VLU_NM),'UNKNOWN') AS ASPCT_VLU_NM_BRAND
                        FROM
                        ITEM_ASPCT_CLSSFCTN_COLD ASPCT_COLD
                        WHERE UPPER(ASPCT_COLD.NS_TYPE_CD) IN ('NF','DF') 
                        AND ASPCT_COLD.AUCT_END_DT>='2018-12-26'
                        AND UPPER(ASPCT_COLD.PRDCT_ASPCT_NM) LIKE ('%MODIFIED ITEM%')
                        GROUP BY 1,2
                    ) BRND ON CK.ITEM_ID = BRND.ITEM_ID AND CK.AUCT_END_DT = BRND.AUCT_END_DT

		
-- inner  JOIN ACCESS_VIEWS.SSA_CURNCY_PLAN_RATE_DIM LPR 
-- 	ON CK.LSTG_CURNCY_ID = LPR.CURNCY_ID 
INNER JOIN ACCESS_VIEWS.DW_CAL_DT CAL 
	ON CAL.CAL_DT = CK.gmv_dt 
	and retail_year in (2019,2020,2021,2022) and AGE_FOR_RTL_WEEK_ID <= -1 

left join 
(select a.* from (
select
item_id,
auct_end_dt,
lower(PRDCT_ASPCT_NM) as lcase_aspect_name,
upper(ASPCT_VLU_NM) as BRAND,
ROW_NUMBER() over  ( partition by  aspct.item_id, lcase_aspect_name order by lcase_aspect_name ) as RNum -- To avoid duplicate results, this condition partitions the attribute to to contain only 1 aspect value per attribute  
FROM ITEM_ASPCT_CLSSFCTN ASPCT
where 
lower(PRDCT_ASPCT_NM) in ('brand') and NS_TYPE_CD='df' )a
where RNum = 1
) bbase
					ON ck.ITEM_ID = bbase.ITEM_ID AND ck.AUCT_END_dt = bbase.AUCT_END_DT
					
left join 
(select a.* from (
select
item_id,
auct_end_dt,
lower(PRDCT_ASPCT_NM) as lcase_aspect_name,
upper(ASPCT_VLU_NM) as MODEL,
ROW_NUMBER() over  ( partition by  aspct.item_id, lcase_aspect_name order by lcase_aspect_name ) as RNum -- To avoid duplicate results, this condition partitions the attribute to contain only 1 aspect value per attribute  
FROM ITEM_ASPCT_CLSSFCTN ASPCT
where 
lower(PRDCT_ASPCT_NM) in ('model') and NS_TYPE_CD='df' )a
where RNum = 1
) bbase1
					ON ck.ITEM_ID = bbase1.ITEM_ID AND ck.AUCT_END_dt = bbase1.AUCT_END_DT

left outer join dw_users u
	on ck.seller_id = u.user_id
	
INNER JOIN DW_CATEGORY_GROUPINGS CAT 
	ON CAT.LEAF_CATEG_ID = CK.LEAF_CATEG_ID 
	AND CAT.SITE_ID = 3
	AND CAT.SAP_CATEGORY_ID NOT IN (5,7,41,23,-999)   

WHERE 1=1
AND  CK.AUCT_end_dt >= '2018-01-01'                    
AND CK.SITE_ID in (3)
AND cat.CATEG_LVL4_ID in (15709,95672)
AND ck.slr_CNTRY_ID in (3)

GROUP BY 1,2,3,4,5,6,7,8,9,10))

		
-- WITH DATA PRIMARY INDEX(seller_id, RETAIL_WEEK, RETAIL_YEAR, categ_lvl2_id);
;



---------------------------------------------------------------------------------------------------------------------------
drop table if exists P_robevans_T.sneaker_fm_base;
---------------------------------------------------------------------------------------------------------------------------
CREATE TABLE P_robevans_T.sneaker_fm_base AS

(SELECT
cal.retail_year,
cal.retail_week,
categ_lvl4_name,
categ_lvl4_id,categ_lvl3_name, categ_lvl3_id,	
		CASE
		WHEN Cast(CK.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 100 THEN 'A. <100'
		WHEN Cast(CK.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 125 THEN 'A. 100-125'
		WHEN Cast(CK.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 150 THEN 'A. 125-150'
		ELSE 'B.150+' END AS
	PRICE_BUCKET,
count(distinct(ck.item_id)) as LL

FROM DW_LSTG_ITEM CK 
LEFT JOIN ( select ITEM_ID,CNDTN_ROLLUP_ID from ACCESS_VIEWS.LSTG_ITEM_CNDTN group by 1,2 ) AS CNDTN
        ON CK.ITEM_ID = CNDTN.ITEM_ID
INNER JOIN DW_LSTG_ITEM D ON ck.ITEM_ID = D.ITEM_ID AND ck.AUCT_END_DT = D.AUCT_END_DT
INNER JOIN DW_CATEGORY_GROUPINGS CAT ON CAT.LEAF_CATEG_ID = Ck.LEAF_CATEG_ID AND CAT.SITE_ID = CK.ITEM_SITE_ID and cat.site_id = 3 
INNER JOIN DW_COUNTRIES CN ON CN.CNTRY_ID = CK.SLR_CNTRY_ID
INNER JOIN ACCESS_VIEWS.GLBL_RPRT_GEO_DIM GEO ON CN.REV_ROLLUP_ID = GEO.REV_ROLLUP_ID 
INNER JOIN DW_CAL_DT CAL ON CK.AUCT_START_DT < CAL.CAL_DT AND CK.AUCT_END_DT >= CAL.CAL_DT AND RETAIL_YEAR in (2019,2020,2021,2022) and AGE_FOR_RTL_WEEK_ID <= -1 
left outer join dw_users u
on ck.slr_id = u.user_id

WHERE CK.AUCT_end_dt >= '2017-01-01'
and ck.WACKO_YN = 'N'                      
AND CK.AUCT_TYPE_CODE NOT IN (10,15)
AND CK.ITEM_SITE_ID = 3
-- and new_vertical = 'fashion'
and ck.auct_end_dt >= date '2018-01-01'
and ck.SLR_CNTRY_ID = 3
and cat.CATEG_LVL4_ID in (15709,95672) -- change
group by 1,2,3,4,5,6,7
 );
-- WITH DATA PRIMARY INDEX(slr_id, categ_lvl2_id, retail_year,retail_week);
 
--  COLLECT STATS P_robevans_T.sneaker_base COLUMN(retail_year,retail_week,slr_id);
---------------------------------------------------------------------------------------------------------------------------
drop table if exists P_robevans_T.sneaker_fm_vi;
---------------------------------------------------------------------------------------------------------------------------
CREATE TABLE P_robevans_T.sneaker_fm_vi AS

(SELECT
cal.retail_year,
cal.retail_week,
categ_lvl4_name,
categ_lvl4_id,categ_lvl3_name, categ_lvl3_id,	
CASE
		WHEN Cast(i.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 100 THEN 'A. <100'
		WHEN Cast(i.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 125 THEN 'A. 100-125'
		WHEN Cast(i.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 150 THEN 'A. 125-150'
		ELSE 'B.150+' END AS
	PRICE_BUCKET,
sum(SRP_IMPRSN_CNT) as SRP_IMP,
SUM(SRP_VI_CNT) as SRP_VI,
SUM(other_SRC_VI_CNT) as otherVi,
SUM(watch_CNT) as Watches

 FROM PRS_restricted_V.SLNG_TRFC_SUPER_FACT ck
         
    INNER JOIN ACCESS_VIEWS.DW_CATEGORY_GROUPINGS AS CAT
        ON CK.LEAF_CATEG_ID = CAT.LEAF_CATEG_ID
        AND CK.SITE_ID = CAT.SITE_ID and cat.site_id = 3 
    left outer join dw_users u
on ck.seller_id = u.user_id
inner join dw_cal_dt cal on ck.cal_dt = cal.cal_dt AND cal.RETAIL_YEAR in (2019,2020,2021,2022) and AGE_FOR_RTL_WEEK_ID <=-1
inner join (select item_id, START_PRICE_LSTG_CURNCY,BIN_PRICE_LSTG_CURNCY, slr_cntry_id from  DW_LSTG_ITEM) i on ck.item_id = i.item_id and SLR_CNTRY_ID = 3
 LEFT JOIN ( select ITEM_ID,CNDTN_ROLLUP_ID from ACCESS_VIEWS.LSTG_ITEM_CNDTN group by 1,2 ) AS CNDTN
        ON CK.ITEM_ID = CNDTN.ITEM_ID

    WHERE 1=1
and ck.site_id = 3  
and cat.CATEG_LVL4_ID in (15709,95672) -- change
GROUP BY 1,2,3,4,5,6,7
 )	
-- WITH DATA PRIMARY INDEX(seller_id, categ_lvl2_id, retail_year,retail_week);
 
 ;
--  COLLECT STATS P_robevans_T.sneaker_vi COLUMN(retail_year,retail_week,seller_id);
---------------------------------------------------------------------------------------------------------------------------
drop table if exists p_robevans_t.sneaker_tracker;
--------------------------------------------------------------------------------------------------------------------------- 

CREATE table p_robevans_t.sneaker_tracker as

 (SELECT retail_year, retail_week, categ_lvl4_name, categ_lvl4_id,categ_lvl3_name, categ_lvl3_id,	PRICE_BUCKET, GMV, BI, byr_cnt, converted_lll, ASP, ll, SRP_IMP, SRP_VI,  otherVi, Watches

FROM (
 
	SELECT retail_year, retail_week, categ_lvl4_name, categ_lvl4_id,categ_lvl3_name, categ_lvl3_id,		PRICE_BUCKET,  GMV, BI, byr_cnt, converted_lll, ASP, cast(0 as decimal(38,10)) AS ll, cast(0 as decimal(38,10)) as SRP_IMP, cast(0 as decimal(38,10)) as SRP_VI, cast(0 as decimal(38,10)) as otherVi, cast(0 as decimal(38,10)) AS Watches
		FROM P_robevans_T.sneaker_fm_gmv

UNION ALL

	SELECT retail_year, retail_week, categ_lvl4_name, categ_lvl4_id,  categ_lvl3_name, categ_lvl3_id,		PRICE_BUCKET, 0 AS GMV, 0 AS BI, 0 AS Byr_cnt, 0 AS converted_lll, 0 AS ASP, ll, 0 as SRP_IMP, 0 as SRP_VI, 0 as otherVi, 0 AS Watches
		FROM P_robevans_T.sneaker_fm_base

UNION ALL

	SELECT retail_year, retail_week,categ_lvl4_name, categ_lvl4_id, categ_lvl3_name, categ_lvl3_id,		PRICE_BUCKET, 0 AS GMV, 0 AS BI, 0 AS Byr_cnt, 0 AS converted_lll, 0 AS ASP, 0 AS ll,SRP_IMP,	SRP_VI,	otherVi, Watches
		FROM P_robevans_T.sneaker_fm_vi
		
		) unio

GROUP BY retail_year, retail_week, categ_lvl4_name, categ_lvl4_id, categ_lvl3_name, categ_lvl3_id,		PRICE_BUCKET, GMV, BI, byr_cnt, converted_lll, ASP, ll, SRP_IMP, SRP_VI,  otherVi, Watches
 
 )
 ; 
 
--  WITH DATA PRIMARY INDEX(seller_id, categ_lvl2_id, retail_year,retail_week);
 
--  COLLECT STATS p_robevans_t.aw_d2c_acq_tracker COLUMN(retail_year,retail_week,seller_id);
---------------------------------------------------------------------------------------------------------------------------
-- select * from p_robevans_t.sneaker_final where retail_year = 2021




---------------------------------------------------------------------------------------------------------------------------------------------------------------
-- top sellers 1
drop table if exists P_robevans_T.sneaker_fm_gmva;

CREATE TABLE P_robevans_T.sneaker_fm_gmva AS

select
	seller_id,
	SUM(CK.gmv_plan_usd) AS GMV

FROM DW_CHECKOUT_TRANS AS CK

-- inner  JOIN ACCESS_VIEWS.SSA_CURNCY_PLAN_RATE_DIM LPR 
-- 	ON CK.LSTG_CURNCY_ID = LPR.CURNCY_ID 
INNER JOIN ACCESS_VIEWS.DW_CAL_DT CAL 
	ON CAL.CAL_DT = CK.gmv_dt 
	and retail_year in (2021,2022) and AGE_FOR_RTL_WEEK_ID <= -1 
left outer join dw_users u
	on ck.seller_id = u.user_id
INNER JOIN DW_CATEGORY_GROUPINGS CAT 
	ON CAT.LEAF_CATEG_ID = CK.LEAF_CATEG_ID 
	AND CAT.SITE_ID = 3
	AND CAT.SAP_CATEGORY_ID NOT IN (5,7,41,23,-999)   

WHERE 1=1
	AND CK.CK_WACKO_YN  =  'N'
	AND CK.SALE_TYPE NOT IN (10,15)
	and ck.byr_cntry_id =3 
	and ck.ITEM_PRICE >= 100
	and ck.SLR_CNTRY_ID = 3
	and cat.CATEG_LVL4_ID in (15709,95672) -- change

	GROUP BY 1
	 order by GMV desc
	 limit 2000


	
-- WITH DATA PRIMARY INDEX(seller_id, RETAIL_WEEK, RETAIL_YEAR, categ_lvl2_id);
;


---------------------------------------------------------------------------------------------------------------------------------------------------------------
-- top sellers 2
drop table if exists P_robevans_T.sneaker_fm_gmv11;

CREATE TABLE P_robevans_T.sneaker_fm_gmv11 AS

(select
	cal.retail_year,
	cal.retail_week,
	ck.seller_id,
	user_slctd_id,
	categ_lvl3_id,
	CATEG_LVL3_NAME,
	categ_lvl4_name,
	categ_lvl4_id,
		CASE
		WHEN Cast(CK.ITEM_PRICE AS DECIMAL(18,2))  < 100 THEN 'A. <100'
		WHEN Cast(CK.ITEM_PRICE AS DECIMAL(18,2))  < 125 THEN 'A. 100-125'
		WHEN Cast(CK.ITEM_PRICE AS DECIMAL(18,2))  < 150 THEN 'A. 125-150'
		ELSE 'B.150+' END AS
	PRICE_BUCKET,
	CASE WHEN CNDTN_ROLLUP_ID = 1 THEN 'New' WHEN CNDTN_ROLLUP_ID = 2 THEN 'Refurbished'  WHEN CNDTN_ROLLUP_ID = 3 THEN 'Used' ELSE 'Not Specified' END AS Item_Cond,
		case when U.USER_DSGNTN_ID=2  then 'B2C' else 'C2C' end as bus_flag,
-- 	case when BYR_CNTRY_ID = 3 the 'UK' else 'International' end as buyer_location,
	SUM(CK.gmv_plan_usd) AS GMV, 
	count(DISTINCT BUYER_ID) as byr_cnt,
	SUM(QUANTITY) AS BI,
	count(distinct(ck.item_id)) as converted_lll

FROM DW_CHECKOUT_TRANS AS CK

INNER JOIN (select selleR_id from  P_robevans_T.sneaker_fm_gmva) as a on ck.seller_id = a.seller_id
 LEFT JOIN ( select ITEM_ID,CNDTN_ROLLUP_ID from ACCESS_VIEWS.LSTG_ITEM_CNDTN group by 1,2 ) AS CNDTN
        ON CK.ITEM_ID = CNDTN.ITEM_ID
-- inner  JOIN ACCESS_VIEWS.SSA_CURNCY_PLAN_RATE_DIM LPR 
-- 	ON CK.LSTG_CURNCY_ID = LPR.CURNCY_ID 
INNER JOIN ACCESS_VIEWS.DW_CAL_DT CAL 
	ON CAL.CAL_DT = CK.gmv_dt 
	and retail_year in (2020,2021,2022) and AGE_FOR_RTL_WEEK_ID <= -1 
left outer join dw_users u
	on ck.seller_id = u.user_id
INNER JOIN DW_CATEGORY_GROUPINGS CAT 
	ON CAT.LEAF_CATEG_ID = CK.LEAF_CATEG_ID 
	AND CAT.SITE_ID = 3
	AND CAT.SAP_CATEGORY_ID NOT IN (5,7,41,23,-999)   

WHERE 1=1
	AND CK.CK_WACKO_YN  =  'N'
	AND CK.SALE_TYPE NOT IN (10,15)
	and ck.byr_cntry_id =3 
	and ck.SLR_CNTRY_ID = 3
	and cat.CATEG_LVL4_ID in (15709,95672) -- change

	GROUP BY 1,2,3,4,5,6,7,8,9,10,11

) 
	
-- WITH DATA PRIMARY INDEX(seller_id, RETAIL_WEEK, RETAIL_YEAR, categ_lvl2_id);
;

---------------------------------------------------------------------------------------------------------------------------------------------------------------
-- top 2021 listings 1

-- select count(*) from  P_robevans_T.sneaker_item_gmv1a

drop table if exists P_robevans_T.sneaker_item_gmv1a;

CREATE TABLE P_robevans_T.sneaker_item_gmv1a AS

select
	ck.item_id,
	SUM(CK.gmv_plan_usd) AS GMV

FROM DW_CHECKOUT_TRANS AS CK

-- inner  JOIN ACCESS_VIEWS.SSA_CURNCY_PLAN_RATE_DIM LPR 
-- 	ON CK.LSTG_CURNCY_ID = LPR.CURNCY_ID 
LEFT JOIN  DW_LSTG_ITEM i on i.item_id = ck.item_id and i.AUCT_END_DATE = ck.AUCT_END_DT
INNER JOIN ACCESS_VIEWS.DW_CAL_DT CAL 
	ON CAL.CAL_DT = CK.gmv_dt 
	and retail_year in (2021,2022) and AGE_FOR_RTL_WEEK_ID <= -1 
left outer join dw_users u
	on ck.seller_id = u.user_id
INNER JOIN DW_CATEGORY_GROUPINGS CAT 
	ON CAT.LEAF_CATEG_ID = CK.LEAF_CATEG_ID 
	AND CAT.SITE_ID = 3
	AND CAT.SAP_CATEGORY_ID NOT IN (5,7,41,23,-999)   

WHERE 1=1
	AND CK.CK_WACKO_YN  =  'N'
	AND CK.SALE_TYPE NOT IN (10,15)
	and ck.byr_cntry_id =3 
	and ck.ITEM_PRICE >= 100
	and ck.SLR_CNTRY_ID = 3
	and cat.CATEG_LVL4_ID in (15709,95672) -- change

	GROUP BY 1
	order by GMV DESC
	limit 2000


-- WITH DATA PRIMARY INDEX(seller_id, RETAIL_WEEK, RETAIL_YEAR, categ_lvl2_id);
;



---------------------------------------------------------------------------------------------------------------------------------------------------------------
-- top 2021 listings 2



drop table if exists P_robevans_T.sneaker_item_gmv1;

CREATE TABLE P_robevans_T.sneaker_item_gmv1 AS

select
	cal.retail_year,
	cal.retail_week,
	seller_id,
	user_slctd_id,
	i.auct_titl,
	ck.item_id,
	categ_lvl3_id,
	CATEG_LVL3_NAME,
	categ_lvl4_name,
	categ_lvl4_id,
		CASE
		WHEN Cast(CK.ITEM_PRICE AS DECIMAL(18,2))  < 100 THEN 'A. <100'
		WHEN Cast(CK.ITEM_PRICE AS DECIMAL(18,2))  < 125 THEN 'A. 100-125'
		WHEN Cast(CK.ITEM_PRICE AS DECIMAL(18,2))  < 150 THEN 'A. 125-150'
		ELSE 'B.150+' END AS
	PRICE_BUCKET,
	CASE WHEN CNDTN_ROLLUP_ID = 1 THEN 'New' WHEN CNDTN_ROLLUP_ID = 2 THEN 'Refurbished'  WHEN CNDTN_ROLLUP_ID = 3 THEN 'Used' ELSE 'Not Specified' END AS Item_Cond,
		case when U.USER_DSGNTN_ID=2  then 'B2C' else 'C2C' end as bus_flag,
-- 	case when BYR_CNTRY_ID = 3 the 'UK' else 'International' end as buyer_location,
	SUM(CK.gmv_plan_usd) AS GMV, 
	count(DISTINCT BUYER_ID) as byr_cnt,
	SUM(QUANTITY) AS BI,
	count(distinct(ck.item_id)) as converted_lll,
	GMV/BI as ASP

FROM DW_CHECKOUT_TRANS AS CK

INNER JOIN (Select item_id from P_robevans_T.sneaker_item_gmv1a) a on a.item_id = ck.item_id
 LEFT JOIN ( select ITEM_ID,CNDTN_ROLLUP_ID from ACCESS_VIEWS.LSTG_ITEM_CNDTN group by 1,2 ) AS CNDTN
        ON CK.ITEM_ID = CNDTN.ITEM_ID
-- inner  JOIN ACCESS_VIEWS.SSA_CURNCY_PLAN_RATE_DIM LPR 
-- 	ON CK.LSTG_CURNCY_ID = LPR.CURNCY_ID 
LEFT JOIN DW_LSTG_ITEM i on i.item_id = ck.item_id and i.AUCT_END_dt = ck.AUCT_END_DT
INNER JOIN ACCESS_VIEWS.DW_CAL_DT CAL 
	ON CAL.CAL_DT = CK.gmv_dt 
	and retail_year in (2021,2022) and AGE_FOR_RTL_WEEK_ID <= -1 
left outer join dw_users u
	on ck.seller_id = u.user_id
INNER JOIN DW_CATEGORY_GROUPINGS CAT 
	ON CAT.LEAF_CATEG_ID = CK.LEAF_CATEG_ID 
	AND CAT.SITE_ID = 3
	AND CAT.SAP_CATEGORY_ID NOT IN (5,7,41,23,-999)   

WHERE 1=1
	AND CK.CK_WACKO_YN  =  'N'
	AND CK.SALE_TYPE NOT IN (10,15)
	and ck.byr_cntry_id =3 
	and ck.SLR_CNTRY_ID = 3
	and cat.CATEG_LVL4_ID in (15709,95672) -- change

	GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13

	
-- WITH DATA PRIMARY INDEX(seller_id, RETAIL_WEEK, RETAIL_YEAR, categ_lvl2_id);
;
