-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------ GMV and LL by GBP limit (>Â£500)----------------------------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------ LL --------------
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
drop table if exists p_robevans_t.hb_yoy ;
create table p_robevans_t.hb_yoy as (select * from (select
retail_year,
CASE
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 250  THEN 'A. <250'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 500  THEN 'B. 250-500'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 1000 THEN 'C. 500-1000'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 1250 THEN 'D. 1000-1250'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 1500 THEN 'E. 1250-1500'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 2000 THEN 'F. 1500-2000'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 5000 THEN 'G. 2000-5000'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 10000 THEN 'H. 5000-10,000'
		ELSE 'H.10,000' END AS
	PRICE_BUCKET,
	CASE WHEN CNDTN_ROLLUP_ID = 1 THEN 'New' WHEN CNDTN_ROLLUP_ID = 2 THEN 'Refurbished'  WHEN CNDTN_ROLLUP_ID = 3 THEN 'Used' ELSE 'Not Specified' END AS item_Cond,
		case when U.USER_DSGNTN_ID=2  then 'B2C' else 'C2C' end as bus_flag,
	CASE WHEN UPPER(BRND.ASPCT_VLU_NM_BRAND) in ('MODIFIED', 'CUSTOMIZED','YES') THEN 'MODIFIED' ELSE 'NO' end AS MODIFIED_ITEM,
	
	count(distinct slr_id) as Seller_Count,
	count(distinct ck.item_id) as LL

FROM DW_LSTG_ITEM AS ck

        LEFT JOIN 
                    (
                    SELECT item_ID,
                           AUCT_END_DT,
                           COALESCE(MAX(ASPCT.ASPCT_VLU_NM),'UNKNOWN') AS ASPCT_VLU_NM_BRAND
                            FROM
                            item_ASPCT_CLSSFCTN ASPCT
                            WHERE
                            UPPER(ASPCT.NS_TYPE_CD) in ('NF','DF') 
                            AND ASPCT.AUCT_END_DT>='2018-12-26'
                            AND UPPER(ASPCT.PRDCT_ASPCT_NM) LIKE ('%MODIFIED ITEM%')
                            GROUP BY 1,2
                            
                        UNION 
                        
                        SELECT  item_ID,
                           AUCT_END_DT,
                          COALESCE(MAX(ASPCT_COLD.ASPCT_VLU_NM),'UNKNOWN') AS ASPCT_VLU_NM_BRAND
                        FROM
                        item_ASPCT_CLSSFCTN_COLD ASPCT_COLD
                        WHERE UPPER(ASPCT_COLD.NS_TYPE_CD) in ('NF','DF') 
                        AND ASPCT_COLD.AUCT_END_DT>='2018-12-26'
                        AND UPPER(ASPCT_COLD.PRDCT_ASPCT_NM) LIKE ('%MODIFIED ITEM%')
                        GROUP BY 1,2
                    ) BRND ON ck.ITEM_ID = BRND.ITEM_ID AND ck.AUCT_END_DT = BRND.AUCT_END_DT



 LEFT JOIN ( select item_ID,CNDTN_ROLLUP_ID from ACCESS_VIEWS.LSTG_ITEM_CNDTN group by 1,2 ) AS CNDTN
        ON ck.ITEM_ID = CNDTN.ITEM_ID
INNER JOIN DW_COUNTRIES CN ON CN.CNTRY_ID = ck.SLR_CNTRY_ID
INNER JOIN ACCESS_VIEWS.GLBL_RPRT_GEO_DIM GEO ON CN.REV_ROLLUP_ID = GEO.REV_ROLLUP_ID 
INNER JOIN DW_CAL_DT CAL ON ck.AUCT_START_DT < CAL.CAL_DT AND ck.AUCT_END_DT >= CAL.CAL_DT AND RETAIL_YEAR >= (select retail_year from DW_CAL_DT where AGE_FOR_RTL_WEEK_ID = -1 group by 1)-3 and AGE_FOR_RTL_WEEK_ID <= -1 
left outer join dw_users u
on ck.slr_id = u.user_id

left join (select a.* from (
select
item_id,
auct_end_dt,
lower(PRDCT_ASPCT_NM) as lcase_aspect_name,
upper(ASPCT_VLU_NM) as BRAND,
ROW_NUMBER() over  ( partition by  aspct.item_id, lcase_aspect_name order by lcase_aspect_name ) as RNum -- To avoid duplicate results, this condition partitions the attribute to to contain only 1 aspect value per attribute  
FROM item_ASPCT_CLSSFCTN ASPCT
where 
lower(PRDCT_ASPCT_NM) in ('brand') and NS_TYPE_CD='df' )a
where RNum = 1
) bbase
					ON ck.ITEM_ID = bbase.ITEM_ID AND ck.AUCT_END_dt = bbase.AUCT_END_DT
	
	
left join (select a.* from (
select
item_id,
auct_end_dt,
lower(PRDCT_ASPCT_NM) as lcase_aspect_name,
upper(ASPCT_VLU_NM) as MODEL,
ROW_NUMBER() over  ( partition by  aspct.item_id, lcase_aspect_name order by lcase_aspect_name ) as RNum -- To avoid duplicate results, this condition partitions the attribute to to contain only 1 aspect value per attribute  
FROM item_ASPCT_CLSSFCTN ASPCT
where 
lower(PRDCT_ASPCT_NM) in ('model') and NS_TYPE_CD='df' )a
where RNum = 1
) bbase1
					ON ck.ITEM_ID = bbase1.ITEM_ID AND ck.AUCT_END_dt = bbase1.AUCT_END_DT


INNER JOIN DW_CATEGORY_GROUPINGS CAT 
	ON CAT.LEAF_CATEG_ID = ck.LEAF_CATEG_ID 
	AND CAT.SITE_ID = 3
	AND CAT.SAP_CATEGORY_ID NOT in (5,7,41,23,-999)   

WHERE 1=1
	AND  ck.AUCT_end_dt >= '2018-01-01'
and ck.wacko_YN = 'N'                      
AND ck.AUCT_TYPE_CODE NOT in (10,15)
AND ck.ITEM_SITE_ID in (3)
and  (cat.CATEG_LVL3_ID in (169291) or cat.categ_lvl4_id = 52357)
and ck.slr_CNTRY_ID in (3)
		
GROUP BY 1,2,3,4,5) 
);
		
		

----------------------------------------------------------------------------------------------------------------------------------		
drop table if exists p_robevans_t.hb_wow ;
create table p_robevans_t.hb_wow as (select * from (select
retail_year,
retail_week,
CASE
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 250  THEN 'A. <250'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 500 THEN 'B. 250-500'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 1000 THEN 'C. 500-1000'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 1250 THEN 'D. 1000-1250'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 1500 THEN 'E. 1250-1500'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 2000 THEN 'F. 1500-2000'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 5000 THEN 'G. 2000-5000'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 10000 THEN 'H. 5000-10,000'
		ELSE 'H.10,000' END AS
	PRICE_BUCKET,
	CASE WHEN CNDTN_ROLLUP_ID = 1 THEN 'New' WHEN CNDTN_ROLLUP_ID = 2 THEN 'Refurbished'  WHEN CNDTN_ROLLUP_ID = 3 THEN 'Used' ELSE 'Not Specified' END AS item_Cond,
	case when U.USER_DSGNTN_ID=2  then 'B2C' else 'C2C' end as bus_flag,
	CASE WHEN UPPER(BRND.ASPCT_VLU_NM_BRAND) in ('MODIFIED', 'CUSTOMIZED','YES') THEN 'MODIFIED' ELSE 'NO' end AS MODIFIED_ITEM,
	case when v.item_id = ck.item_id then  c else 1 end as count,
	count(distinct slr_id) as Seller_Count,
	count(distinct ck.item_id) as LL

FROM DW_LSTG_ITEM AS ck
LEFT JOIN 
                    (
                    SELECT ITEM_ID,
                           AUCT_END_DT,
                           COALESCE(MAX(ASPCT.ASPCT_VLU_NM),'UNKNOWN') AS ASPCT_VLU_NM_BRAND
                            FROM
                            ITEM_ASPCT_CLSSFCTN ASPCT
                            WHERE
                            UPPER(ASPCT.NS_TYPE_CD) IN ('NF','DF') 
                            AND ASPCT.AUCT_END_DT>='2018-12-26'
                            AND UPPER(ASPCT.PRDCT_ASPCT_NM) LIKE ('%MODIFIED ITEM%')
                            GROUP BY 1,2
                            
                        UNION 
                        
                        SELECT  ITEM_ID,
                           AUCT_END_DT,
                          COALESCE(MAX(ASPCT_COLD.ASPCT_VLU_NM),'UNKNOWN') AS ASPCT_VLU_NM_BRAND
                        FROM
                        ITEM_ASPCT_CLSSFCTN_COLD ASPCT_COLD
                        WHERE UPPER(ASPCT_COLD.NS_TYPE_CD) IN ('NF','DF') 
                        AND ASPCT_COLD.AUCT_END_DT>='2018-12-26'
                        AND UPPER(ASPCT_COLD.PRDCT_ASPCT_NM) LIKE ('%MODIFIED ITEM%')
                        GROUP BY 1,2
                    ) BRND ON CK.ITEM_ID = BRND.ITEM_ID AND CK.AUCT_END_DT = BRND.AUCT_END_DT

left join (Select
				item_id,
				Auct_end_dt,
				coalesce(max(case  when lower(aspect)=lower('BRAND') then aspct_vlu_nm else NULL end ),'Unknown') as BRAND
			FROM
				(select
					item_id,
					auct_end_dt,
					ns_type_cd,
					1 as priority,
					'BRAND' as aspect,
					cast(trim(lower(aspct_vlu_nm)) as VARCHAR(350)) as aspct_vlu_nm 
				from
					item_aspct_clssfctn
				where
					AUCT_END_DT>='2016-06-01'
					AND lower(ns_type_cd) in (lower('nf'),lower('df' ) ) and upper(prdct_aspct_nm)= upper('BRAND')
				UNION ALL
				select
					item_id,
					auct_end_dt,
					ns_type_cd,
					2 as priority,
					'BRAND' as aspect,
					cast(trim(lower(aspct_vlu_nm)) as VARCHAR(350)) as aspct_vlu_nm
				from
					item_aspct_clssfctn_cold
				WHERE
					AUCT_END_DT>='2016-06-01'
					AND lower(ns_type_cd) in (lower('nf'),lower('df' ) ) and upper(prdct_aspct_nm)= upper('BRAND')
				)SB
			GROUP BY 1,2) bbase ON ck.ITEM_ID = bbase.ITEM_ID AND ck.AUCT_END_dt = bbase.AUCT_END_DT

left join (Select
				item_id,
				Auct_end_dt,
				coalesce(max(case  when lower(aspect)=lower('MODEL') then aspct_vlu_nm else NULL end ),'Unknown') as MODEL
			FROM
				(select
					item_id,
					auct_end_dt,
					ns_type_cd,
					1 as priority,
					'MODEL' as aspect,
					cast(trim(lower(aspct_vlu_nm)) as VARCHAR(350)) as aspct_vlu_nm 
				from
					item_aspct_clssfctn
				where
					AUCT_END_DT>='2016-06-01'
					AND lower(ns_type_cd) in (lower('nf'),lower('df' ) ) and upper(prdct_aspct_nm)= upper('MODEL')
				UNION ALL
				select
					item_id,
					auct_end_dt,
					ns_type_cd,
					2 as priority,
					'MODEL' as aspect,
					cast(trim(lower(aspct_vlu_nm)) as VARCHAR(350)) as aspct_vlu_nm
				from
					item_aspct_clssfctn_cold
				WHERE
					AUCT_END_DT>='2016-06-01'
					AND lower(ns_type_cd) in (lower('nf'),lower('df' ) ) and upper(prdct_aspct_nm)= upper('MODEL')
				)SB1
			GROUP BY 1,2) bbase1 ON ck.ITEM_ID = bbase1.ITEM_ID AND ck.AUCT_END_dt = bbase1.AUCT_END_DT

LEFT JOIN (select item_id, item_VRTN_ID  from LSTG_ITEM_VRTN group by 1,2) v on v.item_id = ck.item_id
LEFT JOIN (select item_id, count(ITEM_VRTN_ID) c  from LSTG_ITEM_VRTN group by 1) v1 on v1.item_id = ck.item_id
LEFT JOIN ( select item_ID,CNDTN_ROLLUP_ID from ACCESS_VIEWS.LSTG_ITEM_CNDTN group by 1,2 ) AS CNDTN
        ON ck.ITEM_ID = CNDTN.ITEM_ID
INNER JOIN DW_COUNTRIES CN ON CN.CNTRY_ID = ck.SLR_CNTRY_ID
INNER JOIN ACCESS_VIEWS.GLBL_RPRT_GEO_DIM GEO ON CN.REV_ROLLUP_ID = GEO.REV_ROLLUP_ID 
INNER JOIN DW_CAL_DT CAL ON ck.AUCT_START_DT < CAL.CAL_DT AND ck.AUCT_END_DT >= CAL.CAL_DT AND RETAIL_YEAR >= (select retail_year from DW_CAL_DT where AGE_FOR_RTL_WEEK_ID = -1 group by 1)-3  and AGE_FOR_RTL_WEEK_ID <= -1 
left outer join dw_users u
on ck.slr_id = u.user_id

INNER JOIN DW_CATEGORY_GROUPINGS CAT 
	ON CAT.LEAF_CATEG_ID = ck.LEAF_CATEG_ID 
	AND CAT.SITE_ID = 3
	AND CAT.SAP_CATEGORY_ID NOT in (5,7,41,23,-999)   

WHERE 1=1
	AND  ck.AUCT_end_dt >= '2018-01-01'
and ck.wacko_YN = 'N'                      
AND ck.AUCT_TYPE_CODE NOT in (10,15)
AND ck.ITEM_SITE_ID in (3)
and  (cat.CATEG_LVL3_ID in (169291) or cat.categ_lvl4_id = 52357)
and ck.slr_CNTRY_ID in (3)
GROUP BY 1,2,3,4,5,6,7) 
-- 		where phase_flag not in ('Other')
		);
		
		--------------------------------------------------------------------------------------------------------------------------------------------------------


		drop table if exists p_robevans_t.hb_wow_gmv ;
create table p_robevans_t.hb_wow_gmv as (select * from (select
retail_year,
retail_week,
CASE
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 250 THEN 'A. <250'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 500 THEN 'B. 250-500'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 1000 THEN 'C. 500-1000'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 1250 THEN 'D. 1000-1250'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 1500 THEN 'E. 1250-1500'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 2000 THEN 'F. 1500-2000'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 5000 THEN 'G. 2000-5000'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 10000 THEN 'H. 5000-10,000'
		ELSE 'H.10,000' END AS
	PRICE_BUCKET,
	categ_lvl4_name,
	CASE WHEN CNDTN_ROLLUP_ID = 1 THEN 'New' WHEN CNDTN_ROLLUP_ID = 2 THEN 'Refurbished'  WHEN CNDTN_ROLLUP_ID = 3 THEN 'Used' ELSE 'Not Specified' END AS item_Cond,
		case when U.USER_DSGNTN_ID=2  then 'B2C' else 'C2C' end as bus_flag,
	CASE WHEN UPPER(BRND.ASPCT_VLU_NM_BRAND) in ('MODIFIED', 'CUSTOMIZED','YES') THEN 'MODIFIED' ELSE 'NO' end AS MODIFIED_ITEM,
	SUM(ck.gmv_plan_usd) AS GMV, 
	SUM(QUANTITY) AS BI,
	count(distinct (buyer_id)) as byr_cnt,
	count(distinct(ck.item_id)) as converted_lll,
	GMV/BI as ASP

FROM DW_CHECKOUT_TRANS AS ck

 LEFT JOIN ( select item_ID,CNDTN_ROLLUP_ID from ACCESS_VIEWS.LSTG_ITEM_CNDTN group by 1,2 ) AS CNDTN
        ON ck.ITEM_ID = CNDTN.ITEM_ID
LEFT JOIN 
                    (
                    SELECT ITEM_ID,
                           AUCT_END_DT,
                           COALESCE(MAX(ASPCT.ASPCT_VLU_NM),'UNKNOWN') AS ASPCT_VLU_NM_BRAND
                            FROM
                            ITEM_ASPCT_CLSSFCTN ASPCT
                            WHERE
                            UPPER(ASPCT.NS_TYPE_CD) IN ('NF','DF') 
                            AND ASPCT.AUCT_END_DT>='2018-12-26'
                            AND UPPER(ASPCT.PRDCT_ASPCT_NM) LIKE ('%MODIFIED ITEM%')
                            GROUP BY 1,2
                            
                        UNION 
                        
                        SELECT  ITEM_ID,
                           AUCT_END_DT,
                          COALESCE(MAX(ASPCT_COLD.ASPCT_VLU_NM),'UNKNOWN') AS ASPCT_VLU_NM_BRAND
                        FROM
                        ITEM_ASPCT_CLSSFCTN_COLD ASPCT_COLD
                        WHERE UPPER(ASPCT_COLD.NS_TYPE_CD) IN ('NF','DF') 
                        AND ASPCT_COLD.AUCT_END_DT>='2018-12-26'
                        AND UPPER(ASPCT_COLD.PRDCT_ASPCT_NM) LIKE ('%MODIFIED ITEM%')
                        GROUP BY 1,2
                    ) BRND ON CK.ITEM_ID = BRND.ITEM_ID AND CK.AUCT_END_DT = BRND.AUCT_END_DT

left join (Select
				item_id,
				Auct_end_dt,
				coalesce(max(case  when lower(aspect)=lower('BRAND') then aspct_vlu_nm else NULL end ),'Unknown') as BRAND
			FROM
				(select
					item_id,
					auct_end_dt,
					ns_type_cd,
					1 as priority,
					'BRAND' as aspect,
					cast(trim(lower(aspct_vlu_nm)) as VARCHAR(350)) as aspct_vlu_nm 
				from
					item_aspct_clssfctn
				where
					AUCT_END_DT>='2016-06-01'
					AND lower(ns_type_cd) in (lower('nf'),lower('df' ) ) and upper(prdct_aspct_nm)= upper('BRAND')
				UNION ALL
				select
					item_id,
					auct_end_dt,
					ns_type_cd,
					2 as priority,
					'BRAND' as aspect,
					cast(trim(lower(aspct_vlu_nm)) as VARCHAR(350)) as aspct_vlu_nm
				from
					item_aspct_clssfctn_cold
				WHERE
					AUCT_END_DT>='2016-06-01'
					AND lower(ns_type_cd) in (lower('nf'),lower('df' ) ) and upper(prdct_aspct_nm)= upper('BRAND')
				)SB
			GROUP BY 1,2) bbase ON ck.ITEM_ID = bbase.ITEM_ID AND ck.AUCT_END_dt = bbase.AUCT_END_DT

left join (Select
				item_id,
				Auct_end_dt,
				coalesce(max(case  when lower(aspect)=lower('MODEL') then aspct_vlu_nm else NULL end ),'Unknown') as MODEL
			FROM
				(select
					item_id,
					auct_end_dt,
					ns_type_cd,
					1 as priority,
					'MODEL' as aspect,
					cast(trim(lower(aspct_vlu_nm)) as VARCHAR(350)) as aspct_vlu_nm 
				from
					item_aspct_clssfctn
				where
					AUCT_END_DT>='2016-06-01'
					AND lower(ns_type_cd) in (lower('nf'),lower('df' ) ) and upper(prdct_aspct_nm)= upper('MODEL')
				UNION ALL
				select
					item_id,
					auct_end_dt,
					ns_type_cd,
					2 as priority,
					'MODEL' as aspect,
					cast(trim(lower(aspct_vlu_nm)) as VARCHAR(350)) as aspct_vlu_nm
				from
					item_aspct_clssfctn_cold
				WHERE
					AUCT_END_DT>='2016-06-01'
					AND lower(ns_type_cd) in (lower('nf'),lower('df' ) ) and upper(prdct_aspct_nm)= upper('MODEL')
				)SB1
			GROUP BY 1,2) bbase1 ON ck.ITEM_ID = bbase1.ITEM_ID AND ck.AUCT_END_dt = bbase1.AUCT_END_DT

		
-- inner  JOIN ACCESS_VIEWS.SSA_CURNCY_PLAN_RATE_DIM LPR 
-- 	ON ck.LSTG_CURNCY_ID = LPR.CURNCY_ID 
INNER JOIN ACCESS_VIEWS.DW_CAL_DT CAL 
	ON CAL.CAL_DT = ck.gmv_dt 
	and retail_year >= (select retail_year from DW_CAL_DT where AGE_FOR_RTL_WEEK_ID = -1 group by 1)-3 and AGE_FOR_RTL_WEEK_ID <= -1 

left outer join dw_users u
	on ck.seller_id = u.user_id
	
INNER JOIN DW_CATEGORY_GROUPINGS CAT 
	ON CAT.LEAF_CATEG_ID = ck.LEAF_CATEG_ID 
	AND CAT.SITE_ID = 3
	AND CAT.SAP_CATEGORY_ID NOT in (5,7,41,23,-999)   

WHERE 1=1
	AND  ck.AUCT_end_dt >= '2018-01-01'                    
AND ck.SITE_ID in (3)
and  (cat.CATEG_LVL3_ID in (169291) or cat.categ_lvl4_id = 52357)
	and ck.slr_CNTRY_ID in (3)
		GROUP BY 1,2,3,4,5,6,7)
-- 		where phase_flag not in ('Other')
		);
		
--------------------------------------------------------------------------------------------------------------------------------------------------------
drop table if exists p_robevans_t.hb_wow1 ;
create table p_robevans_t.hb_wow1 as (select * from (select
retail_year,
retail_week,
CASE
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 250  THEN 'A. <250'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 500 THEN 'B. 250-500'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 1000 THEN 'C. 500-1000'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 1250 THEN 'D. 1000-1250'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 1500 THEN 'E. 1250-1500'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 2000 THEN 'F. 1500-2000'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 5000 THEN 'G. 2000-5000'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 10000 THEN 'H. 5000-10,000'
		ELSE 'H.10,000' END AS
	PRICE_BUCKET,
	CASE WHEN CNDTN_ROLLUP_ID = 1 THEN 'New' WHEN CNDTN_ROLLUP_ID = 2 THEN 'Refurbished'  WHEN CNDTN_ROLLUP_ID = 3 THEN 'Used' ELSE 'Not Specified' END AS item_Cond,
		case when U.USER_DSGNTN_ID=2  then 'B2C' else 'C2C' end as bus_flag,
	CASE WHEN UPPER(BRND.ASPCT_VLU_NM_BRAND) in ('MODIFIED', 'CUSTOMIZED','YES') THEN 'MODIFIED' ELSE 'NO' end AS MODIFIED_ITEM,
	case when v.item_id = ck.item_id then  c else 1 end as count,
	count(distinct slr_id) as Seller_Count,
	count(distinct ck.item_id) as LL




FROM DW_LSTG_ITEM AS ck

 LEFT JOIN 
                    (
                    SELECT ITEM_ID,
                           AUCT_END_DT,
                           COALESCE(MAX(ASPCT.ASPCT_VLU_NM),'UNKNOWN') AS ASPCT_VLU_NM_BRAND
                            FROM
                            ITEM_ASPCT_CLSSFCTN ASPCT
                            WHERE
                            UPPER(ASPCT.NS_TYPE_CD) IN ('NF','DF') 
                            AND ASPCT.AUCT_END_DT>='2018-12-26'
                            AND UPPER(ASPCT.PRDCT_ASPCT_NM) LIKE ('%MODIFIED ITEM%')
                            GROUP BY 1,2
                            
                        UNION 
                        
                        SELECT  ITEM_ID,
                           AUCT_END_DT,
                          COALESCE(MAX(ASPCT_COLD.ASPCT_VLU_NM),'UNKNOWN') AS ASPCT_VLU_NM_BRAND
                        FROM
                        ITEM_ASPCT_CLSSFCTN_COLD ASPCT_COLD
                        WHERE UPPER(ASPCT_COLD.NS_TYPE_CD) IN ('NF','DF') 
                        AND ASPCT_COLD.AUCT_END_DT>='2018-12-26'
                        AND UPPER(ASPCT_COLD.PRDCT_ASPCT_NM) LIKE ('%MODIFIED ITEM%')
                        GROUP BY 1,2
                    ) BRND ON CK.ITEM_ID = BRND.ITEM_ID AND CK.AUCT_END_DT = BRND.AUCT_END_DT

left join (Select
				item_id,
				Auct_end_dt,
				coalesce(max(case  when lower(aspect)=lower('BRAND') then aspct_vlu_nm else NULL end ),'Unknown') as BRAND
			FROM
				(select
					item_id,
					auct_end_dt,
					ns_type_cd,
					1 as priority,
					'BRAND' as aspect,
					cast(trim(lower(aspct_vlu_nm)) as VARCHAR(350)) as aspct_vlu_nm 
				from
					item_aspct_clssfctn
				where
					AUCT_END_DT>='2016-06-01'
					AND lower(ns_type_cd) in (lower('nf'),lower('df' ) ) and upper(prdct_aspct_nm)= upper('BRAND')
				UNION ALL
				select
					item_id,
					auct_end_dt,
					ns_type_cd,
					2 as priority,
					'BRAND' as aspect,
					cast(trim(lower(aspct_vlu_nm)) as VARCHAR(350)) as aspct_vlu_nm
				from
					item_aspct_clssfctn_cold
				WHERE
					AUCT_END_DT>='2016-06-01'
					AND lower(ns_type_cd) in (lower('nf'),lower('df' ) ) and upper(prdct_aspct_nm)= upper('BRAND')
				)SB
			GROUP BY 1,2) bbase ON ck.ITEM_ID = bbase.ITEM_ID AND ck.AUCT_END_dt = bbase.AUCT_END_DT

left join (Select
				item_id,
				Auct_end_dt,
				coalesce(max(case  when lower(aspect)=lower('MODEL') then aspct_vlu_nm else NULL end ),'Unknown') as MODEL
			FROM
				(select
					item_id,
					auct_end_dt,
					ns_type_cd,
					1 as priority,
					'MODEL' as aspect,
					cast(trim(lower(aspct_vlu_nm)) as VARCHAR(350)) as aspct_vlu_nm 
				from
					item_aspct_clssfctn
				where
					AUCT_END_DT>='2016-06-01'
					AND lower(ns_type_cd) in (lower('nf'),lower('df' ) ) and upper(prdct_aspct_nm)= upper('MODEL')
				UNION ALL
				select
					item_id,
					auct_end_dt,
					ns_type_cd,
					2 as priority,
					'MODEL' as aspect,
					cast(trim(lower(aspct_vlu_nm)) as VARCHAR(350)) as aspct_vlu_nm
				from
					item_aspct_clssfctn_cold
				WHERE
					AUCT_END_DT>='2016-06-01'
					AND lower(ns_type_cd) in (lower('nf'),lower('df' ) ) and upper(prdct_aspct_nm)= upper('MODEL')
				)SB1
			GROUP BY 1,2) bbase1 ON ck.ITEM_ID = bbase1.ITEM_ID AND ck.AUCT_END_dt = bbase1.AUCT_END_DT

LEFT JOIN (select item_id, item_VRTN_ID  from LSTG_ITEM_VRTN group by 1,2) v on v.item_id = ck.item_id
LEFT JOIN (select item_id, count(ITEM_VRTN_ID) c  from LSTG_ITEM_VRTN group by 1) v1 on v1.item_id = ck.item_id


 LEFT JOIN ( select item_ID,CNDTN_ROLLUP_ID from ACCESS_VIEWS.LSTG_ITEM_CNDTN group by 1,2 ) AS CNDTN
        ON ck.ITEM_ID = CNDTN.ITEM_ID
INNER JOIN DW_COUNTRIES CN ON CN.CNTRY_ID = ck.SLR_CNTRY_ID
INNER JOIN ACCESS_VIEWS.GLBL_RPRT_GEO_DIM GEO ON CN.REV_ROLLUP_ID = GEO.REV_ROLLUP_ID 
INNER JOIN DW_CAL_DT CAL ON ck.AUCT_START_DT < CAL.CAL_DT AND ck.AUCT_END_DT >= CAL.CAL_DT AND ck.AUCT_START_DT < CURRENT_DATE AND ck.AUCT_END_DT >= CURRENT_DATE
left outer join dw_users u
on ck.slr_id = u.user_id

INNER JOIN DW_CATEGORY_GROUPINGS CAT 
	ON CAT.LEAF_CATEG_ID = ck.LEAF_CATEG_ID 
	AND CAT.SITE_ID = 3
	AND CAT.SAP_CATEGORY_ID NOT in (5,7,41,23,-999)   

WHERE 1=1
	AND  ck.AUCT_end_dt >= '2018-01-01'
and ck.wacko_YN = 'N'                      
AND ck.AUCT_TYPE_CODE NOT in (10,15)
AND ck.ITEM_SITE_ID in (3)
and  (cat.CATEG_LVL3_ID in (169291) or cat.categ_lvl4_id = 52357)
	and ck.slr_CNTRY_ID in (3)
		GROUP BY 1,2,3,4,5,6,7) 
-- 		where phase_flag not in ('Other')
		);
		

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------ Top Sellers, Top listings----------------------------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------------------------------------------------------------------------
-- top sellers 1
drop table if exists P_robevans_T.hb_fm_gmva;

CREATE TABLE P_robevans_T.hb_fm_gmva AS

select
	seller_id,
	SUM(ck.gmv_plan_usd) AS GMV

FROM DW_CHECKOUT_TRANS AS ck
-- inner  JOIN ACCESS_VIEWS.SSA_CURNCY_PLAN_RATE_DIM LPR 
-- 	ON ck.LSTG_CURNCY_ID = LPR.CURNCY_ID 
INNER JOIN ACCESS_VIEWS.DW_CAL_DT CAL 
	ON CAL.CAL_DT = ck.gmv_dt 
	and retail_year >= (select retail_year from DW_CAL_DT where AGE_FOR_RTL_WEEK_ID = -1 group by 1)-1 and AGE_FOR_RTL_WEEK_ID <= -1 
left outer join dw_users u
	on ck.seller_id = u.user_id
INNER JOIN DW_CATEGORY_GROUPINGS CAT 
	ON CAT.LEAF_CATEG_ID = ck.LEAF_CATEG_ID 
	AND CAT.SITE_ID = 3
	AND CAT.SAP_CATEGORY_ID NOT in (5,7,41,23,-999)   

WHERE 1=1
	AND ck.ck_wacko_YN  =  'N'
	AND ck.SALE_TYPE NOT in (10,15)
	and ck.byr_cntry_id =3 
	and ck.ITEM_PRICE >= 250
	and ck.SLR_CNTRY_ID = 3
and  (cat.CATEG_LVL3_ID in (169291) or cat.categ_lvl4_id = 52357)

	GROUP BY 1
	 order by GMV desc
	 limit 2000


	
-- WITH DATA PRIMARY inDEX(seller_id, RETAIL_WEEK, RETAIL_YEAR, categ_lvl2_id);
;


---------------------------------------------------------------------------------------------------------------------------------------------------------------
-- top sellers 2
drop table if exists P_robevans_T.hb_fm_gmv11;

CREATE TABLE P_robevans_T.hb_fm_gmv11 AS

(select
	cal.retail_year,
	cal.retail_week,
	ck.seller_id,
	user_slctd_id,
	categ_lvl3_id,
	CATEG_LVL3_NAME,
	categ_lvl4_name,
	categ_lvl4_id,
CASE
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 250 THEN 'A. <250'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 500 THEN 'B. 250-500'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 1000 THEN 'C. 500-1000'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 1250 THEN 'D. 1000-1250'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 1500 THEN 'E. 1250-1500'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 2000 THEN 'F. 1500-2000'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 5000 THEN 'G. 2000-5000'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 10000 THEN 'H. 5000-10,000'
		ELSE 'H.10,000' END AS
	PRICE_BUCKET,
	CASE WHEN CNDTN_ROLLUP_ID = 1 THEN 'New' WHEN CNDTN_ROLLUP_ID = 2 THEN 'Refurbished'  WHEN CNDTN_ROLLUP_ID = 3 THEN 'Used' ELSE 'Not Specified' END AS item_Cond,
		case when U.USER_DSGNTN_ID=2  then 'B2C' else 'C2C' end as bus_flag,
-- 	case when BYR_CNTRY_ID = 3 the 'UK' else 'International' end as buyer_location,
	SUM(ck.gmv_plan_usd) AS GMV, 
	count(DISTINCT BUYER_ID) as byr_cnt,
	SUM(QUANTITY) AS BI,
	count(distinct(ck.item_id)) as converted_lll

FROM DW_CHECKOUT_TRANS AS ck

INNER JOIN (select selleR_id from  P_robevans_T.hb_fm_gmva) as a on ck.seller_id = a.seller_id
 LEFT JOIN ( select item_ID,CNDTN_ROLLUP_ID from ACCESS_VIEWS.LSTG_ITEM_CNDTN group by 1,2 ) AS CNDTN
        ON ck.ITEM_ID = CNDTN.ITEM_ID
-- inner  JOIN ACCESS_VIEWS.SSA_CURNCY_PLAN_RATE_DIM LPR 
-- 	ON ck.LSTG_CURNCY_ID = LPR.CURNCY_ID 
INNER JOIN ACCESS_VIEWS.DW_CAL_DT CAL 
	ON CAL.CAL_DT = ck.gmv_dt 
	and retail_year >= (select retail_year from DW_CAL_DT where AGE_FOR_RTL_WEEK_ID = -1 group by 1)-1 and AGE_FOR_RTL_WEEK_ID <= -1 
left outer join dw_users u
	on ck.seller_id = u.user_id
INNER JOIN DW_CATEGORY_GROUPINGS CAT 
	ON CAT.LEAF_CATEG_ID = ck.LEAF_CATEG_ID 
	AND CAT.SITE_ID = 3
	AND CAT.SAP_CATEGORY_ID NOT in (5,7,41,23,-999)   

WHERE 1=1
	AND ck.ck_wacko_YN  =  'N'
	AND ck.SALE_TYPE NOT in (10,15)
	and ck.byr_cntry_id =3 
	and ck.SLR_CNTRY_ID = 3
and  (cat.CATEG_LVL3_ID in (169291) or cat.categ_lvl4_id = 52357)

	GROUP BY 1,2,3,4,5,6,7,8,9,10,11

) 
	
-- WITH DATA PRIMARY inDEX(seller_id, RETAIL_WEEK, RETAIL_YEAR, categ_lvl2_id);
;

---------------------------------------------------------------------------------------------------------------------------------------------------------------
-- top 2021 listings 1 gmv

-- select * from  P_robevans_T.hb_item_gmv1a

drop table if exists P_robevans_T.hb_item_gmv1a;

CREATE TABLE P_robevans_T.hb_item_gmv1a AS

select
	ck.item_id, ck.AUCT_END_DT,
	SUM(ck.gmv_plan_usd) AS GMV

FROM DW_CHECKOUT_TRANS AS ck
-- inner  JOIN ACCESS_VIEWS.SSA_CURNCY_PLAN_RATE_DIM LPR 
-- 	ON ck.LSTG_CURNCY_ID = LPR.CURNCY_ID 
LEFT JOIN  DW_LSTG_ITEM i on ck.item_id = i.item_id and ck.AUCT_END_DT = i.AUCT_END_DT
INNER JOIN ACCESS_VIEWS.DW_CAL_DT CAL 
	ON CAL.CAL_DT = ck.gmv_dt 
	and retail_year >= (select retail_year from DW_CAL_DT where AGE_FOR_RTL_WEEK_ID = -1 group by 1)-1 and AGE_FOR_RTL_WEEK_ID <= -1 
left outer join dw_users u
	on ck.seller_id = u.user_id
INNER JOIN DW_CATEGORY_GROUPINGS CAT 
	ON CAT.LEAF_CATEG_ID = ck.LEAF_CATEG_ID 
	AND CAT.SITE_ID = 3
	AND CAT.SAP_CATEGORY_ID NOT in (5,7,41,23,-999)   

WHERE 1=1
	AND ck.ck_wacko_YN  =  'N'
	AND ck.SALE_TYPE NOT in (10,15)
	and ck.byr_cntry_id =3 
	and ck.ITEM_PRICE >= 250
	and ck.SLR_CNTRY_ID = 3
and  (cat.CATEG_LVL3_ID in (169291) or cat.categ_lvl4_id = 52357)

	GROUP BY 1,2
	order by GMv DESC
	limit 2000


-- WITH DATA PRIMARY inDEX(seller_id, RETAIL_WEEK, RETAIL_YEAR, categ_lvl2_id);
;



---------------------------------------------------------------------------------------------------------------------------------------------------------------
-- top 2021 listings 2 gmv

-- select * from P_robevans_T.hb_item_gmv1

drop table if exists P_robevans_T.hb_item_gmv1;

CREATE TABLE P_robevans_T.hb_item_gmv1 AS

select
	cal.retail_year,
	cal.retail_week,
	seller_id,
	user_slctd_id,
	i.auct_titl,
	ck.item_id,
	categ_lvl3_id,
	CATEG_LVL3_NAME,
	categ_lvl4_name,
	categ_lvl4_id,
CASE
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 250 THEN 'A. <250'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 500 THEN 'B. 250-500'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 1000 THEN 'C. 500-1000'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 1250 THEN 'D. 1000-1250'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 1500 THEN 'E. 1250-1500'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 2000 THEN 'F. 1500-2000'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 5000 THEN 'G. 2000-5000'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 10000 THEN 'H. 5000-10,000'
		ELSE 'H.10,000' END AS
	PRICE_BUCKET,
	CASE WHEN CNDTN_ROLLUP_ID = 1 THEN 'New' WHEN CNDTN_ROLLUP_ID = 2 THEN 'Refurbished'  WHEN CNDTN_ROLLUP_ID = 3 THEN 'Used' ELSE 'Not Specified' END AS item_Cond,
		case when U.USER_DSGNTN_ID=2  then 'B2C' else 'C2C' end as bus_flag,
-- 	case when BYR_CNTRY_ID = 3 the 'UK' else 'International' end as buyer_location,
	SUM(ck.gmv_plan_usd) AS GMV, 
	count(DISTINCT BUYER_ID) as byr_cnt,
	SUM(QUANTITY) AS BI,
	count(distinct(ck.item_id)) as converted_lll,
	GMV/BI as ASP

FROM DW_CHECKOUT_TRANS AS ck
INNER JOIN (Select item_id,AUCT_END_DT from P_robevans_T.hb_item_gmv1a) a on a.item_id = ck.item_id and ck.AUCT_END_DT = a.AUCT_END_DT
 LEFT JOIN ( select item_ID,CNDTN_ROLLUP_ID from ACCESS_VIEWS.LSTG_ITEM_CNDTN group by 1,2 ) AS CNDTN
        ON ck.ITEM_ID = CNDTN.ITEM_ID
-- inner  JOIN ACCESS_VIEWS.SSA_CURNCY_PLAN_RATE_DIM LPR 
-- 	ON ck.LSTG_CURNCY_ID = LPR.CURNCY_ID 
LEFT JOIN DW_LSTG_ITEM i on i.item_id = ck.item_id and i.AUCT_END_dt = ck.AUCT_END_DT
INNER JOIN ACCESS_VIEWS.DW_CAL_DT CAL 
	ON CAL.CAL_DT = ck.gmv_dt 
	and retail_year >= (select retail_year from DW_CAL_DT where AGE_FOR_RTL_WEEK_ID = -1 group by 1)-1 and AGE_FOR_RTL_WEEK_ID <= -1 
left outer join dw_users u
	on ck.seller_id = u.user_id
INNER JOIN DW_CATEGORY_GROUPINGS CAT 
	ON CAT.LEAF_CATEG_ID = ck.LEAF_CATEG_ID 
	AND CAT.SITE_ID = 3
	AND CAT.SAP_CATEGORY_ID NOT in (5,7,41,23,-999)   

WHERE 1=1
	AND ck.ck_wacko_YN  =  'N'
	AND ck.SALE_TYPE NOT in (10,15)
	and ck.byr_cntry_id =3 
	and ck.SLR_CNTRY_ID = 3
and  (cat.CATEG_LVL3_ID in (169291) or cat.categ_lvl4_id = 52357)

	GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13

	
-- WITH DATA PRIMARY inDEX(seller_id, RETAIL_WEEK, RETAIL_YEAR, categ_lvl2_id);
;

		
---------------------------------------------------------------------------------------------------------------------------------------------------------------
-- top 2021 listings 1 gmv

-- select * from  P_robevans_T.hb_item_gmv1a

drop table if exists P_robevans_T.hb_item_gmv1aa;

CREATE TABLE P_robevans_T.hb_item_gmv1aa AS

select
	ck.item_id, ck.AUCT_END_DT,
	SUM(ck.gmv_plan_usd) AS GMV,
	SUM(QUANTITY) AS BI

FROM DW_CHECKOUT_TRANS AS ck
LEFT JOIN  DW_LSTG_ITEM i on i.item_id = ck.item_id and i.AUCT_END_DT = ck.AUCT_END_DT
INNER JOIN ACCESS_VIEWS.DW_CAL_DT CAL 
	ON CAL.CAL_DT = ck.gmv_dt 
	and AGE_FOR_RTL_WEEK_ID >= -53
left outer join dw_users u
	on ck.seller_id = u.user_id
INNER JOIN DW_CATEGORY_GROUPINGS CAT 
	ON CAT.LEAF_CATEG_ID = ck.LEAF_CATEG_ID 
	AND CAT.SITE_ID = 3
	AND CAT.SAP_CATEGORY_ID NOT in (5,7,41,23,-999)   

WHERE 1=1
	AND ck.ck_wacko_YN  =  'N'
	AND ck.SALE_TYPE NOT in (10,15)
	and ck.byr_cntry_id =3 
	and ck.ITEM_PRICE >= 250
	and ck.SLR_CNTRY_ID = 3
and  (cat.CATEG_LVL3_ID in (169291) or cat.categ_lvl4_id = 52357)

	GROUP BY 1,2
	order by BI DESC
	limit 2000


-- WITH DATA PRIMARY inDEX(seller_id, RETAIL_WEEK, RETAIL_YEAR, categ_lvl2_id);
;



---------------------------------------------------------------------------------------------------------------------------------------------------------------
-- top 2021 listings 2 gmv

-- select * from P_robevans_T.hb_item_gmv1

drop table if exists P_robevans_T.hb_item_gmv11;

CREATE TABLE P_robevans_T.hb_item_gmv11 AS

select
	cal.retail_year,
	cal.retail_week,
	seller_id,
	user_slctd_id,
	i.auct_titl,
	ck.item_id,
	categ_lvl3_id,
	CATEG_LVL3_NAME,
	categ_lvl4_name,
	categ_lvl4_id,
CASE
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 250 THEN 'A. <250'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 500 THEN 'B. 250-500'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 1000 THEN 'C. 500-1000'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 1250 THEN 'D. 1000-1250'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 1500 THEN 'E. 1250-1500'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 2000 THEN 'F. 1500-2000'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 5000 THEN 'G. 2000-5000'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 10000 THEN 'H. 5000-10,000'
		ELSE 'H.10,000' END AS
	PRICE_BUCKET,
	CASE WHEN CNDTN_ROLLUP_ID = 1 THEN 'New' WHEN CNDTN_ROLLUP_ID = 2 THEN 'Refurbished'  WHEN CNDTN_ROLLUP_ID = 3 THEN 'Used' ELSE 'Not Specified' END AS item_Cond,
		case when U.USER_DSGNTN_ID=2  then 'B2C' else 'C2C' end as bus_flag,
-- 	case when BYR_CNTRY_ID = 3 the 'UK' else 'International' end as buyer_location,
	SUM(ck.gmv_plan_usd) AS GMV, 
	count(DISTINCT BUYER_ID) as byr_cnt,
	SUM(QUANTITY) AS BI,
	count(distinct(ck.item_id)) as converted_lll,
	GMV/BI as ASP

FROM DW_CHECKOUT_TRANS AS ck

INNER JOIN (Select item_id,AUCT_END_DT from P_robevans_T.hb_item_gmv1aa) a on a.item_id = ck.item_id and ck.AUCT_END_DT = a.AUCT_END_DT
 LEFT JOIN ( select item_ID,CNDTN_ROLLUP_ID from ACCESS_VIEWS.LSTG_ITEM_CNDTN group by 1,2 ) AS CNDTN
        ON ck.ITEM_ID = CNDTN.ITEM_ID
-- inner  JOIN ACCESS_VIEWS.SSA_CURNCY_PLAN_RATE_DIM LPR 
-- 	ON ck.LSTG_CURNCY_ID = LPR.CURNCY_ID 
LEFT JOIN DW_LSTG_ITEM i on i.item_id = ck.item_id and i.AUCT_END_dt = ck.AUCT_END_DT
INNER JOIN ACCESS_VIEWS.DW_CAL_DT CAL 
	ON CAL.CAL_DT = ck.gmv_dt 
	and AGE_FOR_RTL_WEEK_ID >= -53
left outer join dw_users u
	on ck.seller_id = u.user_id
INNER JOIN DW_CATEGORY_GROUPINGS CAT 
	ON CAT.LEAF_CATEG_ID = ck.LEAF_CATEG_ID 
	AND CAT.SITE_ID = 3
	AND CAT.SAP_CATEGORY_ID NOT in (5,7,41,23,-999)   

WHERE 1=1
	AND ck.ck_wacko_YN  =  'N'
	AND ck.SALE_TYPE NOT in (10,15)
	and ck.byr_cntry_id =3 
	and ck.SLR_CNTRY_ID = 3
and  (cat.CATEG_LVL3_ID in (169291) or cat.categ_lvl4_id = 52357)

	GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13

	
-- WITH DATA PRIMARY inDEX(seller_id, RETAIL_WEEK, RETAIL_YEAR, categ_lvl2_id);
;

------------------------------------------------------------------------------------------------------------------------------------------------------
-- Funnel metrics
------------------------------------------------------------------------------------------------------------------------------------------------------ADD

---------------------------------------------------------------------------------------------------------------------------------------------------------------
-- select * from p_robevans_t.hb_final where user_slctd_id = 'hooverlimited' where retail_year in (2020) 
-- select * from P_robevans_T.hb_base where retail_year = 2021 and retail_week = 15
drop table if exists P_robevans_T.hb_fm_gmv;

CREATE TABLE P_robevans_T.hb_fm_gmv AS

(select
	cal.retail_year,
	cal.retail_week,
	cal.AGE_FOR_RTL_WEEK_ID,
	categ_lvl4_name,categ_lvl3_name, categ_lvl3_id,	
	categ_lvl4_id,
CASE
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 250 THEN 'A. <250'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 500 THEN 'B. 250-500'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 1000 THEN 'C. 500-1000'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 1250 THEN 'D. 1000-1250'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 1500 THEN 'E. 1250-1500'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 2000 THEN 'F. 1500-2000'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 5000 THEN 'G. 2000-5000'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 10000 THEN 'H. 5000-10,000'
		ELSE 'H.10,000' END AS
	PRICE_BUCKET,
	CASE WHEN CNDTN_ROLLUP_ID = 1 THEN 'New' WHEN CNDTN_ROLLUP_ID = 2 THEN 'Refurbished'  WHEN CNDTN_ROLLUP_ID = 3 THEN 'Used' ELSE 'Not Specified' END AS item_Cond,
		case when U.USER_DSGNTN_ID=2  then 'B2C' else 'C2C' end as bus_flag,
-- 	case when BYR_CNTRY_ID = 3 the 'UK' else 'International' end as buyer_location,
	SUM(ck.gmv_plan_usd) AS GMV, 
	count(DISTINCT BUYER_ID) as byr_cnt,
	SUM(QUANTITY) AS BI,
	count(distinct(ck.item_id)) as converted_lll,
	GMV/BI as ASP

FROM DW_CHECKOUT_TRANS AS ck
 LEFT JOIN ( select item_ID,CNDTN_ROLLUP_ID from ACCESS_VIEWS.LSTG_ITEM_CNDTN group by 1,2 ) AS CNDTN
        ON ck.ITEM_ID = CNDTN.ITEM_ID
INNER JOIN ACCESS_VIEWS.DW_CAL_DT CAL 
	ON CAL.CAL_DT = ck.gmv_dt 
	and retail_year >= (select retail_year from DW_CAL_DT where AGE_FOR_RTL_WEEK_ID = -1 group by 1)-3 and AGE_FOR_RTL_WEEK_ID <= -1 
left outer join dw_users u
	on ck.seller_id = u.user_id
INNER JOIN DW_CATEGORY_GROUPINGS CAT 
	ON CAT.LEAF_CATEG_ID = ck.LEAF_CATEG_ID 
	AND CAT.SITE_ID = 3
	AND CAT.SAP_CATEGORY_ID NOT in (5,7,41,23,-999)   

WHERE 1=1
	AND ck.ck_wacko_YN  =  'N'
	AND ck.SALE_TYPE NOT in (10,15)
	and ck.byr_cntry_id =3 
	and ck.SLR_CNTRY_ID = 3
and  (cat.CATEG_LVL3_ID in (169291) or cat.categ_lvl4_id = 52357)

	GROUP BY 1,2,3,4,5,6,7,8,9,10

)
	
-- WITH DATA PRIMARY inDEX(seller_id, RETAIL_WEEK, RETAIL_YEAR, categ_lvl2_id);
;



---------------------------------------------------------------------------------------------------------------------------
drop table if exists P_robevans_T.hb_fm_base;
---------------------------------------------------------------------------------------------------------------------------
CREATE TABLE P_robevans_T.hb_fm_base AS

(SELECT
cal.retail_year,
cal.retail_week,
	cal.AGE_FOR_RTL_WEEK_ID,
categ_lvl4_name,
categ_lvl4_id,categ_lvl3_name, categ_lvl3_id,	
CASE
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 250  THEN 'A. <250'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 500 THEN 'B. 250-500'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 1000 THEN 'C. 500-1000'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 1250 THEN 'D. 1000-1250'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 1500 THEN 'E. 1250-1500'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 2000 THEN 'F. 1500-2000'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 5000 THEN 'G. 2000-5000'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 10000 THEN 'H. 5000-10,000'
		ELSE 'H.10,000' END AS
	PRICE_BUCKET,
	CASE WHEN CNDTN_ROLLUP_ID = 1 THEN 'New' WHEN CNDTN_ROLLUP_ID = 2 THEN 'Refurbished'  WHEN CNDTN_ROLLUP_ID = 3 THEN 'Used' ELSE 'Not Specified' END AS item_Cond,
		case when U.USER_DSGNTN_ID=2  then 'B2C' else 'C2C' end as bus_flag,
count(distinct(ck.item_id)) as LL

FROM DW_LSTG_ITEM ck 

 LEFT JOIN ( select item_ID,CNDTN_ROLLUP_ID from ACCESS_VIEWS.LSTG_ITEM_CNDTN group by 1,2 ) AS CNDTN
        ON ck.ITEM_ID = CNDTN.ITEM_ID
INNER JOIN DW_LSTG_ITEM D ON ck.ITEM_ID = D.ITEM_ID AND ck.AUCT_END_DT = D.AUCT_END_DT
INNER JOIN DW_CATEGORY_GROUPINGS CAT ON CAT.LEAF_CATEG_ID = ck.LEAF_CATEG_ID AND CAT.SITE_ID = ck.ITEM_SITE_ID and cat.site_id = 3 
INNER JOIN DW_COUNTRIES CN ON CN.CNTRY_ID = ck.SLR_CNTRY_ID
INNER JOIN ACCESS_VIEWS.GLBL_RPRT_GEO_DIM GEO ON CN.REV_ROLLUP_ID = GEO.REV_ROLLUP_ID 
INNER JOIN DW_CAL_DT CAL ON ck.AUCT_START_DT < CAL.CAL_DT AND ck.AUCT_END_DT >= CAL.CAL_DT AND RETAIL_YEAR >= (select retail_year from DW_CAL_DT where AGE_FOR_RTL_WEEK_ID = -1 group by 1)-3 and AGE_FOR_RTL_WEEK_ID <= -1 
left outer join dw_users u
on ck.slr_id = u.user_id
WHERE ck.wacko_YN = 'N'                      
AND ck.AUCT_TYPE_CODE NOT in (10,15)
AND ck.ITEM_SITE_ID = 3
and ck.auct_end_dt >= '2018-01-01'
and ck.SLR_CNTRY_ID = 3
and  (cat.CATEG_LVL3_ID in (169291) or cat.categ_lvl4_id = 52357)
group by 1,2,3,4,5,6,7,8,9,10
 );
-- WITH DATA PRIMARY inDEX(slr_id, categ_lvl2_id, retail_year,retail_week);
 
--  COLLECT STATS P_robevans_T.hb_base COLUMN(retail_year,retail_week,slr_id);
---------------------------------------------------------------------------------------------------------------------------
drop table if exists P_robevans_T.hb_fm_vi;
---------------------------------------------------------------------------------------------------------------------------
CREATE TABLE P_robevans_T.hb_fm_vi AS

(SELECT
cal.retail_year,
cal.retail_week,
	cal.AGE_FOR_RTL_WEEK_ID,
categ_lvl4_name,
categ_lvl4_id,categ_lvl3_name, categ_lvl3_id,	
CASE
		WHEN Cast(i.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 250  THEN 'A. <250'
		WHEN Cast(i.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 500 THEN 'B. 250-500'
		WHEN Cast(i.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 1000 THEN 'C. 500-1000'
		WHEN Cast(i.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 1250 THEN 'D. 1000-1250'
		WHEN Cast(i.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 1500 THEN 'E. 1250-1500'
		WHEN Cast(i.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 2000 THEN 'F. 1500-2000'
		WHEN Cast(i.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 5000 THEN 'G. 2000-5000'
		WHEN Cast(i.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 10000 THEN 'H. 5000-10,000'
		ELSE 'H.10,000' END AS
	PRICE_BUCKET,
	CASE WHEN CNDTN_ROLLUP_ID = 1 THEN 'New' WHEN CNDTN_ROLLUP_ID = 2 THEN 'Refurbished'  WHEN CNDTN_ROLLUP_ID = 3 THEN 'Used' ELSE 'Not Specified' END AS item_Cond,
		case when U.USER_DSGNTN_ID=2  then 'B2C' else 'C2C' end as bus_flag,
sum(SRP_IMPRSN_CNT) as SRP_IMP,
SUM(SRP_VI_CNT) as SRP_VI,
SUM(other_SRC_VI_CNT) as otherVi,
SUM(watch_CNT) as watches

 FROM PRS_restricted_V.SLNG_TRFC_SUPER_FACT ck
         
    inNER JOIN ACCESS_VIEWS.DW_CATEGORY_GROUPINGS AS CAT
        ON ck.LEAF_CATEG_ID = CAT.LEAF_CATEG_ID
        AND ck.SITE_ID = CAT.SITE_ID and cat.site_id = 3 
    left outer join dw_users u
on ck.seller_id = u.user_id
inner join dw_cal_dt cal on ck.cal_dt = cal.cal_dt AND cal.RETAIL_YEAR >= (select retail_year from DW_CAL_DT where AGE_FOR_RTL_WEEK_ID = -1 group by 1)-3 and AGE_FOR_RTL_WEEK_ID <=-1
inner join (select item_id, START_PRICE_LSTG_CURNCY,BIN_PRICE_LSTG_CURNCY,RSRV_PRICE_LIST_CRNCY, slr_cntry_id from  DW_LSTG_ITEM) i on i.item_id = ck.item_id and SLR_CNTRY_ID = 3
 LEFT JOIN ( select item_ID,CNDTN_ROLLUP_ID from ACCESS_VIEWS.LSTG_ITEM_CNDTN group by 1,2 ) AS CNDTN
        ON ck.ITEM_ID = CNDTN.ITEM_ID

    WHERE 1=1
and ck.site_id = 3  
and  (cat.CATEG_LVL3_ID in (169291) or cat.categ_lvl4_id = 52357)
GROUP BY 1,2,3,4,5,6,7,8,9,10
 )	
-- WITH DATA PRIMARY inDEX(seller_id, categ_lvl2_id, retail_year,retail_week);
 
 ;
--  COLLECT STATS P_robevans_T.hb_vi COLUMN(retail_year,retail_week,seller_id);
-- select * from p_robevans_t.hb_tracker
---------------------------------------------------------------------------------------------------------------------------
drop table if exists p_robevans_t.hb_tracker;
--------------------------------------------------------------------------------------------------------------------------- 

CREATE table p_robevans_t.hb_tracker as

 (SELECT retail_year, retail_week, 	AGE_FOR_RTL_WEEK_ID,categ_lvl4_name, categ_lvl4_id,categ_lvl3_name, categ_lvl3_id,	Item_Cond, bus_flag, PRICE_BUCKET, GMV, BI, byr_cnt, converted_lll, ASP, ll, SRP_IMP, SRP_VI,  otherVi, watches

FROM (
 
	SELECT retail_year, retail_week, AGE_FOR_RTL_WEEK_ID,categ_lvl4_name, categ_lvl4_id,categ_lvl3_name, categ_lvl3_id,	Item_Cond, bus_flag, 	PRICE_BUCKET,  GMV, BI, byr_cnt, converted_lll, ASP, cast(0 as decimal(38,10)) AS ll, cast(0 as decimal(38,10)) as SRP_IMP, cast(0 as decimal(38,10)) as SRP_VI, cast(0 as decimal(38,10)) as otherVi, cast(0 as decimal(38,10)) AS watches
		FROM P_robevans_T.hb_fm_gmv

UNION ALL

	SELECT retail_year, retail_week, AGE_FOR_RTL_WEEK_ID,categ_lvl4_name, categ_lvl4_id,  categ_lvl3_name, categ_lvl3_id,	Item_Cond, bus_flag, 	PRICE_BUCKET, 0 AS GMV, 0 AS BI, 0 AS Byr_cnt, 0 AS converted_lll, 0 AS ASP, ll, 0 as SRP_IMP, 0 as SRP_VI, 0 as otherVi, 0 AS watches
		FROM P_robevans_T.hb_fm_base

UNION ALL

	SELECT retail_year, retail_week,AGE_FOR_RTL_WEEK_ID,categ_lvl4_name, categ_lvl4_id, categ_lvl3_name, categ_lvl3_id,	Item_Cond, bus_flag, 	PRICE_BUCKET, 0 AS GMV, 0 AS BI, 0 AS Byr_cnt, 0 AS converted_lll, 0 AS ASP, 0 AS ll,SRP_IMP,	SRP_VI,	otherVi, watches
		FROM P_robevans_T.hb_fm_vi
		
		) unio

GROUP BY retail_year, retail_week,AGE_FOR_RTL_WEEK_ID, categ_lvl4_name, categ_lvl4_id, categ_lvl3_name, categ_lvl3_id,	Item_Cond, bus_flag, 	PRICE_BUCKET, GMV, BI, byr_cnt, converted_lll, ASP, ll, SRP_IMP, SRP_VI,  otherVi, watches
 
 )
 ; 
 

 
------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------- Rolling 13 weeks/90 days LL ---------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------



drop table if exists p_robevans_t.hb_rolling13wks_ll ;
create table p_robevans_t.hb_rolling13wks_ll as (select * from (select
retail_year,
retail_week,
AGE_FOR_RTL_WEEK_ID,
CASE
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 250 THEN 'A. <250'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 500 THEN 'B. 250-500'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 1000 THEN 'C. 500-1000'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 1250 THEN 'D. 1000-1250'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 1500 THEN 'E. 1250-1500'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 2000 THEN 'F. 1500-2000'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 5000 THEN 'G. 2000-5000'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 10000 THEN 'H. 5000-10,000'
		ELSE 'H.10,000' END AS
	PRICE_BUCKET,
	CASE WHEN CNDTN_ROLLUP_ID = 1 THEN 'New' WHEN CNDTN_ROLLUP_ID = 2 THEN 'Refurbished'  WHEN CNDTN_ROLLUP_ID = 3 THEN 'Used' ELSE 'Not Specified' END AS item_Cond,
	case when U.USER_DSGNTN_ID=2  then 'B2C' else 'C2C' end as bus_flag,
	CASE WHEN UPPER(BRND.ASPCT_VLU_NM_BRAND) in ('MODIFIED', 'CUSTOMIZED','YES') THEN 'MODIFIED' ELSE 'NO' end AS MODIFIED_ITEM,
	case when v.item_id = ck.item_id then  c else 1 end as count,
	count(distinct slr_id) as Seller_Count,
	count(distinct ck.item_id) as LL

FROM DW_LSTG_ITEM AS ck

 LEFT JOIN 
                    (
                    SELECT ITEM_ID,
                           AUCT_END_DT,
                           COALESCE(MAX(ASPCT.ASPCT_VLU_NM),'UNKNOWN') AS ASPCT_VLU_NM_BRAND
                            FROM
                            ITEM_ASPCT_CLSSFCTN ASPCT
                            WHERE
                            UPPER(ASPCT.NS_TYPE_CD) IN ('NF','DF') 
                            AND ASPCT.AUCT_END_DT>='2018-12-26'
                            AND UPPER(ASPCT.PRDCT_ASPCT_NM) LIKE ('%MODIFIED ITEM%')
                            GROUP BY 1,2
                            
                        UNION 
                        
                        SELECT  ITEM_ID,
                           AUCT_END_DT,
                          COALESCE(MAX(ASPCT_COLD.ASPCT_VLU_NM),'UNKNOWN') AS ASPCT_VLU_NM_BRAND
                        FROM
                        ITEM_ASPCT_CLSSFCTN_COLD ASPCT_COLD
                        WHERE UPPER(ASPCT_COLD.NS_TYPE_CD) IN ('NF','DF') 
                        AND ASPCT_COLD.AUCT_END_DT>='2018-12-26'
                        AND UPPER(ASPCT_COLD.PRDCT_ASPCT_NM) LIKE ('%MODIFIED ITEM%')
                        GROUP BY 1,2
                    ) BRND ON CK.ITEM_ID = BRND.ITEM_ID AND CK.AUCT_END_DT = BRND.AUCT_END_DT

left join (Select
				item_id,
				Auct_end_dt,
				coalesce(max(case  when lower(aspect)=lower('BRAND') then aspct_vlu_nm else NULL end ),'Unknown') as BRAND
			FROM
				(select
					item_id,
					auct_end_dt,
					ns_type_cd,
					1 as priority,
					'BRAND' as aspect,
					cast(trim(lower(aspct_vlu_nm)) as VARCHAR(350)) as aspct_vlu_nm 
				from
					item_aspct_clssfctn
				where
					AUCT_END_DT>='2016-06-01'
					AND lower(ns_type_cd) in (lower('nf'),lower('df' ) ) and upper(prdct_aspct_nm)= upper('BRAND')
				UNION ALL
				select
					item_id,
					auct_end_dt,
					ns_type_cd,
					2 as priority,
					'BRAND' as aspect,
					cast(trim(lower(aspct_vlu_nm)) as VARCHAR(350)) as aspct_vlu_nm
				from
					item_aspct_clssfctn_cold
				WHERE
					AUCT_END_DT>='2016-06-01'
					AND lower(ns_type_cd) in (lower('nf'),lower('df' ) ) and upper(prdct_aspct_nm)= upper('BRAND')
				)SB
			GROUP BY 1,2) bbase ON ck.ITEM_ID = bbase.ITEM_ID AND ck.AUCT_END_dt = bbase.AUCT_END_DT

left join (Select
				item_id,
				Auct_end_dt,
				coalesce(max(case  when lower(aspect)=lower('MODEL') then aspct_vlu_nm else NULL end ),'Unknown') as MODEL
			FROM
				(select
					item_id,
					auct_end_dt,
					ns_type_cd,
					1 as priority,
					'MODEL' as aspect,
					cast(trim(lower(aspct_vlu_nm)) as VARCHAR(350)) as aspct_vlu_nm 
				from
					item_aspct_clssfctn
				where
					AUCT_END_DT>='2016-06-01'
					AND lower(ns_type_cd) in (lower('nf'),lower('df' ) ) and upper(prdct_aspct_nm)= upper('MODEL')
				UNION ALL
				select
					item_id,
					auct_end_dt,
					ns_type_cd,
					2 as priority,
					'MODEL' as aspect,
					cast(trim(lower(aspct_vlu_nm)) as VARCHAR(350)) as aspct_vlu_nm
				from
					item_aspct_clssfctn_cold
				WHERE
					AUCT_END_DT>='2016-06-01'
					AND lower(ns_type_cd) in (lower('nf'),lower('df' ) ) and upper(prdct_aspct_nm)= upper('MODEL')
				)SB1
			GROUP BY 1,2) bbase1 ON ck.ITEM_ID = bbase1.ITEM_ID AND ck.AUCT_END_dt = bbase1.AUCT_END_DT

LEFT JOIN (select item_id, item_VRTN_ID  from LSTG_ITEM_VRTN group by 1,2) v on v.item_id = ck.item_id
LEFT JOIN (select item_id, count(ITEM_VRTN_ID) c  from LSTG_ITEM_VRTN group by 1) v1 on v1.item_id = ck.item_id


 LEFT JOIN ( select item_ID,CNDTN_ROLLUP_ID from ACCESS_VIEWS.LSTG_ITEM_CNDTN group by 1,2 ) AS CNDTN
        ON ck.ITEM_ID = CNDTN.ITEM_ID
INNER JOIN DW_COUNTRIES CN ON CN.CNTRY_ID = ck.SLR_CNTRY_ID
INNER JOIN ACCESS_VIEWS.GLBL_RPRT_GEO_DIM GEO ON CN.REV_ROLLUP_ID = GEO.REV_ROLLUP_ID 
INNER JOIN DW_CAL_DT CAL ON ck.AUCT_START_DT < CAL.CAL_DT AND ck.AUCT_END_DT >= CAL.CAL_DT - 90 and AGE_FOR_RTL_WEEK_ID in (-1,-53)
left outer join dw_users u
on ck.slr_id = u.user_id

INNER JOIN DW_CATEGORY_GROUPINGS CAT 
	ON CAT.LEAF_CATEG_ID = ck.LEAF_CATEG_ID 
	AND CAT.SITE_ID = 3
	AND CAT.SAP_CATEGORY_ID NOT in (5,7,41,23,-999)   

WHERE 1=1
	AND  ck.AUCT_end_dt >= '2018-01-01'
and ck.wacko_YN = 'N'                      
AND ck.AUCT_TYPE_CODE NOT in (10,15)
AND ck.ITEM_SITE_ID in (3)
and  (cat.CATEG_LVL3_ID in (169291) or cat.categ_lvl4_id = 52357)
and ck.slr_CNTRY_ID in (3)
GROUP BY 1,2,3,4,5,6,7,8) 
-- 		where phase_flag not in ('Other')
		);
		



------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------- Brand View --------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------

drop table if exists p_robevans_t.hb_wow_brands;

create table p_robevans_t.hb_wow_brands as


With brands as
(Select distinct brand

From
	(Select PRICE_BUCKET
	,brand
	,gmv
	,dense_rank() over (partition by price_bucket order by gmv desc) as price_ranking

	FROM
		(
		select brand
		,CASE
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 250 THEN 'A. <250'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 500 THEN 'B. 250-500'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 1000 THEN 'C. 500-1000'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 1250 THEN 'D. 1000-1250'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 1500 THEN 'E. 1250-1500'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 2000 THEN 'F. 1500-2000'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 5000 THEN 'G. 2000-5000'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 10000 THEN 'H. 5000-10,000'
		ELSE 'H.10,000' END AS
	PRICE_BUCKET
		,sum(ck.gmv_plan_usd) as gmv


		FROM DW_CHECKOUT_TRANS AS ck
		left join (Select
						item_id,
						Auct_end_dt,
						coalesce(max(case  when lower(aspect)=lower('BRAND') then aspct_vlu_nm else NULL end ),'Unknown') as BRAND
					FROM
						(select
							item_id,
							auct_end_dt,
							ns_type_cd,
							1 as priority,
							'BRAND' as aspect,
							cast(trim(lower(aspct_vlu_nm)) as VARCHAR(350)) as aspct_vlu_nm 
						from
							item_aspct_clssfctn
						where
							AUCT_END_DT>='2016-06-01'
							AND lower(ns_type_cd) in (lower('nf'),lower('df' ) ) and upper(prdct_aspct_nm)= upper('BRAND')
						UNION ALL
						select
							item_id,
							auct_end_dt,
							ns_type_cd,
							2 as priority,
							'BRAND' as aspect,
							cast(trim(lower(aspct_vlu_nm)) as VARCHAR(350)) as aspct_vlu_nm
						from
							item_aspct_clssfctn_cold
						WHERE
							AUCT_END_DT>='2016-06-01'
							AND lower(ns_type_cd) in (lower('nf'),lower('df' ) ) and upper(prdct_aspct_nm)= upper('BRAND')
						)SB
					GROUP BY 1,2) bbase ON ck.ITEM_ID = bbase.ITEM_ID AND ck.AUCT_END_dt = bbase.AUCT_END_DT

		INNER JOIN DW_CAL_DT CAL ON ck.GMV_DT = cal.CAL_DT AND AGE_FOR_RTL_WEEK_ID >= -52 and AGE_FOR_RTL_WEEK_ID <= -1
		LEFT JOIN dw_users u
			on ck.SELLER_ID = u.user_id
		INNER JOIN DW_CATEGORY_GROUPINGS CAT 
			ON CAT.LEAF_CATEG_ID = ck.LEAF_CATEG_ID 
			AND CAT.SITE_ID = 3
			AND CAT.SAP_CATEGORY_ID NOT in (5,7,41,23,-999)   

		WHERE 1=1
		AND ck.SITE_ID = 3
		and (cat.CATEG_LVL3_ID in (169291) or cat.categ_lvl4_id = 52357)
		and ck.slr_CNTRY_ID = 3

		GROUP BY 1,2
		)
	Group by 1,2,3
	)
Where price_ranking <= 10
)



select
'LL' as target,
retail_year,
retail_week,
cal.AGE_FOR_RTL_WEEK_ID,
case when bbase.brand is not null then bbase.brand else 'Other' End as top_brands,
CASE
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 250 THEN 'A. <250'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 500 THEN 'B. 250-500'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 1000 THEN 'C. 500-1000'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 1250 THEN 'D. 1000-1250'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 1500 THEN 'E. 1250-1500'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 2000 THEN 'F. 1500-2000'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 5000 THEN 'G. 2000-5000'
		WHEN Cast(ck.START_PRICE_LSTG_CURNCY AS DECIMAL(18,2))  < 10000 THEN 'H. 5000-10,000'
		ELSE 'H.10,000' END AS
	PRICE_BUCKET,
	case when U.USER_DSGNTN_ID=2  then 'B2C' else 'C2C' end as bus_flag,
	CASE WHEN UPPER(BRND.ASPCT_VLU_NM_BRAND) in ('MODIFIED', 'CUSTOMIZED','YES') THEN 'MODIFIED' ELSE 'NO' end AS MODIFIED_ITEM,
	count(distinct ck.item_id) as LL,
	count(distinct slr_id) as Listers,
	0 as gmv,
	0 as si

FROM DW_LSTG_ITEM AS ck
LEFT JOIN 
                    (
                    SELECT ITEM_ID,
                           AUCT_END_DT,
                           COALESCE(MAX(ASPCT.ASPCT_VLU_NM),'UNKNOWN') AS ASPCT_VLU_NM_BRAND
                            FROM
                            ITEM_ASPCT_CLSSFCTN ASPCT
                            WHERE
                            UPPER(ASPCT.NS_TYPE_CD) IN ('NF','DF') 
                            AND ASPCT.AUCT_END_DT>='2018-12-26'
                            AND UPPER(ASPCT.PRDCT_ASPCT_NM) LIKE ('%MODIFIED ITEM%')
                            GROUP BY 1,2
                            
                        UNION 
                        
                        SELECT  ITEM_ID,
                           AUCT_END_DT,
                          COALESCE(MAX(ASPCT_COLD.ASPCT_VLU_NM),'UNKNOWN') AS ASPCT_VLU_NM_BRAND
                        FROM
                        ITEM_ASPCT_CLSSFCTN_COLD ASPCT_COLD
                        WHERE UPPER(ASPCT_COLD.NS_TYPE_CD) IN ('NF','DF') 
                        AND ASPCT_COLD.AUCT_END_DT>='2018-12-26'
                        AND UPPER(ASPCT_COLD.PRDCT_ASPCT_NM) LIKE ('%MODIFIED ITEM%')
                        GROUP BY 1,2
                    ) BRND ON CK.ITEM_ID = BRND.ITEM_ID AND CK.AUCT_END_DT = BRND.AUCT_END_DT

left join (select sb.*
			From
			(Select
				item_id,
				Auct_end_dt,
				coalesce(max(case  when lower(aspect)=lower('BRAND') then aspct_vlu_nm else NULL end ),'Unknown') as BRAND
			FROM
				(select
					item_id,
					auct_end_dt,
					ns_type_cd,
					1 as priority,
					'BRAND' as aspect,
					cast(trim(lower(aspct_vlu_nm)) as VARCHAR(350)) as aspct_vlu_nm 
				from
					item_aspct_clssfctn
				where
					AUCT_END_DT>='2016-06-01'
					AND lower(ns_type_cd) in (lower('nf'),lower('df' ) ) and upper(prdct_aspct_nm)= upper('BRAND')
				UNION ALL
				select
					item_id,
					auct_end_dt,
					ns_type_cd,
					2 as priority,
					'BRAND' as aspect,
					cast(trim(lower(aspct_vlu_nm)) as VARCHAR(350)) as aspct_vlu_nm
				from
					item_aspct_clssfctn_cold
				WHERE
					AUCT_END_DT>='2016-06-01'
					AND lower(ns_type_cd) in (lower('nf'),lower('df' ) ) and upper(prdct_aspct_nm)= upper('BRAND')
				)
			GROUP BY 1,2) sb
			INNER JOIN brands on brands.brand = sb.brand
			) bbase ON ck.ITEM_ID = bbase.ITEM_ID AND ck.AUCT_END_dt = bbase.AUCT_END_DT

left join (Select
				item_id,
				Auct_end_dt,
				coalesce(max(case  when lower(aspect)=lower('MODEL') then aspct_vlu_nm else NULL end ),'Unknown') as MODEL
			FROM
				(select
					item_id,
					auct_end_dt,
					ns_type_cd,
					1 as priority,
					'MODEL' as aspect,
					cast(trim(lower(aspct_vlu_nm)) as VARCHAR(350)) as aspct_vlu_nm 
				from
					item_aspct_clssfctn
				where
					AUCT_END_DT>='2016-06-01'
					AND lower(ns_type_cd) in (lower('nf'),lower('df' ) ) and upper(prdct_aspct_nm)= upper('MODEL')
				UNION ALL
				select
					item_id,
					auct_end_dt,
					ns_type_cd,
					2 as priority,
					'MODEL' as aspect,
					cast(trim(lower(aspct_vlu_nm)) as VARCHAR(350)) as aspct_vlu_nm
				from
					item_aspct_clssfctn_cold
				WHERE
					AUCT_END_DT>='2016-06-01'
					AND lower(ns_type_cd) in (lower('nf'),lower('df' ) ) and upper(prdct_aspct_nm)= upper('MODEL')
				)SB1
			GROUP BY 1,2) bbase1 ON ck.ITEM_ID = bbase1.ITEM_ID AND ck.AUCT_END_dt = bbase1.AUCT_END_DT

LEFT JOIN (select item_id, item_VRTN_ID  from LSTG_ITEM_VRTN group by 1,2) v on v.item_id = ck.item_id
LEFT JOIN (select item_id, count(ITEM_VRTN_ID) c  from LSTG_ITEM_VRTN group by 1) v1 on v1.item_id = ck.item_id
LEFT JOIN ( select item_ID,CNDTN_ROLLUP_ID from ACCESS_VIEWS.LSTG_ITEM_CNDTN group by 1,2 ) AS CNDTN
        ON ck.ITEM_ID = CNDTN.ITEM_ID
INNER JOIN DW_COUNTRIES CN ON CN.CNTRY_ID = ck.SLR_CNTRY_ID
INNER JOIN ACCESS_VIEWS.GLBL_RPRT_GEO_DIM GEO ON CN.REV_ROLLUP_ID = GEO.REV_ROLLUP_ID 
INNER JOIN DW_CAL_DT CAL ON ck.AUCT_START_DT < CAL.CAL_DT AND ck.AUCT_END_DT >= CAL.CAL_DT AND RETAIL_YEAR >= (select retail_year from DW_CAL_DT where AGE_FOR_RTL_WEEK_ID = -1 group by 1)-1  and AGE_FOR_RTL_WEEK_ID <= -1 
left outer join dw_users u
on ck.slr_id = u.user_id

INNER JOIN DW_CATEGORY_GROUPINGS CAT 
	ON CAT.LEAF_CATEG_ID = ck.LEAF_CATEG_ID 
	AND CAT.SITE_ID = 3
	AND CAT.SAP_CATEGORY_ID NOT in (5,7,41,23,-999)   

WHERE 1=1
	AND  ck.AUCT_end_dt >= '2018-01-01'
and ck.wacko_YN = 'N'                      
AND ck.AUCT_TYPE_CODE NOT in (10,15)
AND ck.ITEM_SITE_ID in (3)
and (cat.CATEG_LVL3_ID in (169291) or cat.categ_lvl4_id = 52357)
and ck.slr_CNTRY_ID in (3)
GROUP BY 1,2,3,4,5,6,7,8


UNION ALL
		
		--------------------------------------------------------------------------------------------------------------------------------------------------------


select
'GMV' as target,
retail_year,
retail_week,
cal.AGE_FOR_RTL_WEEK_ID,
case when bbase.brand is not null then bbase.brand else 'Other' End as top_brands,
CASE
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 250 THEN 'A. <250'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 500 THEN 'B. 250-500'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 1000 THEN 'C. 500-1000'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 1250 THEN 'D. 1000-1250'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 1500 THEN 'E. 1250-1500'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 2000 THEN 'F. 1500-2000'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 5000 THEN 'G. 2000-5000'
		WHEN Cast(ck.ITEM_PRICE AS DECIMAL(18,2))  < 10000 THEN 'H. 5000-10,000'
		ELSE 'H.10,000' END AS
	PRICE_BUCKET,
		case when U.USER_DSGNTN_ID=2  then 'B2C' else 'C2C' end as bus_flag,
	CASE WHEN UPPER(BRND.ASPCT_VLU_NM_BRAND) in ('MODIFIED', 'CUSTOMIZED','YES') THEN 'MODIFIED' ELSE 'NO' end AS MODIFIED_ITEM,
	0 as LL,
	0 as Listers,	
	SUM(ck.gmv_plan_usd) AS GMV, 
	SUM(QUANTITY) AS SI

FROM DW_CHECKOUT_TRANS AS ck

 LEFT JOIN ( select item_ID,CNDTN_ROLLUP_ID from ACCESS_VIEWS.LSTG_ITEM_CNDTN group by 1,2 ) AS CNDTN
        ON ck.ITEM_ID = CNDTN.ITEM_ID
LEFT JOIN 
                    (
                    SELECT ITEM_ID,
                           AUCT_END_DT,
                           COALESCE(MAX(ASPCT.ASPCT_VLU_NM),'UNKNOWN') AS ASPCT_VLU_NM_BRAND
                            FROM
                            ITEM_ASPCT_CLSSFCTN ASPCT
                            WHERE
                            UPPER(ASPCT.NS_TYPE_CD) IN ('NF','DF') 
                            AND ASPCT.AUCT_END_DT>='2018-12-26'
                            AND UPPER(ASPCT.PRDCT_ASPCT_NM) LIKE ('%MODIFIED ITEM%')
                            GROUP BY 1,2
                            
                        UNION 
                        
                        SELECT  ITEM_ID,
                           AUCT_END_DT,
                          COALESCE(MAX(ASPCT_COLD.ASPCT_VLU_NM),'UNKNOWN') AS ASPCT_VLU_NM_BRAND
                        FROM
                        ITEM_ASPCT_CLSSFCTN_COLD ASPCT_COLD
                        WHERE UPPER(ASPCT_COLD.NS_TYPE_CD) IN ('NF','DF') 
                        AND ASPCT_COLD.AUCT_END_DT>='2018-12-26'
                        AND UPPER(ASPCT_COLD.PRDCT_ASPCT_NM) LIKE ('%MODIFIED ITEM%')
                        GROUP BY 1,2
                    ) BRND ON CK.ITEM_ID = BRND.ITEM_ID AND CK.AUCT_END_DT = BRND.AUCT_END_DT

left join (select sb.*
			From
			(Select
				item_id,
				Auct_end_dt,
				coalesce(max(case  when lower(aspect)=lower('BRAND') then aspct_vlu_nm else NULL end ),'Unknown') as BRAND
			FROM
				(select
					item_id,
					auct_end_dt,
					ns_type_cd,
					1 as priority,
					'BRAND' as aspect,
					cast(trim(lower(aspct_vlu_nm)) as VARCHAR(350)) as aspct_vlu_nm 
				from
					item_aspct_clssfctn
				where
					AUCT_END_DT>='2016-06-01'
					AND lower(ns_type_cd) in (lower('nf'),lower('df' ) ) and upper(prdct_aspct_nm)= upper('BRAND')
				UNION ALL
				select
					item_id,
					auct_end_dt,
					ns_type_cd,
					2 as priority,
					'BRAND' as aspect,
					cast(trim(lower(aspct_vlu_nm)) as VARCHAR(350)) as aspct_vlu_nm
				from
					item_aspct_clssfctn_cold
				WHERE
					AUCT_END_DT>='2016-06-01'
					AND lower(ns_type_cd) in (lower('nf'),lower('df' ) ) and upper(prdct_aspct_nm)= upper('BRAND')
				)
			GROUP BY 1,2) sb
			INNER JOIN brands on brands.brand = sb.brand
			) bbase ON ck.ITEM_ID = bbase.ITEM_ID AND ck.AUCT_END_dt = bbase.AUCT_END_DT

left join (Select
				item_id,
				Auct_end_dt,
				coalesce(max(case  when lower(aspect)=lower('MODEL') then aspct_vlu_nm else NULL end ),'Unknown') as MODEL
			FROM
				(select
					item_id,
					auct_end_dt,
					ns_type_cd,
					1 as priority,
					'MODEL' as aspect,
					cast(trim(lower(aspct_vlu_nm)) as VARCHAR(350)) as aspct_vlu_nm 
				from
					item_aspct_clssfctn
				where
					AUCT_END_DT>='2016-06-01'
					AND lower(ns_type_cd) in (lower('nf'),lower('df' ) ) and upper(prdct_aspct_nm)= upper('MODEL')
				UNION ALL
				select
					item_id,
					auct_end_dt,
					ns_type_cd,
					2 as priority,
					'MODEL' as aspect,
					cast(trim(lower(aspct_vlu_nm)) as VARCHAR(350)) as aspct_vlu_nm
				from
					item_aspct_clssfctn_cold
				WHERE
					AUCT_END_DT>='2016-06-01'
					AND lower(ns_type_cd) in (lower('nf'),lower('df' ) ) and upper(prdct_aspct_nm)= upper('MODEL')
				)SB1
			GROUP BY 1,2) bbase1 ON ck.ITEM_ID = bbase1.ITEM_ID AND ck.AUCT_END_dt = bbase1.AUCT_END_DT

		
-- inner  JOIN ACCESS_VIEWS.SSA_CURNCY_PLAN_RATE_DIM LPR 
-- 	ON ck.LSTG_CURNCY_ID = LPR.CURNCY_ID 
INNER JOIN ACCESS_VIEWS.DW_CAL_DT CAL 
	ON CAL.CAL_DT = ck.gmv_dt 
	and retail_year >= (select retail_year from DW_CAL_DT where AGE_FOR_RTL_WEEK_ID = -1 group by 1)-1 and AGE_FOR_RTL_WEEK_ID <= -1 

left outer join dw_users u
	on ck.seller_id = u.user_id
	
INNER JOIN DW_CATEGORY_GROUPINGS CAT 
	ON CAT.LEAF_CATEG_ID = ck.LEAF_CATEG_ID 
	AND CAT.SITE_ID = 3
	AND CAT.SAP_CATEGORY_ID NOT in (5,7,41,23,-999)   

WHERE 1=1
	AND  ck.AUCT_end_dt >= '2018-01-01'                    
AND ck.SITE_ID in (3)
and (cat.CATEG_LVL3_ID in (169291) or cat.categ_lvl4_id = 52357)
	and ck.slr_CNTRY_ID in (3)
		GROUP BY 1,2,3,4,5,6,7,8