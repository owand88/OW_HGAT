-- Green parts report monday

--1. Jobs, Matches and Orders
--2. Claims on Savings distribution
--3. Total LL , MPN and Graded
--4. Claims and Free Delivery
--5. Return rate

--select *from P_ICHAN_T.gp_summary_upload limit 100 ;
-- select max(datecreated ) date_max from P_ICHAN_T.gp_job_upload   -- union all
--select  max(date ) as summary_date  from P_ICHAN_T.gp_summary_upload union all select max(DateCreated) as error_date from P_ICHAN_T.error_upload ;
--drop table if exists   P_ICHAN_T.gp_job_upload_distinct;
--create table P_ICHAN_T.gp_job_upload_distinct as select distinct * from P_ICHAN_T.gp_job_upload  where DateCreated >='2022-01-01';
-- 251246 
-- 266404 
--331041 -- 344509 
-- select* from P_ICHAN_T.error_upload ;
------------------
--0. data upload
--select min(datecreated) ,max(datecreated ) date_max from P_ICHAN_T.gp_job_upload_new where  datecreated >='2022-08-26';
--select max(datecreated ) date_max from P_ICHAN_T.gp_job_upload where  datecreated <'2022-08-26';

--Drop table if exists  P_ICHAN_T.gp_job_upload_stage;
 --create table  P_ICHAN_T.gp_job_upload_stage as  (
--select * from  P_ICHAN_T.gp_job_upload where  datecreated <'2022-09-09'
--union all select distinct  * from  P_ICHAN_T.gp_job_upload_new where  datecreated >='2022-09-09' ) ;
-- 332561 -- 346029 -- 363804 

--Drop table if exists  P_ICHAN_T.gp_job_upload;  create table  P_ICHAN_T.gp_job_upload as  (  select * from  P_ICHAN_T.gp_job_upload_stage ); -- 332561 -- 346029  -- 363804

--
drop table if exists   P_ICHAN_T.gp_job_upload_distinct; create table P_ICHAN_T.gp_job_upload_distinct as select distinct * from P_ICHAN_T.gp_job_upload 
where DateCreated >='2022-01-01'; -- 371988  -- 379182 

----------------------------------------------------------------------
------
---1. Jobs and matches and Orders-------------------------------------------
----------------------------------------------------------------------------
Drop table if exists  P_ICHAN_T.inscope_jobs;
 create table  P_ICHAN_T.inscope_jobs as  (
 select distinct PartNumber, Description, Title from  P_ICHAN_T.gp_job_upload_distinct
 where InScope='YES' );
 -- 1074 -- 1383 --1504 
 -- select distinct username  from  P_ICHAN_T.gp_job_upload
 drop table if exists  P_ICHAN_T.gp_name_lookup_union ;
create table P_ICHAN_T.gp_name_lookup_union as select * from  P_ICHAN_T.gp_name_lookup  union all select * from P_ICHAN_T.gp_name_lookup_2  union all select * from P_ICHAN_T.gp_name_lookup_3;

-- select max(Date ) from P_ICHAN_T.gp_ops_report
-- select *from P_ICHAN_T.gp_ops_report ; 
Drop table if exists  P_ICHAN_T.gp_ops_report ;
create table P_ICHAN_T.gp_ops_report as(
Select a.JobId,
a.DateCreated as Date,
a.username,
a.BusinessName as WorkshopName,
d.RepairerCompanyName as Repairer,
b.BusinessName,
a.AudatexUUID,
a.AssessmentNumber,
a.Make ,
a.Model,
a.YearRegistered,
a.MonthRegistered,
a.Description,
a.PartNumber,
a.AmountExVat*1.2 as RRP,
a.Ordered,
case when a.Ordered='TRUE' then 1 else 0 end as Order_count,
a.SearchId,
a.EbayCategoryId,
a.Title,
a.ListingPrice,
a.ListingVAT,
a.ListingTotal,
a.ListingPostage,
a.ListingPostageMethod,
substring(a.AssessmentNumber,1,8) as actual_assessmentnumber,
b.Date as Trans_date,
b.Spend,
b.SellerAccount,
b.SellerVATNumber,
a.OnBehalfOf,
b.CategoryId,
--b.CategoryName,
b.Co2SavingInKg,
b.Date as order_date,
b.OrderType,

case when a.JobId <>'NULL'then 1 else 0 end as Parts_total,
case when SearchId <>'NULL' then 1 else 0 end as Parts_Matched,
case when Ordered ='TRUE' then 1 else 0 end as Parts_Ordered,

case when n.Description is not null then 1 else 0 end as InScope_Parts,
case when  SearchId <>'NULL'then 1 else 0 end as InScope_matched, 
case when  SearchId <>'NULL' and ManuallyMatched ='TRUE' then 1 else 0 end as Manual_matched,
case when  SearchId <>'NULL' and ManuallyMatched ='FALSE' then 1 else 0 end as ALGO_MATCHED,

case when n.Description is not null then AmountExVat*1.2-0 else 0 end as InScope_Parts_RRP,


case when a.JobId <>'NULL'then AmountExVat*1.2-0 else 0 end as RRP_parts_request,
case when SearchId <>'NULL'then AmountExVat*1.2-0 else 0 end as RRP_parts_matched,
case when SearchId <>'NULL' then ListingVAT+ListingPostage else 0 end as Matched_Value,
case when SearchId <>'NULL' then AmountExVat*1.2-ListingVAT-ListingPostage else 0 end as Savings_Matched,
case when Ordered ='TRUE' then AmountExVat*1.2 else 0 end as RRP_of_parts_ordered,
case when Ordered ='TRUE' then ListingVAT+ListingPostage else 0 end as Value_Ordered,
case when Ordered ='TRUE' then AmountExVat*1.2-ListingVAT-ListingPostage else 0 end as Savings_ordered,
case when Ordered ='TRUE' then a.BusinessName  else '' end as buyer_count,

Year(a.DateCreated) as Report_year,
Month(a.DateCreated) as Report_month,
Day(a.DateCreated) as Report_day,
Case when AGE_FOR_RTL_WEEK_ID =-1 then 'Y' else 'N' end as Report_TW,
Case when Month(a.DateCreated) >=3 and Year(a.DateCreated) >=2021 then 'Y'  
		when  Year(a.DateCreated) >=2022 then 'Y'  else 'N' end as Post_Mar2021,

case  when SearchId = 'NULL' then 'Parts Not Matched'
		when SearchId <>'NULL' and Ordered='FALSE' then 'Order Opportunity'
		when Ordered='TRUE' then 'Parts Ordered' else 0 end as Opportunity_Flag,
Retail_year,
Retail_week
-- case when year(a.DateCreated)=2021 and month(a.DateCreated)>=3 then 'Y' else 'N' end as report_y
from  P_ICHAN_T.gp_job_upload_distinct a-- select * from   P_ICHAN_T.gp_job_upload where Title ='2014 VOLKSWAGEN POLO 5 Door Hatchback Blue N/S Passengers Left Rear Door'
left join  P_ICHAN_T.gp_summary_upload b on a.AssessmentNumber=b.AssessmentNumber and a.Title=b.ItemTitle -- select * from   P_ICHAN_T.gp_summary_upload where  AssessmentNumber ='4029207' ; 
left join ( select distinct Description from  P_ICHAN_T.inscope_jobs)   n on lower(a.Description)=lower(n.Description)
inner join dw_cal_dt cal on  a.DateCreated=cal.cal_dt -- select distinct age_for_dt_id, cal_dt from dw_cal_dt where cal_dt ='2021-07-01' and '2021-09-01 order by 2 100
left join (select distinct  eBay_Seller_ID , REPLACE(RepairerCompanyName, '�', ' ')as  RepairerCompanyName from  P_ICHAN_T.gp_name_lookup_union )d on d.eBay_Seller_ID=a.username -- select * from   P_ICHAN_T.job_aviva
where age_for_rtl_week_id <=-1
);
-- 46102 -- 47565 )
-- select max(datecreated ) from P_ICHAN_T.gp_job_upload
-- select count(*) from P_ICHAN_T.gp_job_upload where DateCreated >='2022-07-24' --15523
-- select  max(date )  from P_ICHAN_T.gp_summary_upload
--select max(DateCreated)from P_ICHAN_T.error_upload 
-- select * from P_ICHAN_T.gp_ops_report where retail_year =2022 and retail_week >= 1;
--select distinct Retail_year,Retail_week from P_ICHAN_T.gp_ops_report  where retail_year =2021 and retail_week >= 37 order by 1,2;
--Select retail_year, retail_week, count(*), sum(InScope_Parts),sum(InScope_matched), sum(Parts_matched) from  P_ICHAN_T.gp_ops_report group by 1,2 order by 1,2

--2014 VOLKSWAGEN POLO 5 Door Hatchback Blue N/S Passengers Left Rear Door
--2014 VOLKSWAGEN POLO 5 Door Hatchback Blue N/S Passengers Left Rear Door


-- transacitons summary
CONVERT TO DELTA P_ICHAN_T.gp_summary_upload;
UPDATE P_ICHAN_T.gp_summary_upload
SET BuyerAccount = BusinessName
WHERE BuyerAccount is null;
--525 

Drop table if exists  P_ICHAN_T.gp_orders ;
create table  P_ICHAN_T.gp_orders as (
select b.* , cal.retail_year, cal.retail_week, d.RepairerCompanyName as Repairer ,
Case when Month(b.Date) >=3 and Year(b.Date) >=2021 then 'Y' 
when  Year(b.Date) >=2022 then 'Y'
else 'N' end as Post_Mar2021
from ( select distinct * from P_ICHAN_T.gp_summary_upload)  b
inner join dw_cal_dt cal on  b.Date=cal.cal_dt -- select distinct age_for_dt_id, cal_dt from dw_cal_dt where cal_dt ='2021-07-01' and '2021-09-01 order by 2 100
left join (select distinct  eBay_Seller_ID , REPLACE(RepairerCompanyName, '�', ' ')as  RepairerCompanyName from  P_ICHAN_T.gp_name_lookup_union )d on d.eBay_Seller_ID=b.BuyerAccount -- select * from   P_ICHAN_T.job_aviva
where age_for_rtl_week_id <=0
);

---select distinct * from P_ICHAN_T.gp_summary_upload where date >='2022-05-06' ; 
-- 534 -- select retail_year, retail_week, sum(spend)  from P_ICHAN_T.gp_orders  where Date >='2021-10-12' group by 1,2 order by 1,2 ; 
-- select * from P_ICHAN_T.gp_orders  where Date >='2022-01-01' group by 1,2 order by 1,2 ; 
-- select sum(spend)  from P_ICHAN_T.gp_summary_upload where date >='2021-12-06' ; 
-- select *  from P_ICHAN_T.gp_summary_upload where date >='2021-12-06' order by date ; 



CONVERT TO DELTA P_ICHAN_T.gp_orders;

UPDATE P_ICHAN_T.gp_orders
SET BuyerAccount = BusinessName
WHERE BuyerAccount is null;
--Select * from P_ICHAN_T.gp_orders WHERE BuyerAccount is null; ; 

Drop table if exists  P_ICHAN_T.gp_orders_output ;
create table  P_ICHAN_T.gp_orders_output as 
(select * from   P_ICHAN_T.gp_orders );
--where BuyerAccount not in ( select distinct  BuyerAccount from P_ICHAN_T.gp_orders  where    BuyerAccount like'%dit_buy%' or    BuyerAccount like'%tonygar%'   or    BuyerAccount like'%test%' or BuyerAccount like '%agentbuyergp%' ));
-- 495 -- select * from P_ICHAN_T.gp_orders_output  where Date >='2022-04-01'-- BusinessName like '%TM%CAR%'
--select *from P_ICHAN_T.gp_orders 
--where    BuyerAccount like'%dit_buy%' or    BuyerAccount like'%tonygar%'   or    BuyerAccount like'%test%' or BuyerAccount like '%agentbuyergp%' 

--Select * from   P_ICHAN_T.gp_orders_daily   ;
drop table if exists    P_ICHAN_T.gp_orders_daily  ;
create table   P_ICHAN_T.gp_orders_daily as (
Select 

--BuyerAccount,
--BuyerAccountId,
BusinessName,
Retail_Year, 
retail_week,
Repairer,
--SellerAccount,
Post_Mar2021,
OrderType,
Sum(case when TransactionId is not null then 1 else 0 end) as Order_count,
count( distinct BusinessName) as Buyer_count,
sum(Spend) Value_Ordered,
sum(CO2SavingInKg)  CO2SavingInKg
from  P_ICHAN_T.gp_orders_output  -- select * from  P_ICHAN_T.gp_orders_output
group by 1,2,3,4,5,6);
-- select * from  P_ICHAN_T.gp_buyer_seller   where retail_year =2022 and retail_week =50

-- Buyyer and seller summary 
drop table if exists    P_ICHAN_T.gp_buyer_seller  ; 
create table   P_ICHAN_T.gp_buyer_seller as (
Select *, case when  Value_Ordered>=1 and retail_week=cal_week  then 1 else 0 end as TW_Only from (
Select 
BuyerAccount,
BuyerAccountId,
a.BusinessName,
Retail_Year, 
retail_week,
Repairer,
SellerAccount,
Post_Mar2021,
w.OrderType,
Sum(case when TransactionId is not null then 1 else 0 end) as Order_count,
sum(Spend) Value_Ordered
from  P_ICHAN_T.gp_orders_output  a
left join ( select  BusinessName , max(OrderType) OrderType from  P_ICHAN_T.gp_orders_output   group by 1)  w on a.BusinessName=w.BusinessName
where retail_year >=2022
group by 1,2,3,4,5,6,7,8,9) sub
left join ( select distinct retail_week as cal_week from  ACCESS_VIEWS.DW_CAL_DT   WHERE AGE_FOR_RTL_WEEK_ID=-1) cal on sub.retail_week=cal.cal_week

);
 -- 977 select * from  P_ICHAN_T.gp_buyer_seller ;
 
 -- Ops_Output
Drop table if exists  P_ICHAN_T.gp_ops_output ;
create table  P_ICHAN_T.gp_ops_output as  select * from   P_ICHAN_T.gp_ops_report ;
----472 117 
----332 669 

--(select * from   P_ICHAN_T.gp_ops_report where Username not in ( select distinct  Username from P_ICHAN_T.gp_ops_report  where    Username like'%dit_buy%' or    Username like'%tonygar%'   or    Username like'%test%' or username like '%agentbuyergp%' ));
-- 45995    -- 47447
--SELECT DISTINCT Date FROM   P_ICHAN_T.gp_ops_output where  Report_week =  'Last 28 days'ORDER BY 1
--select * from P_ICHAN_T.gp_ops_output ;
-- sele



-- select * from  P_ICHAN_T.gp_ops_daily  limit 100 ;
Drop table if exists  P_ICHAN_T.gp_ops_daily ;
create table  P_ICHAN_T.gp_ops_daily as (
Select 
Date,
Repairer,
BusinessName,
OrderType,
Report_TW,
Post_Mar2021,
Retail_year,
Report_month,
Retail_week,
SellerAccount,
count( distinct actual_assessmentnumber) jobs_count,
count(*) parts_count,
sum(Parts_total) as Parts_total,
sum(Parts_Matched) as Parts_Matched,
sum(ALGO_MATCHED) as ALGO_MATCHED,
sum(Manual_matched) as Manual_matched,
sum(RRP_parts_request ) as  RRP_parts_request,
sum(RRP_parts_matched) as RRP_parts_matched,
sum(InScope_Parts_RRP) as InScope_Parts_RRP,
sum(Matched_Value) as Matched_Value,
sum(Order_count) as Order_count,
sum(Value_Ordered) as Value_Ordered,
sum(Savings_Matched) as Savings_Matched,
sum(RRP_of_parts_ordered) as RRP_of_parts_ordered,
sum(Savings_ordered) as Savings_ordered,
sum(InScope_Parts) as InScope_Parts,
sum(InScope_matched) as InScope_matched
from P_ICHAN_T.gp_ops_output  a -- select * from  P_ICHAN_T.gp_ops_daily ;
where Post_Mar2021='Y' --and Report_TW='Y'
group by 1,2,3,4,5,6,7,8,9,10);
--select * from  P_ICHAN_T.gp_ops_daily   where retail_year =2022  order by 1
-- select * from  P_ICHAN_T.gp_ops_output

--
-- select count(  * )  dist from P_ICHAN_T.gp_ops_output  where date >='2022-07-24' and date <='2022-07-30' limit 100 ;
 -- select count(  * )  dist from P_ICHAN_T.gp_ops_output  where date ='2022-07-24' limit 100 ;
 -- select distinct *  from P_ICHAN_T.gp_ops_output  where date ='2022-07-24'  order by  JObid;
--select retail_year,retail_week, sum(jobs_count ) jobs_count, sum(parts_count) parts_count, sum(parts_total)   parts_total from P_ICHAN_T.gp_ops_daily  where retail_year =2022 group by 1,2  ;
-- select * from  P_ICHAN_T.gp_ops_daily ;
 
 --drop table if exists    P_ICHAN_T.gp_ops_daily_new  ;
--create table   P_ICHAN_T.gp_ops_daily_new as (
-- Select a.*, 
-- b.Order_count,
 --b.Value_Ordered 
 --from   P_ICHAN_T.gp_ops_daily  a
 --left join  P_ICHAN_T.gp_orders_daily b
 --on a.Repairer=b.repairer and a.retail_year=b.retail_year and a.retail_week=b.retail_week and a.Date=b.Date and a.SellerAccount=b.SellerAccount
--);

--select * from   P_ICHAN_T.gp_orders_daily  where retail_year =2021 and retail_week =39;

-- conversion 
 
Drop table if exists  P_ICHAN_T.gp_ops_conversion ;
create table  P_ICHAN_T.gp_ops_conversion as  (
select a.Retail_year, 
a.Retail_week, 
sum(a.Matched_Value) as Matched_Value,
 sum( b.value_ordered) as Value_ordered,
 sum( b.value_ordered)/sum(a.Matched_Value) as Conversion_rate,
 sum(b.buyer_count) as buyer_count,
 sum( b.value_ordered)/sum(b.buyer_count) as spend_per_buyer
 from  ( select Retail_year,   Retail_week, sum(Matched_Value) as Matched_Value from  P_ICHAN_T.gp_ops_output   where Post_Mar2021 ='Y'   group by 1,2 )  a 
  left join   ( select Retail_year,   Retail_week, sum(Value_ordered) as Value_ordered , count( distinct BusinessName) buyer_count from  P_ICHAN_T.gp_orders_daily   where Post_Mar2021 ='Y'  group by 1,2 )  b on a.retail_year =b.retail_year and a.Retail_week=b.Retail_week
 group by 1,2 ) ;
-- 30 

-- MARCH dashboard
drop table if exists    P_ICHAN_T.gp_march_db  ;
create table   P_ICHAN_T.gp_march_db as (
SELECT
count(distinct actual_assessmentnumber)  as Jobs_count,
count(actual_assessmentnumber)  as items_count,
sum( RRP_parts_request)  RRP_parts_request,
sum(Parts_Matched) as Parts_Matched,

sum(ALGO_MATCHED) as ALGO_MATCHED,
sum(Manual_matched) as  Manual_matched,
sum(InScope_parts) as  InScope_parts,
sum(InScope_matched) as InScope_matched, 
sum(Matched_value) as  Matched_value , 
sum(Value_ordered) as  Value_ordered,
 COUNT( DISTINCT Repairer ) AS distinct_repairer,
  COUNT( DISTINCT Workshopname ) AS distinct_username, 
  count( distinct BusinessName) as buyer_count,
   count( distinct BusinessName) as BusinessName_count
 from P_ICHAN_T.gp_ops_output
 where   Post_Mar2021 ='Y' );
 --select* from  P_ICHAN_T.gp_march_db ;
 
 CONVERT TO DELTA  P_ICHAN_T.gp_march_db ;
 update   P_ICHAN_T.gp_march_db 
 set value_ordered = ( select sum(value_ordered)   value_ordered from P_ICHAN_T.gp_buyer_seller where retail_year =2022 );
  --select* from  P_ICHAN_T.gp_ops_output ;

---insert into  P_ICHAN_T.gp_name_lookup
--(eBay_Seller_ID,RepairerCompanyName)
--values ('karlvellagroup', 'Karl Vella Group')

  
--INSERT INTO  P_ICHAN_T.gp_name_lookup
--(eBay_Seller_ID,	RepairerCompanyName)
--VALUES ('sunderland/parts',	188406990	,'Parts & Accessories',		'Focus',	'Fast Fit','Laura Richards');
--   P_ICHAN_T.gp_name_lookup d on d.eBay_Seller_ID=a.username 


-- Error summary
--select max(DateCreated )  from  P_ICHAN_T.error_upload  where DateCreated >= '2021-09-01';
-- select CAST(DateCreated AS DATE) as DateCreated	  from  P_ICHAN_T.error_upload ;


drop table if exists    P_ICHAN_T.gp_error_summary  ;
create table   P_ICHAN_T.gp_error_summary as (
select Retail_year, 
retail_week, 
Domain,
ErrorCode,
ErrorMessage,
count(*) as error_count
from (

Select a.*,
cal.retail_year,
cal.retail_week
from   P_ICHAN_T.error_upload a
inner join dw_cal_dt cal on  a.DateCreated=cal.cal_dt )sub 
group by 1,2,3,4,5) 
;
--select * from  P_ICHAN_T.gp_error_summary ; 

drop table if exists    P_ICHAN_T.gp_error_output  ;
create table   P_ICHAN_T.gp_error_output as (
select a.Retail_year, 
a.Retail_week, 
sum(Parts_Matched)  as Parts_Matched,
sum(error_count) Error_count,
sum(error_count)/sum(Parts_Matched)  as error_rate
from (select Retail_year, retail_week, sum( Parts_Matched) Parts_Matched from  P_ICHAN_T.gp_ops_daily  group by 1,2)  a
inner join ( select Retail_year, retail_week, sum( error_count) error_count from P_ICHAN_T.gp_error_summary group by 1,2)  b 
				on a.retail_week=b.retail_week  and a.retail_year=b.retail_year
 group by 1,2 );
--select * from  P_ICHAN_T.gp_error_output  where retail_week >=36 order by 1,2
-- select retail_week , sum(Error_count) Error_count from  P_ICHAN_T.gp_error_output where retail_week >=36 group by 1 order by 1 desc;

--select max(DateCreated)from P_ICHAN_T.error_upload  ;

------------------------------------------------------------------------------------------------------------------------
---2. CLAIMS -----------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
--substantiate claims of  Savings of 70%+ 
-- Green parts all parts

-- select * from P_ICHAN_T.gp_job_upload
Drop table  if exists P_ICHAN_T.gp_claims ;-- 35943
create table P_ICHAN_T.gp_claims as(
Select a.JobId,
a.DateCreated as Date,
a.username,
d.RepairerCompanyName as Repairer,
a.AudatexUUID,
a.AssessmentNumber,
a.Make ,
a.Model,
a.YearRegistered,
a.MonthRegistered,
a.Description,
a.PartNumber,
a.AmountExVat*1.2 as RRP,
a.Ordered,
case when a.Ordered='TRUE' then 1 else 0 end as Order_count,
a.SearchId,
a.EbayCategoryId,
a.Title,
a.ListingPrice,
a.ListingVAT,
a.ListingTotal,
a.ListingPostage,
a.ListingPostageMethod,
a.Seller,
--b.Spend,
--b.SellerAccount,
--b.SellerVATNumber,
--b.OnBehalfOf,
--b.CategoryId,
--b.CategoryName,
--b.Co2SavingInKg,
case when a.JobId <>'NULL'then 1 else 0 end as Parts_total,
case when SearchId <>'NULL' then 1 else 0 end as Parts_Matched,
case when Ordered ='TRUE' then 1 else 0 end as Parts_Ordered,
case when a.JobId <>'NULL'then AmountExVat*1.2 else 0 end as RRP_parts_request,
case when SearchId <>'NULL'then AmountExVat*1.2 else 0 end as RRP_parts_matched,
case when SearchId <>'NULL' then ListingVAT-ListingPostage else 0 end as Matched_Value,
case when SearchId <>'NULL' then AmountExVat*1.2-ListingVAT-ListingPostage else 0 end as Savings_Matched,
case when Ordered ='TRUE' then AmountExVat*1.2 else 0 end as RRP_of_parts_ordered,
case when Ordered ='TRUE' then ListingVAT+ListingPostage else 0 end as Value_Ordered,
case when Ordered ='TRUE' then AmountExVat*1.2-ListingVAT-ListingPostage else 0 end as Savings_ordered,
Year(a.DateCreated) as Report_year,
Month(a.DateCreated) as Report_month,
Day(a.DateCreated) as Report_day,
Retail_week as Cal_week,
Case when age_for_dt_id >=-28 then 'Last 28 days' else '' end as Report_week,
case  when SearchId = 'NULL' then 'Parts Not Matched'
		when SearchId <>'NULL' and Ordered='FALSE' then 'Order Opportunity'
		when Ordered='TRUE' then 'Parts Ordered' else 0 end as Opportunity_Flag,
case when year(a.DateCreated)=2021 and month(a.DateCreated)>=3 then 'Y' 
		when year(a.DateCreated)=2022  then 'Y' 
		else 'N' end as report_y
from  P_ICHAN_T.gp_job_upload_distinct a
--left join  P_ICHAN_T.gp_summary_upload b on a.AssessmentNumber=b.AssessmentNumber and a.Description=b.ItemTitle
inner join dw_cal_dt cal on  a.DateCreated=cal.cal_dt -- select distinct age_for_dt_id, cal_dt from dw_cal_dt where cal_dt ='2021-07-01' and '2021-09-01 order by 2 100
left join (select distinct  eBay_Seller_ID , RepairerCompanyName from P_ICHAN_T.gp_name_lookup)  d on d.eBay_Seller_ID=a.username -- select * from   P_ICHAN_T.gp_name_lookup
where age_for_dt_id <=-1
);
-- 35943-- 42236 
--select *  from P_ICHAN_T.gp_claims where  date= '2021-09-15'
--select sum(parts_matched)  from P_ICHAN_T.gp_c where  retail_week=3 AssessmentNumber = 'LP098242'
-- select max(retail_week) from P_ICHAN_T.gp_claims where report_year =2021
-- select * from P_ICHAN_T.recyclers_upload

-- data to excel
Drop table if exists  P_ICHAN_T.gp_c ;-- 12762 
create table P_ICHAN_T.gp_c as(

select a.*,
case when savings_pc <= 0.3 then 'a.0-30'
when savings_pc >= 0.80 then 'g.80+' 
when savings_pc >= 0.70  then 'f.71-80'
when savings_pc >= 0.60  then 'e.61-70'
when savings_pc >= 0.50  then 'd.51-60'
when savings_pc >= 0.40  then 'c.41-50'
when savings_pc >= 0.30  then 'b.31-40'

else savings_pc end as savings_range
from (
Select Retail_Year,
Report_month,
Retail_week,
Make,
AssessmentNumber,
case when ck.Seller=x.seller_name then 'Y' else 'N' end as Certified_seller,
EbayCategoryId,
categ_lvl3_name,
categ_lvl4_name,
sum(Parts_Matched) as Parts_Matched,
sum(Parts_total) as Parts_total,
sum(RRP_parts_matched) as RRP_parts_matched,
sum(Savings_Matched) as Savings_Matched,
sum(Matched_Value) as Matched_Value,
sum(Savings_Matched)/sum(RRP_parts_matched) as Savings_pc
from P_ICHAN_T.gp_claims ck
INNER JOIN ACCESS_VIEWS.DW_CAL_DT CAL ON CAL.CAL_DT = CK.DATE  AND CAL.RETAIL_YEAR IN (2021,2022,2023,2024,2025)
LEFT JOIN  (select distinct seller_name from  P_ICHAN_T.recyclers_upload ) x on ck.Seller=x.seller_name
Left JOIN ( select distinct  categ_lvl3_name,categ_lvl3_id ,categ_lvl4_id ,categ_lvl4_name from DW_CATEGORY_GROUPINGS where site_id =3) CAT
						ON CAT.categ_lvl4_id = ck.EbayCategoryId
group by 1,2,3,4,5,6,7,8,9
							)a);
							
--select sum(parts_matched)  from P_ICHAN_T.gp_c where  retail_week=37;
Drop table if exists   P_ICHAN_T.gp_email ;-- 12762 
create table P_ICHAN_T.gp_email as(
select a.* ,
case  when savings_pc >= 0.70  then 'A.70+' else 'Other' end as Saving_70_plus
from P_ICHAN_T.gp_c  a
 ); 
-- Select Retail_year, Retail_week,sum(case when Saving_70_plus like '%A.%' then Parts_Matched else 0 end )/sum(Parts_Matched) Retail_week from P_ICHAN_T.gp_email where retail_week >=38 group by 1,2 order by 1,2 desc;

 /*
select
retail_year, retail_week,
--savings_range, 
sum(
sum(Savings_Matched)/sum(RRP_parts_matched) as savings_pc
from  P_ICHAN_T.gp_c
where savings_range in ('f.71-80',	'g.80+')
group by 1,2
order by 1,2
*/

------------------------------------------------------------------------------------------------------------------------
---3. Total LL and by MPN and Graded -----------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
-- Green Parts total LL
Drop table if exists   p_ichan_t.gp_ll ;
create table  p_ichan_t.gp_ll as 
(
select 
MPN,
ManufacturerPartNumber,
Grade,
lst.Item_id,
lst.Slr_ID,
  U.USER_SLCTD_ID,
   CAT.meta_categ_id, 
	 CAT.CATEG_LVL2_ID, 
	 CAT.categ_lvl2_name, 
	  CAT.CATEG_LVL3_ID, 
	 CAT.categ_lvl3_name, 
	  CAT.CATEG_LVL4_ID, 
	 CAT.categ_lvl4_name
from  DW_LSTG_ITEM lst --on ck.item_id=lst.item_id SELECT * FROM DW_LSTG_ITEM  WEHRE  slr_id =1077516705  and lst.AUCT_end_dt >= CURRENT_DATE
inner join P_ICHAN_T.recyclers_upload c on lst.slr_id=c.seller_id-- select * from   P_ICHAN_T.recyclers_upload order by rank where seller_id =1077516705
--inner join P_ICHAN_T.certified_ll   c on lst.Slr_ID=c.SLr_ID
left join (select
						upper(ASPCT_VLU_NM) as MPN,
						aspct.item_id,
						aspct.auct_end_dt,
						lower(PRDCT_ASPCT_NM) as lcase_aspect_name
						from
						ITEM_ASPCT_CLSSFCTN ASPCT
						where
						lower(PRDCT_ASPCT_NM) in ('mpn' ) --and NS_TYPE_CD='df' -- Manufacturer Part Number
						 and  aspct.auct_end_dt  >=  date '2018-01-01' group by 1,2,3,4) bbase
				ON lst.ITEM_ID = bbase.ITEM_ID
		
				
				left join (select
						upper(ASPCT_VLU_NM) as ManufacturerPartNumber,
						aspct.item_id,
						aspct.auct_end_dt,
						lower(PRDCT_ASPCT_NM) as lcase_aspect_name
						from
						ITEM_ASPCT_CLSSFCTN ASPCT
						where
						lower(PRDCT_ASPCT_NM) in ('manufacturer part number' ) --and NS_TYPE_CD='df' -- Manufacturer Part Number
						 and  aspct.auct_end_dt  >=  date '2018-01-01' group by 1,2,3,4) cbase
				ON lst.ITEM_ID = cbase.ITEM_ID
		left join (select
						upper(ASPCT_VLU_NM) as Grade,
						aspct.item_id,
						aspct.auct_end_dt,
						lower(PRDCT_ASPCT_NM) as lcase_aspect_name
						from
						ITEM_ASPCT_CLSSFCTN ASPCT
						where
						lower(PRDCT_ASPCT_NM) in ('grade' ) --and NS_TYPE_CD='df'
						 and  aspct.auct_end_dt  >=  date '2018-01-01' group by 1,2,3,4) gbase
				ON lst.ITEM_ID = gbase.ITEM_ID
		
INNER JOIN DW_CATEGORY_GROUPINGS CAT ON CAT.LEAF_CATEG_ID = lst.LEAF_CATEG_ID AND CAT.SITE_ID = lst.ITEM_SITE_ID and CAT.site_id =3
INNER JOIN  LSTG_ITEM_CNDTN COND ON COND.AUCT_END_DT = lst.AUCT_END_DT AND COND.ITEM_ID = lst.ITEM_ID  AND  COND.CNDTN_ROLLUP_ID =  3  /*THEN 'Used' */ 
--INNER JOIN (select CAL_DT,RETAIL_YEAR, Retail_week, AGE_FOR_RTL_WEEK_ID from DW_CAL_DT group by 1,2, 3, 4 ) CAL ON Lstg.AUCT_START_DT < CAL.CAL_DT AND Lstg.AUCT_END_DT >= CAL.CAL_DT AND RETAIL_YEAR >= 2019  
--INNER JOIN DW_COUNTRIES CN ON CN.CNTRY_ID = lst.SLR_CNTRY_ID
--INNER JOIN  ACCESS_VIEWS.DW_CAL_DT CAL ON  CAL.CAL_DT = lst.CREATED_DT AND 				RETAIL_YEAR >= 2017
-- INNER JOIN ACCESS_VIEWS.GLBL_RPRT_GEO_DIM GEO ON CN.REV_ROLLUP_ID = GEO.REV_ROLLUP_ID and retail_year >=  2020
--INNER JOIN dw_lstg_item_cold lstc ON lst.item_id = lstc.item_id AND lst.AUCT_END_DT = lstc.AUCT_END_DT
--WHERE lst.AUCT_end_dt >= date -- limiit on live listings
left outer JOIN DW_USERs U ON U.USER_ID= lst.Slr_ID 
where lst.WACKO_YN = 'N'                      
AND lst.AUCT_TYPE_CODE NOT IN (10,15)
and lst.SLR_site_ID = 3 -- change country site id if needed 
 and categ_lvl2_id in (6030)
 --and categ_lvl2_name in ('Car Parts')
 and lst.AUCT_end_dt >= CURRENT_DATE
 );
 
--select * from p_ichan_t.gp_ll 
dROP TABLE  if exists   p_ichan_t.gp_ll_mpn_a ;
create table   p_ichan_t.gp_ll_mpn_a as (
SELECT
i.seller_id,i.seller_name,  portal_seller,rank,
Item_id,
Slr_ID,
USER_SLCTD_ID,
meta_categ_id,
CATEG_LVL2_ID,
categ_lvl2_name,
CATEG_LVL3_ID,
categ_lvl3_name,
CATEG_LVL4_ID,
categ_lvl4_name,
MPN,
case when MPN is null then 0
	when MPN ='DOES NOT APPLY' then 0
	when MPN ='DOESNOTAPPLY' then 0 
	when MPN ='N/A' then 0 
	when MPN ='GENUINE' then 0 
	else 1 end as MPN_Flag,
ManufacturerPartNumber,
case when ManufacturerPartNumber is null then 0
	when ManufacturerPartNumber ='DOES NOT APPLY' then 0 
	when ManufacturerPartNumber ='DOESNOTAPPLY' then 0 
	when ManufacturerPartNumber ='N/A'  then 0 
	when ManufacturerPartNumber ='GENUINE' then 0
	else 1 end as ManufacturerPartNumber_Flag,
	
Grade,
Case when Grade is null then 0 else 1 end as Grade_y
	from   p_ichan_t.gp_ll a
	inner join   P_ICHAN_T.recyclers_upload i on a.slr_id=i.seller_id);

-- select * from p_ichan_t.gp_ll_mpn_a

-- 1. total listings 
dROP TABLE  if exists   p_ichan_t.gp_output1 ;
create table   p_ichan_t.gp_output1 as (
select case when portal_seller= 1 then 'Y_portal_seller' else 'N_portal_seller' end as portal
,count(distinct item_id) ll from  p_ichan_t.gp_ll_mpn_a group by 1); -- 1112440
--select count(distinct item_id) ll from  p_ichan_t.gp_ll_mpn_a where portal_seller =1-- 1112440


-- 2. listings with MPN
dROP TABLE  if exists   p_ichan_t.gp_output2 ;
create table   p_ichan_t.gp_output2 as (
select  case when MPN_flag+ ManufacturerPartNumber_Flag >=1 then 'Y_MPN' else 'N_MPN' end as MPN
,count(distinct item_id) ll 
from (
				select  item_id,
				max(MPN_flag) MPN_flag,
				max(ManufacturerPartNumber_Flag) ManufacturerPartNumber_Flag
				from  p_ichan_t.gp_ll_mpn_a
				group by 1)a
group by 1 ); 

-- 3. Listings with grade
dROP TABLE  if exists   p_ichan_t.gp_output3 ;
create table   p_ichan_t.gp_output3 as (
select case when grade_y= 1 then 'Y_Grade' else 'N_Grade' end as grade, count(distinct item_id) ll from (
select item_id, max(grade_y) grade_y from  p_ichan_t.gp_ll_mpn_a group by 1) a
group by 1);


-- create final table 
dROP TABLE  if exists   p_ichan_t.gp_output_union ;
create table   p_ichan_t.gp_output_union as (
select * from   p_ichan_t.gp_output1
union all 
select * from   p_ichan_t.gp_output2
union all 
select * from   p_ichan_t.gp_output3
);

select * from p_ichan_t.gp_output_union
;

--- --------------------------------------------------------------------------------
--4. Free delivery ------------------------------------------------------------------------
-- ------------------------------------------------------------------------
Drop table if exists   P_ICHAN_T.p2p_transactions;
--CREATE OR REPLACE TEMPORARY VIEW p2p_transactions AS 
create table P_ICHAN_T.p2p_transactions as (
SELECT
lstg.SELLER_ID,
 lstg.lstg_id,
  categ_lvl3_name,categ_lvl3_id ,categ_lvl2_name,categ_lvl2_id
--,CK_TRANS_ID
--,CK_DT
,lstg.HNDLNG_DAY_NUM,
lk.shpmt_mthd_id,
i.shipping_method,
lk.SHPMT_MTHD_DESC,
lk.LCL_NAME,
LK.MIN_DLVRY_TM_IN_HOUR,
lk.API_SOAP_SRVC_CODE
,lstg.lstg_end_dt
--,CAST(lkp.Min_DLVRY_TM_IN_HOUR/24 AS DECIMAL (18,0)) min_dlvry_tm_in_hour
/*,CASE WHEN lkp.Min_DLVRY_TM_IN_HOUR IS NULL THEN NULL
	             WHEN lkp.Min_DLVRY_TM_IN_HOUR < 0 THEN NULL
	             WHEN CAST(lkp.Min_DLVRY_TM_IN_HOUR/24 AS DECIMAL (18,0)) >= 6 THEN 6
	             ELSE CAST(lkp.Min_DLVRY_TM_IN_HOUR/24 AS DECIMAL (18,0))
	END AS SLA_P2P

,CASE WHEN lstg.HNDLNG_DAY_NUM=0 AND SLA_P2P=1 THEN 1 
	        ELSE 0 
END AS PRO_1D_P2P

	,CASE WHEN lstg.HNDLNG_DAY_NUM=0 AND SLA_P2P=1 THEN  1 
	          WHEN lstg.HNDLNG_DAY_NUM=0 AND SLA_P2P=2 THEN  1 
	          WHEN lstg.HNDLNG_DAY_NUM=1 AND SLA_P2P=1 THEN  1
	          WHEN lstg.HNDLNG_DAY_NUM=1 AND SLA_P2P=0 THEN  1
	          
	          WHEN lstg.HNDLNG_DAY_NUM=2 AND SLA_P2P=1 THEN  1
	          WHEN lstg.HNDLNG_DAY_NUM=1 AND SLA_P2P=2 THEN  1
	          WHEN lstg.HNDLNG_DAY_NUM=0 AND SLA_P2P=3 THEN  1
	          ELSE 0 
	END AS PRO_3D_P2P

	,CASE WHEN PRO_3D_P2P=1 AND FACT.FREE_SHPNG_YN_IND='Y' THEN  1 ELSE 0 END AS PRO_3D_FREE_P2P 
,case when fact.shpmt_mthd_id in (301,302, 303,304,322,327,328,336,337,363,364,365, 366) then 1 else 0 end as shpmt_mthd_id_flag*/
FROM ssa_shpmt_lstg_fact lstg 
left join  DW_ITEMS_SHIPPING i on i.item_id=lstg.lstg_id-- = 402688783703 limit 10
left join DW_SHPMT_MTHD_LKP lk on lk.shpmt_mthd_id=i.shipping_method
--LEFT JOIN  SSA_SHPMT_TRANS_FACT FACT on lstg.lstg_id = fact.LSTG_ID and lstg.lstg_end_dt >= date_sub(current_date , 60) --  select * from SSA_SHPMT_TRANS_FACT FACT limit 10
--LEFT JOIN DW_SHPMT_MTHD_LKP LKP ON fact.shpmt_mthd_id=lkp.shpmt_mthd_id
--LEFT JOIN ssa_shpmt_lstg_fact lstg on lstg.lstg_id = fact.LSTG_ID and lstg.lstg_end_dt >= date_sub(current_date , 60) 
INNER JOIN ( select distinct  meta_categ_id, LEAF_CATEG_ID , SITE_ID ,  categ_lvl3_name,categ_lvl3_id ,categ_lvl2_name,categ_lvl2_id from DW_CATEGORY_GROUPINGS where site_id =3) CAT
							ON CAT.LEAF_CATEG_ID = lstg.LEAF_CATEG_ID AND CAT.SITE_ID = lstg.SELLER_SITE_ID   and cat.site_id = 3 and 	 categ_lvl2_id =6030	
INNER JOIN  LSTG_ITEM_CNDTN COND ON COND.AUCT_END_DT = lstg.LSTG_END_DT AND COND.ITEM_ID = lstg.LSTG_ID  AND  COND.CNDTN_ROLLUP_ID =  3  /*THEN 'Used' */  
WHERE -- fact.BUYER_CNTRY_ID=3
lstg.SELLER_CNTRY_ID=3
AND lstg.LSTG_SITE_ID=3
--AND CK_DT between date_sub(current_date , 60) AND date_sub(current_date , 1)
--AND CDE_MIN_DT=CDE_MAX_DT
--AND fact.shpmt_mthd_id in (301,302, 303,304,322,327,328,336,337,363,364,365, 366)
--AND CK_TRANS_ID<>0
and lstg.lstg_end_dt >= CURRENT_DATE
and lstg.seller_id in (select distinct seller_id from  P_ICHAN_T.recyclers_upload      ))
-- and lstg.lstg_id =393147842986
; -- 101727  rows affected.
-- 7478301 rows affected.
--select distinct seller_id from P_ICHAN_T.gp_delivery_output

--summarise by delivery description whether indicating next day or not
drop table if exists  p_ichan_t.gp_delivery ;
create table p_ichan_t.gp_delivery as (
select x.*, 
U.USER_SLCTD_ID ,
case when lower(LCL_NAME) like '%24%' then 'Y'
 	 when lower(LCL_NAME)  like '%next%' then 'Y'
 	 when lower(LCL_NAME)  like '%special%' then 'Y' else 'N' end as Next_day_description,
case when  HNDLNG_DAY_NUM in (0,1) then 'Y' else 'N'  end as dispatch_within_1,
case when  HNDLNG_DAY_NUM in (0,1) and lower(LCL_NAME) like '%24%' then 'Y'
 	 when  HNDLNG_DAY_NUM in (0,1) and lower(LCL_NAME)  like '%next%' then 'Y'
 	 when  HNDLNG_DAY_NUM in (0,1) and lower(LCL_NAME)  like '%special%' then 'Y' else 'N' end as Next_day_and_handling_time_descp	 
  from  P_ICHAN_T.p2p_transactions x 
 left outer JOIN DW_USERs U ON U.USER_ID= x.SELLER_ID ) ;
-- 2237310 rows affected.
drop table  p_ichan_t.gp_delivery_output;
create table p_ichan_t.gp_delivery_output as(
select 
 SELLER_ID,
 USER_SLCTD_ID ,
categ_lvl2_name,
categ_lvl2_id,
categ_lvl3_name,
categ_lvl3_id,
max(Next_day_description) as Next_day_flag,
max(Next_day_and_handling_time_descp) as Next_day_and_handling_time_descp,
max(dispatch_within_1) as dispatch_within_1,
count(distinct lstg_id) ll
from p_ichan_t.gp_delivery 
 group by 1,2,3,4,5,6 ) ;
-- select * from  p_ichan_t.gp_delivery_output order by seller_id ;

--Select Next_day_flag, sum(ll)ll from p_ichan_t.gp_delivery_output group by 1;

------------------------------------------------------------------------------------------
--- Returned rate -------------------
--  select * from  P_ICHAN_T.gp_orders ;
 
 drop table if exists  p_ichan_t.gp_rr ;
create table p_ichan_t.gp_rr as (
 select a.retail_year,
 a.retail_week, 
 a.BusinessName,
 A.selleraccount,
 a.transactionId,
CASE WHEN CK.REFUND_AMT > 0 THEN 1 ELSE 0 END AS REFUND,
sum( a.spend)as  Value
from   P_ICHAN_T.gp_orders a --on a.retail_year=x.retail_year and x.retail_week=a.retail_week
 left join  ( select * from   DW_CHECKOUT_TRANS ck where  BYR_CNTRY_ID =3
											and CK.SALE_TYPE NOT IN (10,15)
											and ck.site_id = 3
											and ck.auct_end_dt >= '2020-05-01'
											 and created_dt > '2021-03-01') ck on a.TransactionID=ck.TRANSACTION_ID
 where  a.Date >='2021-03-01'
group by 1,2,3,4,5,6);


----------------
-- Buyer trigger

--select * from  P_ICHAN_T.gp_buyer_seller ;
--select distinct repairer, businessname from P_ICHAN_T.gp_buyer_seller;
---select distinct  eBay_Seller_ID , REPLACE(RepairerCompanyName, '�', ' ')as  RepairerCompanyName from  P_ICHAN_T.gp_name_lookup ;
drop table if exists P_ICHAN_T.gp_buyer_seller_trigger  ;
create table P_ICHAN_T.gp_buyer_seller_trigger as 
select 
BusinessName,
sum(Value_ordered) as Value_ordered,
sum(case when retail_week = 31 then Value_ordered else 0 end  ) as GMV_TW,
sum(case when retail_week between 28 and 31 then Value_ordered else 0 end  ) as GMV_Current_4_w,
sum(case when retail_week between 24 and 27 then Value_ordered else 0 end  ) as GMV_Previous_4_w,
sum(case when retail_week between 28 and 31 then 1 else 0 end  ) as freq_Current_4_w,
sum(case when retail_week between 24 and 27 then 1 else 0 end  ) as freq_Previous_4_w
from  P_ICHAN_T.gp_buyer_seller 
where retail_year =2022
group by 1;

select * from P_ICHAN_T.gp_buyer_seller_trigger  ;
drop table if exists P_ICHAN_T.gp_buyer_seller_trigger_output  ;
create table P_ICHAN_T.gp_buyer_seller_trigger_output as 
select 
case when GMV_Current_4_w<GMV_Previous_4_w then 'down'
	when GMV_Current_4_w=0 then 'zero'
	when GMV_Current_4_w=GMV_Previous_4_w  then 'flat'
	when GMV_Current_4_w>GMV_Previous_4_w  then 'up' else 'other' end as value_change,

case when freq_Current_4_w<freq_Previous_4_w then 'down'
	when freq_Current_4_w=0 then 'zero'
	when freq_Current_4_w=freq_Previous_4_w  then 'flat'
	when freq_Current_4_w>freq_Previous_4_w  then 'up' else 'other' end as freq_change,*
from P_ICHAN_T.gp_buyer_seller_trigger  ;
select * from P_ICHAN_T.gp_buyer_seller_trigger_output ;

----------------------------------------------------------
-- Buyer Behaviour
-----------------------------------
drop table if exists   P_ICHAN_T.gp_buyer_first  ; 
create table  P_ICHAN_T.gp_buyer_first as 
select a.BusinessName,Repairer, OrderType,First_order_week,Last_order_week,
case when  a.First_order_week=cal.retail_week then 'Y' else 'N' end as New_Buyer
from ( 
		select  BusinessName ,Repairer, OrderType,
		min(retail_week) First_order_week,
		max(retail_week) Last_order_week
		from   P_ICHAN_T.gp_buyer_seller  where retail_year =2022 group by 1,2,3 ) a 
left join ( select distinct retail_week from DW_CAL_DT   WHERE AGE_FOR_RTL_WEEK_ID=-1 ) cal on a.First_order_week=cal.retail_week ;

---select * from   P_ICHAN_T.gp_buyer_first where businessName like '%rose%';

drop table if exists   P_ICHAN_T.gp_buyer_freq  ; 
create table  P_ICHAN_T.gp_buyer_freq as 
 select 
 a.BusinessName,
 retail_year,
 retail_week,
 sum(spend) GMV,
 count(transactionID) order_count 
 from P_ICHAN_T.gp_orders_output a 
 where retail_year =2022
group by 1,2,3 ; 

drop table if exists   P_ICHAN_T.gp_buyer_trend ; 
create table  P_ICHAN_T.gp_buyer_trend as 
select
a.BusinessName,Repairer, OrderType,
a.First_order_week,
a.Last_order_week,
a.New_buyer,
 b.retail_year,
 b.retail_week,
 b.GMV,
 b.order_count ,
 case when b.Retail_week=cal.retail_week then 'Y' else 'N' end as Current_week,
 case when  b.Retail_week=w.retail_week then 'Y' else 'N' end as Latest_8_weeks
from  P_ICHAN_T.gp_buyer_first  a 
left join   P_ICHAN_T.gp_buyer_freq b on a.businessName=b.BusinessName 
left join (select distinct retail_week from DW_CAL_DT   WHERE AGE_FOR_RTL_WEEK_ID=-1 ) cal on b.Retail_week=cal.retail_week 
left join (select distinct retail_week from DW_CAL_DT   WHERE AGE_FOR_RTL_WEEK_ID>=-8 and  AGE_FOR_RTL_WEEK_ID <=-1 ) w on b.Retail_week=w.retail_week ;
; 
--select * from  P_ICHAN_T.gp_buyer_behaviour ;  

drop table if exists   P_ICHAN_T.gp_buyer_wow  ; 
create table  P_ICHAN_T.gp_buyer_wow as 
select BusinessName,freq_previous,freq_current from (
select 
a.BusinessName,
sum(case when AGE_FOR_RTL_WEEK_ID between -4 and -1   then gmv else 0 end  ) GMV_current,
sum(case when AGE_FOR_RTL_WEEK_ID between  -8 and -5   then gmv else 0 end  ) GMV_previous,
sum(case when AGE_FOR_RTL_WEEK_ID between  -4 and -1   then 1 else 0 end  ) freq_current,
sum(case when AGE_FOR_RTL_WEEK_ID between -8 and -5  then 1 else 0 end  ) freq_previous
from  P_ICHAN_T.gp_buyer_trend a 
left join ( select distinct retail_week,  AGE_FOR_RTL_WEEK_ID  from DW_CAL_DT   WHERE AGE_FOR_RTL_WEEK_ID>=-8 and  AGE_FOR_RTL_WEEK_ID <=-1 )    w on a.Retail_week=w.retail_week 
where retail_year =2022
group by 1); 
--select * from  P_ICHAN_T.gp_buyer_wow ;



drop table if exists   P_ICHAN_T.gp_buyer_behaviour; 
create table  P_ICHAN_T.gp_buyer_behaviour as 
select a.*,
b.freq_previous,
b.freq_current 
from  P_ICHAN_T.gp_buyer_trend a 
left join  P_ICHAN_T.gp_buyer_wow b on   a.businessName=b.BusinessName  ;

---select * from P_ICHAN_T.gp_buyer_behaviour;  
-- Top buyers
Select BusinessName, sum(GMV) GMV
from   P_ICHAN_T.gp_buyer_behaviour
where retail_year =2022
group by 1
order by 2 desc ;
---------------------------------------------------------------------------------------------------------
-- Monthly transaction to pay Audatex.
---- send end of month to Sean <Sean.Blackburn@solera.com> 
--------------------------------------------------------------------------------------------------------------------------------------------
drop table if exists   P_InventoryPlanning_T.txn_to_pay_audatex; 
create table  P_InventoryPlanning_T.txn_to_pay_audatex as
select AssessmentNumber,	TransactionId,	Date	,YearPlaced	,MonthPlaced	,Week
 from (
select 
case when assessmentnumber is null then 0 
when  assessmentnumber like 'CI%'  then 0 
when length(assessmentnumber) <=7  then 0 
else 1 end as include,* from P_ICHAN_T.gp_summary_upload 
where monthplaced in (select distinct month_of_year_id
from DW_CAL_DT   WHERE  AGE_FOR_RTL_WEEK_ID =-1  ) ) where   include =1 ;


----------- --------------------------------------------------------
-- postcode report
----------------------------------------------------------------
-- First get all Transaction ID for  Green Parts
 drop table if exists P_ICHAN_T.gp_gmv_all  ;
 create table P_ICHAN_T.gp_gmv_all as(

	SELECT	Retail_year
			,		retail_week	
			,		ck.seller_id
			,		USER_SLCTD_ID
			,TRANSACTION_ID
			,BUYER_ID
		    --        ,              new_vertical
           -- ,              cat.META_CATEG_ID
          --  ,              cat.CATEG_LVL2_NAME
          --  ,              cat.CATEG_LVL2_ID
		--	    ,              cat.CATEG_LVL3_NAME
         --   ,              cat.CATEG_LVL3_ID
		--	    ,              cat.CATEG_LVL4_NAME
        --    ,              cat.CATEG_LVL4_ID
        		--   ,			 case when CNDTN_ROLLUP_ID = 1 then 'New' when   CNDTN_ROLLUP_ID = 3 then 'Used'  when   CNDTN_ROLLUP_ID = 2 then 'Refurb' else  'Other'  end as Condition
			   ,              SUM(gmv_plan_usd) AS GMV_usd
			  --   ,              SUM(CAST(CK.QUANTITY AS DECIMAL(18,2))* CAST(CK.ITEM_PRICE AS DECIMAL(18,2))) AS GMV_local
				-- , count(distinct TRANSACTION_ID) transc_uniq
			   ,              sum(QUANTITY) as BI
			FROM   DW_CHECKOUT_TRANS ck -- SELECT * FROM   DW_CHECKOUT_TRANS  where seller_id= 45524941
			--inner join ( select distinct seller_id from P_ICHAN_T.recyclers_upload )s on s.seller_id = ck.SELLER_ID -- select *  from   P_awang_ops_T.seller_ops_83
			INNER JOIN ( select CURNCY_PLAN_RATE,CURNCY_ID from  ACCESS_VIEWS.SSA_CURNCY_PLAN_RATE_DIM group by 1,2)AS SSA
				ON SSA.CURNCY_ID = CK.LSTG_CURNCY_ID
			INNER JOIN ACCESS_VIEWS.DW_CAL_DT CAL ON CAL.CAL_DT = CK.gmv_DT   and retail_year >=2021 and age_for_rtl_week_id <= -1  --change here for time period if needed
			
			 INNER JOIN ( select meta_categ_id, CATEG_LVL2_ID, categ_lvl2_name, categ_lvl3_name, categ_lvl3_id,categ_lvl4_name, categ_lvl4_id, LEAF_CATEG_ID,SITE_ID,
			 BSNS_VRTCL_NAME  ,SAP_CATEGORY_ID,
					
case when categ_lvl2_id in (20710, 69197, 185066) then 'Electronics' 
when meta_categ_id in (26395) then 'Lifestyle'
when categ_lvl2_id in (386, 238, 1202, 49019, 183446, 80546, 222, 11731, 1082, 767, 233, 2613, 1188, 1039, 11743, 19169, 2562, 2616, 436, 14737, 2631, 2624, 717, 16486, 61573,64808,92074, 246) then 'Home & Garden'
when categ_lvl3_id in (35000, 98989) then 'Home & Garden'
when categ_lvl3_id in (3244) then 'Parts & Accessories'
when categ_lvl3_id in (124982, 259225,180969, 260509) then 'Business & Industrial'
when categ_lvl2_id in (46576) then 'Parts & Accessories'
else bsns_vrtcl_name end as new_vertical
		from DW_CATEGORY_GROUPINGS where SAP_CATEGORY_ID NOT IN (5,7,41,23,-999)  group by 1,2,3,4,5,6,7,8 ,9,10,11,12)  AS CAT ON CAT.LEAF_CATEG_ID = ck.LEAF_CATEG_ID AND CAT.SITE_ID in(3) 
		AND CAT.SAP_CATEGORY_ID NOT IN (5,7,41,23,-999)
			inner JOIN lstg_item_cndtn cond ON ck.item_id = cond.item_id  AND ck.auct_end_dt = cond.AUCT_END_DT
			left outer JOIN DW_USERs U ON U.USER_ID= ck.seller_id 
			INNER  JOIN 
				DW_USEGM_HIST HIST ON 
				HIST.USER_ID=ck.Seller_ID AND 
				HIST.USEGM_GRP_ID  = 48 AND
				HIST.USEGM_ID = 206 and
				CASE WHEN ck.CREATED_DT < '2009-10-11' THEN CAST('2009-10-11' AS DATE) ELSE ck.CREATED_DT END BETWEEN HIST.BEG_DATE AND HIST.END_DATE  
						WHERE 1=1
				and CK.SALE_TYPE NOT IN (10,15)
				--and ck.site_id = 3
				and slr_cntry_id = 3
				and BYR_CNTRY_ID=3
				--and seller_id =1193121968
				and CREATED_DT >='2018-01-01'
				and  categ_lvl2_id in (6030)
			--	and U.USER_SLCTD_ID  in(	SELECT * from P_ICHAN_T.certified_ll_output )
				and new_vertical in('Parts & Accessories','Electronics','Lifestyle','Home & Garden','Business & Industrial','Collectibles','Fashion','FMCG','Media')
				and u.USER_DSGNTN_ID =2 
				and  CNDTN_ROLLUP_ID = 3
				and HIST.USEGM_ID = 206		

				GROUP BY 1,2,3,4,5,6);

-- THen get delivery postcode by mapping transaction ID-
Drop table  if exists  p_inventoryplanning_t.gmv_buyer_postcode; -- select * from    p_inventoryplanning_t.gmv_buyer_postcode
create table p_inventoryplanning_t.gmv_buyer_postcode as(
   SELECT SSA.CK_TRANS_ID
	, ADR.cntct_name
	, ADR.ZIP
	, ADR.ADDR1_TXT
	, ADR.ADDR2_TXT
	, ADR.CITY_TXT
	, ADR.CNTRY_ID
	, ADR.CNTRY_TXT
	, LBL_AD.CNTCT_NAME AS LBL_CONTACT_NAME
	, LBL_AD.ADDR1_TXT AS LBL_ADDR1
	, LBL_AD.ADDR2_TXT AS LBL_ADDR2
	, LBL_AD.CITY_TXT AS LBL_CITY
	, LBL_AD.CNTRY_TXT AS LBL_COUNTRY
	, LBL_AD.STATE_PRVNC_TXT AS LBL_STATE
	, LBL_AD.PSTL_CODE_TXT AS LBL_ZIP
FROM SSA_SHPMT_TRANS_FACT SSA
LEFT JOIN  PRS_SECURE_V.DW_USER_ADDRESSES ADR
	ON SSA.CK_TO_ADDR_ID = ADR.ADDRESS_ID
LEFT JOIN DW_SHIPMENT SHP
	on SSA.SHIPMENT_ID = SHP.SHIPMENT_ID
LEFT JOIN PRS_SECURE_V.DW_SHPMT_LABEL_ADDR LBL_AD
	ON SHP.TO_ADDRESS_ID = LBL_AD.SHPMT_LABEL_ADDR_ID
-- If SHPMNT_CLNT_CD = 0 then COALESCE(DW_USER_ADRESSES.ADDRESS_ID, DW_SHPMT_SOLD_SHPNG_ADDR.SHPNG_ADDR_ID)
-- if SHPMNT_CLNT_CD = 1 then COALESCE(DW_SHPMT_LABEL_ADDR.SHPMT_LABEL_ADDR_ID, DW_USER_ADRESSES.ADDRESS_ID)
WHERE 1=1
-- AND SSA.CK_DT > '2021-01-01'
AND SSA.BUYER_CNTRY_ID = 3
AND SSA.CK_TRANS_ID IN (select distinct TRANSACTION_ID from   from  P_ICHAN_T.gp_gmv_all where retail_year >=2022   and  TRANSACTION_ID <>0  ));
   
   
   -- select count(*) from p_inventoryplanning_t.gmv_buyer_postcode where ck_trans_id <>0   limit 1000; --- 575303
   
 -- De-dupe postcode and address
  Drop table  if exists  p_inventoryplanning_t.gmv_buyer_postcode_lbl; -- select * from    p_inventoryplanning_t.gmv_buyer_postcode
create table p_inventoryplanning_t.gmv_buyer_postcode_lbl as(   
   select 
   ck_trans_id,
   max(ZIP) Postcode,
   max(ADDR1_TXT) ADDR1_TXT,
max(ADDR2_TXT )ADDR2_TXT,
max(CITY_TXT ) CITY_TXT,
max(LBL_CONTACT_NAME ) LBL_CONTACT_NAME,
max(LBL_ADDR1 )  LBL_ADDR1,
max(LBL_ADDR2 ) LBL_ADDR2,
max(LBL_CITY) LBL_CITY,
max(LBL_COUNTRY) LBL_COUNTRY,
max(LBL_STATE) LBL_STATE,
max(LBL_ZIP) LBL_ZIP
 from p_inventoryplanning_t.gmv_buyer_postcode 
group by 1  )   ;

-- Assign Postcode to buyer transaction table
Drop table  if exists  p_inventoryplanning_t.gmv_buyer_postcode_comb; -- select * from    p_inventoryplanning_t.gmv_buyer_postcode
create table p_inventoryplanning_t.gmv_buyer_postcode_comb as(  
select
a.*,
b.*,
u.USER_SLCTD_ID as buyer_name,
case when  a.TRANSACTION_ID=c.TRANSACTIONid then 'portal' else 'ebay site' end as platform,
case when postcode in ('RH1 2NL',
'RH19 1XZ',
'TN23 4GZ',
'PO6 1SX',
'B97 6AR',
'OX16 1RH',
'MK8 0AB',
'LU2 9NL',
'RH1 2NB',
'CR0 3BT',
'SO50 4RZ',
'BN17 7GA',
'SS14 3GL',
'RG2 0HG',
'TN14 5EL'
) then 'Y' else 'N' end as Report
from  P_ICHAN_T.gp_gmv_all  a 
left join p_inventoryplanning_t.gmv_buyer_postcode_lbl b
on a.TRANSACTION_ID =b.CK_TRANS_ID
 left join  P_ICHAN_T.gp_orders  c on a.TRANSACTION_ID=c.TRANSACTIONid
 left outer JOIN DW_USERs U ON U.USER_ID=a.buyer_id 
where a.retail_year >=2022   and  TRANSACTION_ID <>0  );
--select *  from  p_inventoryplanning_t.gmv_buyer_postcode_comb  limit 100;
--select retail_year, retail_week, sum(gmv_usd)  from  p_inventoryplanning_t.gmv_buyer_postcode_comb where Report ='Y' group by 1,2;
 --select retail_year, retail_week, sum(gmv_usd)  from  P_ICHAN_T.gp_gmv_All group by 1,2;  
