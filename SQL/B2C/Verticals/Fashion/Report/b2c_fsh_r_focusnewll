--Objective: Identify new live listings by fashion focus sellers

-- STEP 1 Pull all fashion focus sellers (last updated to 2023Q1)

drop table if exists fashion_sellers;
create TEMPORARY table fashion_sellers as

select seller_id
,case when lower(initiative_name) like '%loved%' then 'Pre Loved' else initiative_name end as SELLER_FLAG
,user.USER_SLCTD_ID as SELLER_NAME
from  P_awang_ops_T.seller_ops_83 slr
inner join ACCESS_VIEWS.DW_USERS user on slr.seller_id = user.USER_ID
where slr.seller_vertical in ('Fashion','Lifestyle')

;

-- STEP 2 Join focus sellers to live listings
-- join with auction start date to identify new listings

drop table if exists P_INVENTORYPLANNING_T.FSH_NEW_LL;
create table P_INVENTORYPLANNING_T.FSH_NEW_LL as
select 
cal.RETAIL_YEAR
,cal.RETAIL_WEEK
,user.SELLER_ID
,user.SELLER_NAME
,user.SELLER_FLAG
,cat.META_CATEG_NAME
,cat.CATEG_LVL2_NAME
,cat.CATEG_LVL3_NAME
,case lstg.item_cndtn_id when 1000 then 'New'
	  			when 1500 then 'New - Other'
	  			when 1750 then 'New - With defects'
	  			when 2000 then 'Refurb - Certified' 
	  			when 2010 then 'Refurb - Excellent'
	  			when 2020 then 'Refurb - Very Good'
	  			when 2030 then 'Refurb - Good'
	  			when 2500 then 'Refurb - Seller' 
				when 3000 then 'Used'
	  			when 4000 then 'Used - Very Good'
	  			when 5000 then 'Used - Good'
	  			when 6000 then 'Used - Acceptable'
	  			when 7000 then 'Used - For parts / not working'
	  			else 'Other' end as Item_Condition_Type

,count(distinct lstg.item_id) as ll

from PRS_RESTRICTED_V.SLNG_LSTG_SUPER_FACT lstg
	INNER JOIN P_INVENTORYPLANNING_T.dw_category_groupings_adj CAT 
			ON CAT.LEAF_CATEG_ID = lstg.LEAF_CATEG_ID 
			and cat.site_id = 3
	INNER JOIN DW_CAL_DT CAL ON lstg.AUCT_START_DT = CAL.CAL_DT

inner join fashion_sellers user on lstg.SLR_ID = user.seller_id

where 1=1
and lstg.ITEM_SITE_ID = 3
and lstg.SLR_CNTRY_ID = 3
and cat.META_CATEG_ID in (11450,26395) -- Clothes Shoes & Accessories, Health and Beauty
and cal.AGE_FOR_RTL_YEAR_ID >= -1
and cal.AGE_FOR_RTL_WEEK_ID <= -1

group by 1,2,3,4,5,6,7,8,9
;
drop table if exists P_INVENTORYPLANNING_T.FSH_NEW_LL_ITEMS;
create table P_INVENTORYPLANNING_T.FSH_NEW_LL_ITEMS as
select RETAIL_YEAR
,RETAIL_WEEK
,SELLER_ID
,SELLER_NAME
,SELLER_FLAG
,META_CATEG_NAME
,CATEG_LVL2_NAME
,CATEG_LVL3_NAME
,item_id
,AUCT_TITLE
,PRICE_AMT
,item_condition
,WATCH_CNT
from (
select *
,row_number() over (partition by RETAIL_YEAR,RETAIL_WEEK,SELLER_ID order by WATCH_CNT desc) as watch_rank
from (
select 
cal.RETAIL_YEAR
,cal.RETAIL_WEEK
,user.SELLER_ID
,user.SELLER_NAME
,user.SELLER_FLAG
,vrtn.item_id
,lstg.AUCT_TITLE
,vrtn.PRICE_AMT
,case lstg.item_cndtn_id when 1000 then 'New'
	  			when 1500 then 'New - Other'
	  			when 1750 then 'New - With defects'
	  			when 2000 then 'Refurb - Certified' 
	  			when 2010 then 'Refurb - Excellent'
	  			when 2020 then 'Refurb - Very Good'
	  			when 2030 then 'Refurb - Good'
	  			when 2500 then 'Refurb - Seller' 
				when 3000 then 'Used'
	  			when 4000 then 'Used - Very Good'
	  			when 5000 then 'Used - Good'
	  			when 6000 then 'Used - Acceptable'
	  			when 7000 then 'Used - For parts / not working'
	  			else 'Other' end as item_condition
,cat.META_CATEG_NAME				
,cat.CATEG_LVL2_NAME
,cat.CATEG_LVL3_NAME
,sum(vrtn.WATCH_CNT) as WATCH_CNT

from ACCESS_VIEWS.LSTG_ITEM_VRTN  vrtn
inner join  PRS_RESTRICTED_V.SLNG_LSTG_SUPER_FACT lstg on vrtn.ITEM_ID = lstg.ITEM_ID and vrtn.AUCT_END_DT = lstg.AUCT_END_DT
	INNER JOIN P_INVENTORYPLANNING_T.dw_category_groupings_adj CAT 
			ON CAT.LEAF_CATEG_ID = lstg.LEAF_CATEG_ID 
			and cat.site_id = 3
	INNER JOIN DW_CAL_DT CAL ON lstg.AUCT_START_DT = CAL.CAL_DT	

inner join fashion_sellers user on lstg.SLR_ID = user.seller_id
where 1=1
and lstg.ITEM_SITE_ID = 3
and lstg.SLR_CNTRY_ID = 3
and cat.META_CATEG_ID in (11450,26395)
and cal.AGE_FOR_RTL_YEAR_ID >= -1
and cal.AGE_FOR_RTL_WEEK_ID <= -1
and vrtn.WATCH_CNT is not NULL
and vrtn.WATCH_CNT > 0
group by 1,2,3,4,5,6,7,8,9,10,11,12
))
where watch_rank <= 20

;

