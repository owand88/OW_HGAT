/*
1. Update the parameters with the seller ids (OracleID on Hive)
2. Once complete open this spreadsheet as a template: https://ebayinc-my.sharepoint.com/:x:/g/personal/owand_ebay_com/Ef68kgwzDddAprUySXG-ufoBN5qmfyqxfDlHuX8yRu6QSQ?e=62xec8
3. Remember to update the seller_name or seller_id in the connection query in the Excel connections settings
*/

DROP TABLE IF EXISTS P_INVENTORYPLANNING_T.GMVBYSELLERID;
CREATE TABLE P_INVENTORYPLANNING_T.GMVBYSELLERID as
SELECT
cal.retail_year
,cat.CATEG_LVL2_NAME
,cat.CATEG_LVL3_NAME
,cat.CATEG_LVL4_NAME
,bbase.brand as brand
,users.USER_SLCTD_ID as seller_name
,users.user_id as seller_id
,count(distinct lstg.item_id) as listings
,sum(lstg.QTY_AVAIL) as stock
,max(RETAIL_WEEK) as retail_week
,0 as BI
,0 as GMV
,0 as buyers

FROM DW_LSTG_ITEM lstg				
INNER JOIN DW_CATEGORY_GROUPINGS CAT ON CAT.LEAF_CATEG_ID = lstg.LEAF_CATEG_ID AND CAT.SITE_ID = lstg.ITEM_SITE_ID and cat.site_id = 3 
INNER JOIN DW_CAL_DT CAL ON lstg.AUCT_START_DT < cal.CAL_DT and lstg.AUCT_END_DT >= cal.cal_dt and AGE_FOR_RTL_YEAR_ID >= -1 and retail_week = (select max(RETAIL_WEEK) from ACCESS_VIEWS.DW_CAL_DT  where AGE_FOR_RTL_WEEK_ID = -1)
left join (Select
				item_id,
				Auct_end_dt,
				coalesce(max(case  when lower(aspect)=lower('BRAND') then aspct_vlu_nm else NULL end ),'Unknown') as BRAND
			FROM
				(select
					item_id,
					auct_end_dt,
					ns_type_cd,
					1 as priority,
					'BRAND' as aspect,
					cast(trim(lower(aspct_vlu_nm)) as VARCHAR(350)) as aspct_vlu_nm 
				from
					item_aspct_clssfctn
				where
					AUCT_END_DT>='2016-06-01'
					AND lower(ns_type_cd) in (lower('nf'),lower('df' ) ) and upper(prdct_aspct_nm)= upper('BRAND')
				UNION ALL
				select
					item_id,
					auct_end_dt,
					ns_type_cd,
					2 as priority,
					'BRAND' as aspect,
					cast(trim(lower(aspct_vlu_nm)) as VARCHAR(350)) as aspct_vlu_nm
				from
					item_aspct_clssfctn_cold
				WHERE
					AUCT_END_DT>='2016-06-01'
					AND lower(ns_type_cd) in (lower('nf'),lower('df' ) ) and upper(prdct_aspct_nm)= upper('BRAND')
				)SB
			GROUP BY 1,2) bbase ON lstg.ITEM_ID = bbase.ITEM_ID AND lstg.AUCT_END_dt = bbase.AUCT_END_DT
INNER JOIN (select user_id
,USER_SLCTD_ID
FROM DW_USERS_INFO) users on lstg.SLR_ID = users.user_id
WHERE lstg.AUCT_end_dt >= '2020-01-01'   
AND lstg.ITEM_SITE_ID = 3
and lstg.slr_cntry_id = 3
and lstg.SLR_ID in ($seller_ids)    ----------------------------- Change seller_id here
and lstg.AUCT_TYPE_CODE not in (10,12,15)
--and cat.META_CATEG_ID = 11450

group by 1,2,3,4,5,6,7



UNION ALL



SELECT
cal.retail_year
,cat.CATEG_LVL2_NAME
,cat.CATEG_LVL3_NAME
,cat.CATEG_LVL4_NAME
,bbase.brand as brand
,users.USER_SLCTD_ID as seller_name
,users.user_id as seller_id
,0 as listings
,0 as stock
,0 as retail_week
,sum(lstg.quantity) as BI
,sum(lstg.gmv_plan_usd) as GMV
,count(distinct lstg.buyer_id) as buyers

FROM DW_CHECKOUT_TRANS lstg		
INNER JOIN DW_CATEGORY_GROUPINGS CAT ON CAT.LEAF_CATEG_ID = lstg.LEAF_CATEG_ID AND CAT.SITE_ID = lstg.SITE_ID and cat.site_id = 3 
INNER JOIN DW_CAL_DT CAL ON cal.cal_dt = lstg.gmv_dt and cal.AGE_FOR_RTL_YEAR_ID >= -1
and cal.AGE_FOR_RTL_WEEK_ID <= -1
left join (Select
				item_id,
				Auct_end_dt,
				coalesce(max(case  when lower(aspect)=lower('BRAND') then aspct_vlu_nm else NULL end ),'Unknown') as BRAND
			FROM
				(select
					item_id,
					auct_end_dt,
					ns_type_cd,
					1 as priority,
					'BRAND' as aspect,
					cast(trim(lower(aspct_vlu_nm)) as VARCHAR(350)) as aspct_vlu_nm 
				from
					item_aspct_clssfctn
				where
					AUCT_END_DT>='2016-06-01'
					AND lower(ns_type_cd) in (lower('nf'),lower('df' ) ) and upper(prdct_aspct_nm)= upper('BRAND')
				UNION ALL
				select
					item_id,
					auct_end_dt,
					ns_type_cd,
					2 as priority,
					'BRAND' as aspect,
					cast(trim(lower(aspct_vlu_nm)) as VARCHAR(350)) as aspct_vlu_nm
				from
					item_aspct_clssfctn_cold
				WHERE
					AUCT_END_DT>='2016-06-01'
					AND lower(ns_type_cd) in (lower('nf'),lower('df' ) ) and upper(prdct_aspct_nm)= upper('BRAND')
				)SB
			GROUP BY 1,2) bbase ON lstg.ITEM_ID = bbase.ITEM_ID AND lstg.AUCT_END_dt = bbase.AUCT_END_DT
INNER JOIN (select user_id
,USER_SLCTD_ID
FROM DW_USERS_INFO) users on lstg.seller_id = users.user_id
WHERE lstg.AUCT_end_dt >= '2020-01-01'   
AND lstg.SITE_ID = 3
and lstg.slr_cntry_id = 3
and lstg.byr_cntry_id = 3
and lstg.ck_wacko_yn = 'N'
and lstg.seller_id in ($seller_ids) 
and lstg.SALE_TYPE not in (10,12,15)


group by 1,2,3,4,5,6,7
;