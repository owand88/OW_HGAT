/*
Task:
Analyse the data in Lumina price scraping report received every Tuesday, flag mobile listings with top EPIDs, priced lowered than Backmarket
,and good seller SNAD & INR standard to use for 5% / 8% price takeover coupons.

Objective:
Strategy to go after Backmarket as well as incentive for mobile sellers to drive catalogue adoption.

Context:
We are looking for a report to use on a weekly basis, that identifies listings that we will apply price override. The report should identify the following:

-	Listings that are cheaper or equal to the Back Market price in the mobile phone category.
-	The listings need to be cross referenced against the top performing EPIDS on ebay.
-	The listings need to also be cross referenced against sellers INR and SNAD rates.
*/

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--Prepare raw data
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
/*
--Data check
--Reformatted data from Lumina report extracted on 2023-02-10
--Restricted mobile phone data with site = eBay or Backmarket
select * from P_InventoryPlanning_T.Lumina_export_2023_02_10 order by MWID;

--5745 rows, 4158 MWID
select count(*),count(distinct MWID) from P_InventoryPlanning_T.Lumina_export_2023_02_10;
*/

--689 products exist in both eBay and Backmarket, 347 (50% is competitively priced)
drop table if exists P_InventoryPlanning_T.Lumina_mobile_eb_bm;
create table P_InventoryPlanning_T.Lumina_mobile_eb_bm as (
select 
eb.ExportDate
,eb.MWID
,eb.CategoryName
,eb.ProductName
,eb.Brand
,eb.Colour
,eb.eBayListingID
,eb.MemorySize
,eb.ModelNo
,eb.CheckOutPrice as eB_CheckOutPrice
,eb.CurrentPrice as eB_CurrentPrice
,eb.ShippingPrice as eB_ShippingPrice
,eb.Seller as eB_Seller
,bm.CheckOutPrice as BM_CheckOutPrice
,bm.CurrentPrice as BM_CurrentPrice
,bm.ShippingPrice as BM_ShippingPrice
,bm.Seller as BM_Seller
,case when (eb.CheckOutPrice+eb.ShippingPrice) <= (bm.CheckOutPrice+eb.ShippingPrice) then 1 else 0 end as comprice_flag

from

(select * from P_InventoryPlanning_T.Lumina_export_2023_02_10/*****Naming to be updated for future process*****/
where site='eBay' and eBayListingID is not null) eb
inner join 
(select * from P_InventoryPlanning_T.Lumina_export_2023_02_10
where site='Backmarket' and eBayListingID is not null) bm

on eb.MWID=bm.MWID and eb.eBayListingID=bm.eBayListingID
);

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--Add seller info for the competitive lisings
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
drop table P_InventoryPlanning_T.Lumina_mobile_eb_bm_compet;
create table P_InventoryPlanning_T.Lumina_mobile_eb_bm_compet as (
select 
lstg.item_id
,cndtn.item_cndtn_id
,cndtn.item_condition
,case when MSKU.item_id is not null then 1 else 0 end as MSKU_flag
,lstg.slr_id as seller_id
,u.user_slctd_id as seller_name
,std.seller_standard
,base.ExportDate
,base.MWID
,base.CategoryName
,base.ProductName
,base.Brand
,base.Colour
,base.MemorySize
,base.ModelNo
,base.eB_CheckOutPrice
,base.eB_CurrentPrice
,base.eB_ShippingPrice
--,base.eB_Seller--web scraping not entirely correct (e.g. MWID=648364: seller should be tesco_outlet, scraped as Tesco 99.3% positive Feedback)
,base.BM_CheckOutPrice
,base.BM_CurrentPrice
,base.BM_ShippingPrice
,base.BM_Seller
from access_views.dw_lstg_item lstg

inner join P_InventoryPlanning_T.Lumina_mobile_eb_bm base
on lstg.item_id=base.eBayListingID

inner join access_views.dw_users u
on lstg.slr_id=u.user_id

left join 
	(select 
	user_id
	,sps_slr_level_cd
	,case when sps_slr_level_cd = 1 then 'Top Rated' 
		  when sps_slr_level_cd = 2 then 'Above Standard' 
		  when sps_slr_level_cd = 3 then 'Standard' 
		  when sps_slr_level_cd = 4 then 'Below Standard' 
		  else 'No seller standard' end as seller_standard
	,last_eval_dt 
	from prs_restricted_v.sps_level_metric_sum--released every 20th of the month
	where sps_eval_type_cd = 1 and sps_prgrm_id = 3--Seller Standard evaluation type= Effective; Seller Performance Standard Program ID=UK
	group by 1,2,3,4
	qualify (row_number() over (partition by user_id order by last_eval_dt desc))=1)std
on lstg.slr_id=std.user_id

left join (select distinct item_id from access_views.lstg_item_vrtn) MSKU
on lstg.item_id=MSKU.item_id

left join (
		   select 
		   item_id
		   ,item_cndtn_id
		   ,case when item_cndtn_id = 1000 then 'New'
	  			 when item_cndtn_id = 1500 then 'New - Other'
	  			 when item_cndtn_id = 1750 then 'New - With defects'
	  			 
	  			 when item_cndtn_id = 2000 then 'Refurb - Certified' 
	  			 
	  			 when item_cndtn_id = 2010 then 'Refurb - Excellent'
	  			 when item_cndtn_id = 2020 then 'Refurb - Very Good'
	  			 when item_cndtn_id = 2030 then 'Refurb - Good'
	  			 when item_cndtn_id = 2500 then 'Refurb - Seller' 
	  			 	  
	  			 when item_cndtn_id = 3000 then 'Used'
	  			 when item_cndtn_id = 4000 then 'Used - Very Good'
	  			 when item_cndtn_id = 5000 then 'Used - Good'
	  			 when item_cndtn_id = 6000 then 'Used - Acceptable'
	  			 when item_cndtn_id = 7000 then 'Used - For parts / not working'
	  			 else 'Other'
	  			 end as item_condition
			from access_views.lstg_item_cndtn group by 1,2,3) cndtn
on lstg.item_id=cndtn.item_id

where comprice_flag=1--competitively priced
);

/*
--Data check
--347 rows
select count(*) from P_InventoryPlanning_T.Lumina_mobile_eb_bm_compet;
*/

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--Seller INR and SNAD rates in the latest 90 days
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
/*
--Explore datasets used by US team (https://zeta.dss.vip.ebay.com/zeta/share/#/notebook?notebookId=40203f5a-119e-43a4-9be4-3b43ad13f44c)
--BBE metrics used in previous analysis (https://zeta.dss.vip.ebay.com/zeta/share/#/notebook?notebookId=d0cf4f36-815e-49b9-a142-a88452b834de)

select * from access_views.cps_embg_super_fact--replace rsltn_all (dataset retired on 16Jan2023 as advised by April Zhou on 2022-12-23)
where item_id=265018108010 and trxn_id=2831491220016;

select * from prs_restricted_v.evo_sps_trans_dtl
where item_id=265018108010 and trans_id=2831491220016;

select * from prs_restricted_v.ebay_trans_rltd_event
where item_id=265018108010 and trans_id=2831491220016;
*/

drop table if exists P_InventoryPlanning_T.Lumina_mobile_slr_BBE_L90D;
create table P_InventoryPlanning_T.Lumina_mobile_slr_BBE_L90D as (
select distinct
slr.seller_id
,slr.seller_name
,ck.item_id
,ck.transaction_id
,case when upper(cps.final_claim_type_name) like '%INR%' then 1 else 0 end as INR_flag
,case when upper(cps.final_claim_type_name) like '%SNAD%' then 1 else 0 end as SNAD_flag 

from access_views.dw_checkout_trans ck

inner join access_views.dw_lstg_item lstg
on ck.item_id=lstg.item_id and lstg.leaf_categ_id=9355--mobile only

inner join (select distinct seller_id, seller_name from P_InventoryPlanning_T.Lumina_mobile_eb_bm_compet) slr
on ck.seller_id=slr.seller_id

inner join access_views.dw_cal_dt as cal 
on cal.cal_dt = ck.GMV_dt 
and ck.GMV_dt between current_date()  - 91 and current_date()  - 2
and ck.auct_end_dt >= current_date()  - 91

left join access_views.cps_embg_super_fact cps 
on ck.item_id = cps.item_id and ck.transaction_id = cps.trxn_id
);

/*
--Data check
select * from P_InventoryPlanning_T.Lumina_mobile_slr_BBE_L90D;

--75,768 rows
select count(*),count(distinct item_id||transaction_id) from P_InventoryPlanning_T.Lumina_mobile_slr_BBE_L90D;

--56
select count(distinct seller_id) from P_InventoryPlanning_T.Lumina_mobile_slr_BBE_L90D;

--56
select count(distinct seller_id) from P_InventoryPlanning_T.Lumina_mobile_eb_bm_compet;

--Example of 1 seller (limetropic): 4300 transactions, 39 INR (0.91%) and 197 SNAD (4.58%)
select * from P_InventoryPlanning_T.Lumina_mobile_slr_BBE_L90D
where seller_id=887834614;
*/

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--Combine Seller INR and SNAD rates to the competitive listings
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
drop table if exists P_InventoryPlanning_T.Lumina_mobile_eb_bm_compet_final;
create table P_InventoryPlanning_T.Lumina_mobile_eb_bm_compet_final as (
select 
base.ExportDate as LuminaReportExport_dt
,base.MWID
,base.item_id
,base.item_cndtn_id
,base.item_condition
,base.MSKU_flag
,base.seller_id
,base.seller_name
,base.seller_standard
,BBE.INR/BBE.txn_vol as INR_rate_L90D
,BBE.SNAD/BBE.txn_vol as SNAD_rate_L90D
,base.BM_Seller
,base.Brand
,base.ModelNo
--,base.CategoryName
,base.ProductName
,base.Colour
,base.MemorySize
,base.eB_CheckOutPrice
--,base.eB_CurrentPrice
,base.eB_ShippingPrice
,base.eB_CheckOutPrice + base.eB_ShippingPrice as eB_TotalPrice
,base.BM_CheckOutPrice
--,base.BM_CurrentPrice
,base.BM_ShippingPrice
,base.BM_CheckOutPrice + base.BM_ShippingPrice as BM_TotalPrice
,BM_TotalPrice - eB_TotalPrice as price_amt_cheaper

from P_InventoryPlanning_T.Lumina_mobile_eb_bm_compet base
left join (
			select 
			seller_id
			,count(*) as txn_vol
			,sum(INR_flag) as INR
			,sum(SNAD_flag) as SNAD
			from P_InventoryPlanning_T.Lumina_mobile_slr_BBE_L90D
			group by 1) BBE
on base.seller_id=BBE.seller_id
);

/*
--Data check
--347 rows
select count(*) from P_InventoryPlanning_T.Lumina_mobile_eb_bm_compet_final;

select * from P_InventoryPlanning_T.Lumina_mobile_eb_bm_compet_final
where seller_id=887834614;
*/

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--Top mobile EPID in the latest 180 days
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
drop table if exists P_InventoryPlanning_T.top_mobile_epid_L180D;
create table P_InventoryPlanning_T.top_mobile_epid_L180D as (
select
coalesce(eps.prod_ref_id,epms.prod_ref_id) as EPID
,epn.prod_title as EPID_name
,cndtn.item_cndtn_id
,case when cndtn.item_cndtn_id = 1000 then 'New'
	  when cndtn.item_cndtn_id = 1500 then 'New - Other'
	  when cndtn.item_cndtn_id = 1750 then 'New - With defects'
	  
	  when cndtn.item_cndtn_id = 2000 then 'Refurb - Certified' 
	  
	  when cndtn.item_cndtn_id = 2010 then 'Refurb - Excellent'
	  when cndtn.item_cndtn_id = 2020 then 'Refurb - Very Good'
	  when cndtn.item_cndtn_id = 2030 then 'Refurb - Good'
	  when cndtn.item_cndtn_id = 2500 then 'Refurb - Seller' 
	  	  
	  when cndtn.item_cndtn_id = 3000 then 'Used'
	  when cndtn.item_cndtn_id = 4000 then 'Used - Very Good'
	  when cndtn.item_cndtn_id = 5000 then 'Used - Good'
	  when cndtn.item_cndtn_id = 6000 then 'Used - Acceptable'
	  when cndtn.item_cndtn_id = 7000 then 'Used - For parts / not working'
	  else 'Other'
	  end as item_condition
	  
,sum(ck.GMV_plan_usd) as tot_GMV
,sum(ck.quantity) AS tot_SI

from access_views.dw_checkout_trans ck 

inner join access_views.dw_lstg_item lstg
on ck.item_id=lstg.item_id and lstg.leaf_categ_id=9355--mobile only

inner join access_views.dw_cal_dt as cal 
on cal.cal_dt = ck.GMV_dt 
and ck.GMV_dt between current_date()  - 181 and current_date()  - 2
and ck.auct_end_dt >= current_date()  - 181

inner join ( 
	select usegm_grp_id,usegm_id,end_date,user_id,beg_date from access_views.dw_usegm_hist 
	where usegm_grp_id = 48 																						
	and usegm_id = 206 --B2C seller only																									
	and end_date >= '2015-12-30' group by 1,2,3,4,5)as hist 																						
on ck.seller_id = hist.user_id and ck.GMV_dt between hist.beg_date and hist.end_date	

left join (select item_id, cndtn_rollup_id, item_cndtn_id from access_views.lstg_item_cndtn group by 1,2,3) cndtn
on lstg.item_id = cndtn.item_id

left join access_views.ctlg_item_fact eps
on ck.item_id=eps.item_id

left join access_views.ctlg_vrtn_fact epms
on ck.item_id=epms.item_id and ck.item_vrtn_id=epms.item_vrtn_id

left join access_views.ctlg_prod_fact epn
on coalesce(eps.prod_ref_id,epms.prod_ref_id)=epn.prod_ref_id

where ck.slr_cntry_id = 3 --UK sellers
and ck.byr_cntry_id = 3 --UK buyers
and ck.slr_cntry_id = ck.byr_cntry_id --DOM
and ck.rprtd_wacko_yn = 'N'
and lstg.auct_type_code not in (10,15)
and lstg.item_site_id = 3
group by 1,2,3,4
);

/*
--Data check
--22,410 rows
select count(*) from P_InventoryPlanning_T.top_mobile_epid_L180D;
*/

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--Add to Excel data connection
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--Competitive listings identified
select * from P_InventoryPlanning_T.Lumina_mobile_eb_bm_compet_final;

--Mobile EPIDs in the latest 180 days
select 
a.* 
,substring_index(EPID_name,' ', 1) as EPID_name_first_string
from P_InventoryPlanning_T.top_mobile_epid_L180D a
order by tot_GMV desc;

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--Summary
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--689 products exist in both eBay and Backmarket, 347 (50% is competitively priced)
select comprice_flag,count(*) from P_InventoryPlanning_T.Lumina_mobile_eb_bm group by 1;

--phonesdirect_com (2168514459) accounts for 62 (18%) of the competitively priced listings
select seller_name, count(*)
from P_InventoryPlanning_T.Lumina_mobile_eb_bm_compet_final 
group by 1 order by 2 desc;

--40% is Refurb - Excellent, 31% is Refurb - Very Good and 28% is Refurb - Good
select item_condition, count(*), count(*) / sum(count(*)) over()
from P_InventoryPlanning_T.Lumina_mobile_eb_bm_compet_final 
group by 1 order by 2 desc;

--320 (92%) is Top Rated Seller; 20 (6%) is Above Standard; 7 (2%) is Below Standard
select 
seller_standard, count(*), count(*) / sum(count(*)) over()
from P_InventoryPlanning_T.Lumina_mobile_eb_bm_compet_final group by 1;

--2 from buyitdirectdiscounts; 2 from giffgaff; 3 from ruezone_1
select * from P_InventoryPlanning_T.Lumina_mobile_eb_bm_compet_final 
where seller_standard='Below Standard';


--Median INR: 0.013 (1.3%) and SNAD rate is 0.0573 (5.73%)
select 
percentile(cast(INR_rate_L90D as decimal(18,4)), 0.5)
,percentile(cast(SNAD_rate_L90D as decimal(18,4)), 0.5)
from P_InventoryPlanning_T.Lumina_mobile_eb_bm_compet_final;

--188 listings with higher than median INR rate or SNAD rate
select * from P_InventoryPlanning_T.Lumina_mobile_eb_bm_compet_final 
where INR_rate_L90D<0.01 or SNAD_rate_L90D<0.05;

--80 listings with higher than median INR rate  and higher than SNAD rate
select * from P_InventoryPlanning_T.Lumina_mobile_eb_bm_compet_final 
where INR_rate_L90D<0.01 and SNAD_rate_L90D<0.05;

--min price difference (£0) and max price difference (£609.11)
select min(price_amt_cheaper),max(price_amt_cheaper) from P_InventoryPlanning_T.Lumina_mobile_eb_bm_compet_final; 

--Different not that big upon checking the sites
--eBay listing https://www.ebay.co.uk/itm/385286408845
--Backmarket: https://www.backmarket.co.uk/en-gb/l/galaxy-s20-fe/7264fae1-2d03-4c8a-af43-914994da56ba#color=Cloud%20orange&color=Orange&storage=128000%20128%20GB