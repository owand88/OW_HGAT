--- ==================================================================================================
-- 1. 
drop table if exists P_INVENTORYPLANNING_T.fitment_guarantee;
CREATE  TABLE P_INVENTORYPLANNING_T.fitment_guarantee AS
select distinct
a.item_id, 
a.trans_id, 
a.cre_date, 
c.property_name, 
c.property_value
from DW_OMS_LINE_ITEM a
inner join DW_OMS_ORDER_PROPERTIES c on a.oms_order_id = c.oms_order_id 
	and a.OMS_LINE_ITEM_ID = c.OMS_LINE_ITEM_ID 
	and PROPERTY_NAME = 'FITMENT_COMPATIBILITY'
	and property_value = 'FITS_YES'
left join DW_OMS_ORDER b on a.oms_order_id = b.oms_order_id
;

select * from  P_INVENTORYPLANNING_T.fitment_guarantee limit 1000; 
select * from p_ichan_t.FITMENT_Table limit 1000 ;



select count ( distinct item_id ) from  P_INVENTORYPLANNING_T.fitment_guarantee;
-- 4 052 383


select count ( distinct item_id ) from  p_ichan_t.FITMENT_Table ;
-- 449 702

-- YMM FOR ALL FITMENT LISTINGS
DROP TABLE IF EXISTS p_ichan_t.B2B_FITMENT_TEMP;
CREATE TABLE p_ichan_t.B2B_FITMENT_TEMP AS 
(
select FM.*
	
from 
(
select a.* 
from DW_LSTG_ITEM_FTMNT as a
join DW_CAL_DT as b on a.cre_date=b.cal_dt
where  (FTMNT_NAME = 'Cars Year' OR FTMNT_NAME = 'Year'  or FTMNT_NAME ='Car Make'  or FTMNT_NAME ='Make' or FTMNT_NAME ='Model'/* or FTMNT_NAME ='Engine'*/ ) 
and a.auct_end_dt >= '2018-01-01' 
and a.cre_date <= CURRENT_DATE
 ---and b.QTR_ID in ('2020Q02','2020Q01','2019Q04','2019Q03') -- fixing the cohort as of Q3 2020
--and b.QTR_ID in ('2022Q02','2022Q01','2021Q04','2021Q03') -- fixing the cohort as of Q3 2022
and a.FTMNT_VALUE_TEXT is not null
) FM
INNER JOIN PRS_RESTRICTED_V.SLNG_LSTG_SUPER_FACT lst on fm.item_id = lst.item_id and fm.auct_end_dt = lst.auct_end_dt and lst.lstg_site_id = 3
INNER JOIN DW_CATEGORY_GROUPINGS CAT ON CAT.LEAF_CATEG_ID = lst.LEAF_CATEG_ID AND CAT.SITE_ID =3 AND CAT.SAP_CATEGORY_ID NOT IN (5,7,41,23,-999)  and cat.CATEG_LVL2_ID=6030
INNER JOIN lstg_item_cndtn cond ON fm.item_id = cond.item_id AND fm.auct_end_dt = cond.AUCT_END_DT AND COND.CNDTN_ROLLUP_ID = 3
inner join  DW_CHECKOUT_TRANS AS CK on ck.item_id=lst.item_id and ck.GMV_DT >=  '2021-01-01' ---between '2021-01-01'   and  '2021-12-31' 
--INNER JOIN   DW_LSTG_ITEM lst  ON CK.ITEM_ID=LST.ITEM_ID -- SELECT * FROM   DW_LSTG_ITEM WHERE AUCT_END_DATE >='2023-10-01' LIMIT 100;
-- INNER JOIN (SELECT ITEM_ID, AUCT_END_DT,FITMENT_ADOPTD_Flag FROM P_WAJ_T.FITMENT_CAPTURE_2018 WHERE retail_year = 2020) FT ON FT.ITEM_ID = FM.ITEM_ID AND FT.AUCT_END_DT = FM.AUCT_END_DT
--GROUP BY 1,2
); 

select * from  p_ichan_t.B2B_FITMENT_TEMP limit 100 ; 

DROP TABLE IF EXISTS p_ichan_t.FITMENT_Table;
CREATE TABLE p_ichan_t.FITMENT_Table AS 

SELECT t1.item_id, t1.Year_from, t2.Year_to, t3.make_from, t4.make_to, t5.Model_from, t6.Model_to
FROM 
  (SELECT item_id, min(FTMNT_VALUE_TEXT) as Year_from FROM p_ichan_t.B2B_FITMENT_TEMP WHERE ftmnt_name ='Cars Year' GROUP BY 1) t1
  JOIN (SELECT item_id, max(FTMNT_VALUE_TEXT) as Year_to FROM p_ichan_t.B2B_FITMENT_TEMP WHERE ftmnt_name ='Cars Year' GROUP BY 1) t2
  ON t1.item_id = t2.item_id
  JOIN (SELECT item_id, min(FTMNT_VALUE_TEXT) as make_from FROM p_ichan_t.B2B_FITMENT_TEMP WHERE ftmnt_name ='Car Make' GROUP BY 1) t3
  ON t1.item_id = t3.item_id
  JOIN (SELECT item_id, max(FTMNT_VALUE_TEXT) as make_to FROM p_ichan_t.B2B_FITMENT_TEMP WHERE ftmnt_name ='Car Make' GROUP BY 1) t4
  ON t1.item_id = t4.item_id
  JOIN (SELECT item_id, min(FTMNT_VALUE_TEXT) as Model_from FROM p_ichan_t.B2B_FITMENT_TEMP WHERE ftmnt_name ='Model' GROUP BY 1) t5
  ON t1.item_id = t5.item_id
  JOIN (SELECT item_id, max(FTMNT_VALUE_TEXT) as Model_to FROM p_ichan_t.B2B_FITMENT_TEMP WHERE ftmnt_name ='Model' GROUP BY 1) t6
  ON t1.item_id = t6.item_id;

-- 899546 
create table P_INVENTORYPLANNING_T.fitment_finder as 
select a.*, case when  a.item_id=b.item_id  then 'finder_completed' else 'other' end as Finder
from  p_ichan_t.FITMENT_Table  a
left join  P_INVENTORYPLANNING_T.fitment_guarantee b on a.item_id=b.item_id

select finder, count(*)  from  P_INVENTORYPLANNING_T.fitment_finder  group by 1 limit 100; 

select *  from  P_INVENTORYPLANNING_T.fitment_finder where finder ='finder_completed' limit 100; 

--- summary 
 drop table if exists P_INVENTORYPLANNING_T.fitment_finder_vehicle; -- select distinct retail_year , retail_week from  P_INVENTORYPLANNING_T.fitment_finder_vehicle
 create table P_INVENTORYPLANNING_T.fitment_finder_vehicle as(
	SELECT	Retail_year,
	retail_week, 
	CREATED_DT

	,CK.ITEM_ID
	,ck.TRANSACTION_ID
	,auct_titl

		, Year_from
		,Year_to
		,Make_from
		,Make_to
		,Model_from
		,Model_to
		,finder
        , case when CNDTN_ROLLUP_ID = 1 then 'New' when   CNDTN_ROLLUP_ID = 3 then 'Used'  when   CNDTN_ROLLUP_ID = 2 then 'Refurb' else  'Other'  end as Condition
		  ,gmv_plan_usd as GMV_usd
			  --   ,              SUM(CAST(CK.QUANTITY AS DECIMAL(18,2))* CAST(CK.ITEM_PRICE AS DECIMAL(18,2))) AS GMV_local
				-- , count(distinct TRANSACTION_ID) transc_uniq
		, QUANTITY
	FROM   DW_CHECKOUT_TRANS ck -- SELECT * FROM   DW_CHECKOUT_TRANS  where seller_id= 45524941
			INNER JOIN   DW_LSTG_ITEM lst  ON CK.ITEM_ID=LST.ITEM_ID -- SELECT * FROM   DW_LSTG_ITEM WHERE AUCT_END_DATE >='2023-10-01' LIMIT 100;
			INNER JOIN ( select distinct  *  from  P_INVENTORYPLANNING_T.fitment_finder /*where finder ='finder_completed'*/ ) FIT ON CK.ITEM_ID =FIT.ITEM_ID 
		
			INNER JOIN ( select CURNCY_PLAN_RATE,CURNCY_ID from  ACCESS_VIEWS.SSA_CURNCY_PLAN_RATE_DIM group by 1,2)AS SSA
				ON SSA.CURNCY_ID = CK.LSTG_CURNCY_ID
			INNER JOIN ACCESS_VIEWS.DW_CAL_DT CAL ON CAL.CAL_DT = CK.gmv_DT   and retail_year >=2021   --change here for time period if needed
			
			 INNER JOIN ( select meta_categ_id, CATEG_LVL2_ID, categ_lvl2_name, categ_lvl3_name, categ_lvl3_id,categ_lvl4_name, categ_lvl4_id,categ_lvl5_name, categ_lvl5_id,  LEAF_CATEG_ID,SITE_ID,
			 BSNS_VRTCL_NAME  ,SAP_CATEGORY_ID,
					
case when categ_lvl2_id in (20710, 69197, 185066) then 'Electronics' 
when meta_categ_id in (26395) then 'Lifestyle'
when categ_lvl2_id in (386, 238, 1202, 49019, 183446, 80546, 222, 11731, 1082, 767, 233, 2613, 1188, 1039, 11743, 19169, 2562, 2616, 436, 14737, 2631, 2624, 717, 16486, 61573,64808,92074, 246) then 'Home & Garden'
when categ_lvl3_id in (35000, 98989) then 'Home & Garden'
when categ_lvl3_id in (3244) then 'Parts & Accessories'
when categ_lvl3_id in (124982, 259225,180969, 260509) then 'Business & Industrial'
when categ_lvl2_id in (46576) then 'Parts & Accessories'
else bsns_vrtcl_name end as new_vertical
		from DW_CATEGORY_GROUPINGS where SAP_CATEGORY_ID NOT IN (5,7,41,23,-999)  group by 1,2,3,4,5,6,7,8 ,9,10,11,12,13,14)  AS CAT ON CAT.LEAF_CATEG_ID = ck.LEAF_CATEG_ID AND CAT.SITE_ID in(3) 
		AND CAT.SAP_CATEGORY_ID NOT IN (5,7,41,23,-999)
			inner JOIN lstg_item_cndtn cond ON ck.item_id = cond.item_id  AND ck.auct_end_dt = cond.AUCT_END_DT
			left outer JOIN DW_USERs U ON U.USER_ID= ck.seller_id 
			INNER  JOIN 
				DW_USEGM_HIST HIST ON 
				HIST.USER_ID=ck.Seller_ID AND 
				HIST.USEGM_GRP_ID  = 48 AND
				HIST.USEGM_ID = 206 and
				CASE WHEN ck.CREATED_DT < '2009-10-11' THEN CAST('2009-10-11' AS DATE) ELSE ck.CREATED_DT END BETWEEN HIST.BEG_DATE AND HIST.END_DATE  
		WHERE 1=1
				and CK.SALE_TYPE NOT IN (10,15)
				--and ck.site_id = 3
				and ck.slr_cntry_id = 3
				and ck.BYR_CNTRY_ID=3
			
				and CREATED_DT >='2021-01-01'
				and  categ_lvl2_id in (6030)
				and new_vertical in('Parts & Accessories')
				and u.USER_DSGNTN_ID =2 
				and  CNDTN_ROLLUP_ID = 3
			
				and HIST.USEGM_ID = 206		
					) ;
				select * from P_INVENTORYPLANNING_T.fitment_finder_vehicle where finder <>'other' limit 1000; 

drop table    P_INVENTORYPLANNING_T.fitment_finder_vehicle_top ; 
create table 	  P_INVENTORYPLANNING_T.fitment_finder_vehicle_top as
	select retail_year, retail_week,
	finder,
		CONCAT(  Make_from,'_', Model_from ) as Make_Model,
		sum(GMV_usd) GMV,
		sum(Quantity) Quantity
		from  P_INVENTORYPLANNING_T.fitment_finder_vehicle 
		group by 1,2,3,4; 
		
		select sum( GMV_usd) GMV , sum(Quantity  )  Quantity from  P_INVENTORYPLANNING_T.fitment_finder_vehicle where    CREATED_DT between '2021-10-01' and '2021-12-31'; 
		select * from   P_INVENTORYPLANNING_T.fitment_finder_vehicle_top  order by  Quantity desc  ; 
		
drop table    P_INVENTORYPLANNING_T.fitment_finder_vehicle_top_match ; 
create table 	  P_INVENTORYPLANNING_T.fitment_finder_vehicle_top_match as
	select retail_year, retail_week,
	finder,
		CONCAT(  Make_from,'_', Model_from ) as Make_Model,
		sum(GMV_usd) GMV,
		sum(Quantity) Quantity
		from  P_INVENTORYPLANNING_T.fitment_finder_vehicle 
		where make_from =make_to and model_from =model_to
		group by 1,2,3,4; 
-- --==============================================================================================================================================
-- 2. RRp vs savings
select * from P_ICHAN_T.gp_job_2021 limit 1000; 



-- select * from P_ICHAN_T.gp_job_upload
Drop table  if exists P_ICHAN_T.gp_claims_2021 ;-- 35943
create table P_ICHAN_T.gp_claims_2021 as(
Select a.JobId,
a.DateCreated as Date,
a.username,
d.RepairerCompanyName as Repairer,
a.AudatexUUID,
a.AssessmentNumber,
a.Make ,
a.Model,
a.YearRegistered,
a.MonthRegistered,
a.Description,
a.PartNumber,
a.AmountExVat*1.2 as RRP,
a.Ordered,
case when a.Ordered='TRUE' then 1 else 0 end as Order_count,
a.SearchId,
a.EbayCategoryId,
a.Title,
a.ListingPrice,
a.ListingVAT,
a.ListingTotal,
a.ListingPostage,
a.ListingPostageMethod,
a.Seller,
--b.Spend,
--b.SellerAccount,
--b.SellerVATNumber,
--b.OnBehalfOf,
--b.CategoryId,
--b.CategoryName,
--b.Co2SavingInKg,
case when a.JobId <>'NULL'then 1 else 0 end as Parts_total,
case when SearchId <>'NULL' then 1 else 0 end as Parts_Matched,
case when Ordered ='TRUE' then 1 else 0 end as Parts_Ordered,
case when a.JobId <>'NULL'then AmountExVat*1.2 else 0 end as RRP_parts_request,
case when SearchId <>'NULL'then AmountExVat*1.2 else 0 end as RRP_parts_matched,
case when SearchId <>'NULL' then ListingVAT-ListingPostage else 0 end as Matched_Value,
case when SearchId <>'NULL' then AmountExVat*1.2-ListingVAT-ListingPostage else 0 end as Savings_Matched,
case when Ordered ='TRUE' then AmountExVat*1.2 else 0 end as RRP_of_parts_ordered,
case when Ordered ='TRUE' then ListingVAT+ListingPostage else 0 end as Value_Ordered,
case when Ordered ='TRUE' then AmountExVat*1.2-ListingVAT-ListingPostage else 0 end as Savings_ordered,
Year(a.DateCreated) as Report_year,
Month(a.DateCreated) as Report_month,
Day(a.DateCreated) as Report_day,
Retail_week as Cal_week,
Case when age_for_dt_id >=-28 then 'Last 28 days' else '' end as Report_week,
case  when SearchId = 'NULL' then 'Parts Not Matched'
		when SearchId <>'NULL' and Ordered='FALSE' then 'Order Opportunity'
		when Ordered='TRUE' then 'Parts Ordered' else 0 end as Opportunity_Flag,
case when year(a.DateCreated)=2021 and month(a.DateCreated)>=3 then 'Y' 
		when year(a.DateCreated)>=2022  then 'Y' 
		else 'N' end as report_y
from   P_ICHAN_T.gp_job_2021 a
--left join  P_ICHAN_T.gp_summary_upload b on a.AssessmentNumber=b.AssessmentNumber and a.Description=b.ItemTitle
inner join dw_cal_dt cal on  a.DateCreated=cal.cal_dt -- select distinct age_for_dt_id, cal_dt from dw_cal_dt where cal_dt ='2021-07-01' and '2021-09-01 order by 2 100
left join (select distinct  eBay_Seller_ID , RepairerCompanyName from P_ICHAN_T.gp_name_lookup)  d on d.eBay_Seller_ID=a.username -- select * from   P_ICHAN_T.gp_name_lookup
where age_for_dt_id <=-1
);

select * from  P_ICHAN_T.gp_claims_2021 limit 100  ; 
Select * from P_ICHAN_T.gp_claims_savings ;

Drop table if exists  P_ICHAN_T.gp_claims_savings ;-- 12762 
create table P_ICHAN_T.gp_claims_savings as(

select a.*,
case when savings_pc <= 0.3 then 'a.0-30'
when savings_pc >= 0.80 then 'g.80+' 
when savings_pc >= 0.70  then 'f.71-80'
when savings_pc >= 0.60  then 'e.61-70'
when savings_pc >= 0.50  then 'd.51-60'
when savings_pc >= 0.40  then 'c.41-50'
when savings_pc >= 0.30  then 'b.31-40'

else savings_pc end as savings_range
from (
Select Retail_Year,
Report_month,
Retail_week,
Make,
AssessmentNumber,
case when ck.Seller=x.seller_name then 'Y' else 'N' end as Certified_seller,
EbayCategoryId,
cata.categ_lvl3_name,
cat.categ_lvl4_name,
catb.categ_lvl5_name,
sum(Parts_Matched) as Parts_Matched,
sum(Parts_total) as Parts_total,
sum(RRP_parts_matched) as RRP_parts_matched,
sum(Savings_Matched) as Savings_Matched,
sum(Matched_Value) as Matched_Value,
sum(Savings_Matched)/sum(RRP_parts_matched) as Savings_pc
from P_ICHAN_T.gp_claims_2021 ck
INNER JOIN ACCESS_VIEWS.DW_CAL_DT CAL ON CAL.CAL_DT = CK.DATE  AND CAL.RETAIL_YEAR IN (2021,2022,2023,2024,2025)
LEFT JOIN  (select distinct seller_name from  P_ICHAN_T.recyclers_upload ) x on ck.Seller=x.seller_name
Left JOIN ( select distinct  categ_lvl3_name,categ_lvl3_id ,categ_lvl4_id ,categ_lvl4_name   ,categ_lvl5_id ,categ_lvl5_name  from DW_CATEGORY_GROUPINGS where site_id =3) CATa
						ON  CATa.categ_lvl3_id = ck.EbayCategoryId
Left JOIN ( select distinct  categ_lvl3_name,categ_lvl3_id ,categ_lvl4_id ,categ_lvl4_name   ,categ_lvl5_id ,categ_lvl5_name  from DW_CATEGORY_GROUPINGS where site_id =3) CAT
						ON CAT.categ_lvl4_id = ck.EbayCategoryId 
Left JOIN ( select distinct  categ_lvl3_name,categ_lvl3_id ,categ_lvl4_id ,categ_lvl4_name   ,categ_lvl5_id ,categ_lvl5_name  from DW_CATEGORY_GROUPINGS where site_id =3) CATb
						ON  CATb.categ_lvl5_id = ck.EbayCategoryId
group by 1,2,3,4,5,6,7,8,9,10
							)a);
							
	Select * from P_ICHAN_T.gp_claims_savings ;						

select distinct  categ_lvl2_id , categ_lvl2_name, categ_lvl3_name,categ_lvl3_id ,categ_lvl4_id ,categ_lvl4_name   ,categ_lvl5_id ,categ_lvl5_name 
from DW_CATEGORY_GROUPINGS where site_id =3 and  categ_lvl5_id  in ( 44240 ,174047,174046,65226,174050,44240)  
or categ_lvl4_id  in ( 44240 ,174047,174046,65226,174050,44240)
							or categ_lvl2_id   in ( 44240 ,174047,174046,65226,174050,44240)
							or  categ_lvl3_id  in ( 44240 ,174047,174046,65226,174050,44240) or  categ_lvl2_id  in ( 44240 ,174047,174046,65226,174050,44240)
	-- 41242 	