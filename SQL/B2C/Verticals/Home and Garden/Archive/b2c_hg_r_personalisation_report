/*Aim: Rebuild personalisation tracking metrics after new tag implemented by Product for personalsiation in Oct2021 and new tables created by Abhishek https://wiki.vip.corp.ebay.com/display/GSDA/Customization
*/
/*Explore datasets

--oms_line_item_id is unique
--Transaction level information for the order. A transaction can belong to multiple orders, oms_order_id, item_id, trans_id together identify a unique row
select * from access_views.dw_oms_line_item where trans_id=2832903378016

--Store tags information, which can indicate whether or not an item is eligible for personalisation
select * from access_views.dw_oms_order_tags

--2021-12-27 (Mon) (2 day lag) Ran on 2021-12-29 (UK Wednesday afternoon 17:30)
select max(src_cre_dt) from access_views.dw_oms_order_tags

--To get full Saturday data, code needs to be run on Monday 

--716 leaf categories with personalisation enabled
select * from p_akedia_t.customization_categories_exp where site_id=3

select * from p_akedia_t.customization_txn_base where item_id=264922793926--Personalised stocking

select * from p_akedia_t.customized_lstg_base where item_id=264922793926

--p_akedia_t.item_candidate_for_customization--Personalisation-related words in Listing Title / Item Condition Description / Item Description of listings that adopted the Personalize = Yes Aspect

--item_id=324689373853 “We have available all ring sizes. (4 to 16 US) Please mentioned your ring size when placing an order.”
select * from p_akedia_t.item_candidate_for_customization where cond_dtls_ind=1

--p_akedia_t.live_lstgs_offering_custom - Dataset maintained by Abhishek. Already aggregated on number of live listings per day, cannot derive weekly distinct live listings

-- Listings in Target Categories Covered by Customization
-- select cal_dt,site, sum(lstgs) from p_akedia_t.live_lstgs_offering_custom where cust_ind = 1 group by 1,2;

-- Share of Listings in Target Categories 
-- select cal_dt,site, sum(case when cust_ind = 1 then lstgs else 0 end) as num,sum(lstgs) as den from p_akedia_t.live_lstgs_offering_custom group by 1,2;

-- Share of Listings in Target Categories Covered by Customization which have seller instructions
-- select cal_dt,site,sum(case when cust_ind = 1 and seller_inst_ind = 1 then lstgs else 0 end) as num , sum(case when cust_ind = 1 then lstgs else 0 end) as den from p_akedia_t.live_lstgs_offering_custom group by 1,2;
*/

/********************Table too large to maintain long term********************/
/*
drop table if exists P_InventoryPlanning_T.personalised_tran;
create table P_InventoryPlanning_T.personalised_tran as (
select
a.item_id
,a.oms_line_item_id
,a.item_title_name
,a.trans_id
,b.coms_order_id
,a.src_cre_dt
from access_views.dw_oms_line_item a
inner join access_views.dw_oms_order_tags b
on a.oms_line_item_id = b.coms_line_item_id and a.oms_order_id = b.coms_order_id 
where 
b.coms_line_item_id is not null 
and b.tag_type = 'EBAY'--Specify certain style/type of orders
and b.tag_value = 'BX_ITEM_F_CUSTOMIZED'
and a.src_cre_dt >= '2021-10-17'--Dataset dw_oms_order_tags goes online on 2021-10-13, choose 17Oct as the first day of 2021 Week42
and a.item_site_id=3--Item's listing site ID
group by 1,2,3,4,5,6);


--QC check

--Only 5 trans_id with more than 1 row including trans_id=0 and trans_id=-1 (acceptable risk as ITEM_ID & TRANSACTION_ID together uniquely identify a row in dw_checkout_trans)
select trans_id, count(*) from P_InventoryPlanning_T.personalised_tran
group by 1
having count(*)>1
--3 different coms_order_id (coms_order_id: 40000787136333,60000787138925,70000787112347) and 3 different oms_line_item_id
select * from P_InventoryPlanning_T.personalised_tran where trans_id=1915342468020
--Only 1 row (item_id:304222989831, oms_extrnl_rfrnc_id: 06-07871-38925, auct_end_dt: 2021-11-15, seller_id: 166627259)
select * from access_views.dw_checkout_trans where transaction_id=1915342468020
*/


/*
--PT focused sellers require updating every quarter

select count(*),count(distinct seller_id) from P_UK_BC_T.personalisation_PT_focus;

--5 duplicates
select seller_id,count(*) from P_UK_BC_T.personalisation_PT_focus group by 1 having count(*)>1

select distinct (seller_id) from P_UK_BC_T.personalisation_PT_focus;
*/
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- All transactions of personalised items listed on the UK site from 2021-10-17, UK B2C seller and UK buyer
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
drop table if exists P_InventoryPlanning_T.personalised_tran_detail;
create table P_InventoryPlanning_T.personalised_tran_detail as (
select 
cal.age_for_rtl_week_id 
,cal.age_for_rtl_year_id
,cal.age_for_rtl_qtr_id
,cal.retail_week
,cal.retail_year
,concat('Q',cal.rtl_qtr_of_rtl_year_id) as retail_quarter
,ck.seller_id
,usr.user_slctd_id
,case when PT.seller_id is not null then 'ProTrader Focused Seller' else 'Not ProTrader Focused Seller' end as PT_focused_seller
,cat.vertical
,cat.meta_categ_name
,cat.meta_categ_id
,cat.categ_lvl2_name
,cat.categ_lvl2_id
,cat.categ_lvl3_name
,cat.categ_lvl3_id
,cat.leaf_categ_id
,cat.leaf_categ_name
,per.item_id
,lstg.auct_title
,lstg.item_price
,lstg.item_price_bucket
,sum(ck.quantity) as bi																										
,sum(cast(ck.quantity as decimal(18,2))* cast(ck.item_price as decimal(18,2))*cast(ssa.curncy_plan_rate as decimal(18,2))) as GMV	

from (
	--All transactions of personalised items listed on the UK site from 2021-10-17
	select
	a.item_id
	,a.oms_line_item_id
	,a.trans_id
	,b.coms_order_id
	,a.src_cre_dt
	from access_views.dw_oms_line_item a
	inner join access_views.dw_oms_order_tags b
	on a.oms_line_item_id = b.coms_line_item_id and a.oms_order_id = b.coms_order_id 
	where 
	b.coms_line_item_id is not null 
	and b.tag_type = 'EBAY'--Specify certain style/type of orders
	and b.tag_value = 'BX_ITEM_F_CUSTOMIZED'
	and a.src_cre_dt >= '2021-10-17'--Dataset dw_oms_order_tags goes online on 2021-10-13, choose 17Oct as the first day of 2021 Week42
	and a.item_site_id=3--Item's listing site ID
	group by 1,2,3,4,5
) per

inner join access_views.dw_checkout_trans ck
on per.trans_id=ck.transaction_id and per.item_id=ck.item_id

inner join (select curncy_plan_rate,curncy_id from access_views.ssa_curncy_plan_rate_dim group by 1,2)as ssa 																								
on ck.lstg_curncy_id = ssa.curncy_id     

inner join (
	select item_id
	,auct_title
	,coalesce(start_price_lstg_curncy_amt,bin_price_lstg_curncy_amt,rsrv_price_lstg_curncy_amt) as item_price
	,case when cast(item_price as decimal(18,2)) > 300.00 then 'Over £300' 
		  when cast(item_price as decimal(18,2)) >= 100.00 then '£100 - £300'
		  when cast(item_price as decimal(18,2)) >= 50.00 then '£50 - £100'
		  when cast(item_price as decimal(18,2)) >= 20.00 then '£20 - £50'
		  when cast(item_price as decimal(18,2)) >= 10.00 then '£10 - £20'
		  when cast(item_price as decimal(18,2)) >= 5.00 then '£5 - £10'
		  when cast(item_price as decimal(18,2)) between 0.01 and 4.99 then 'Under £5'
		  else 'N/A' end as item_price_bucket
	from prs_restricted_v.slng_lstg_super_fact_ext) lstg
on ck.item_id=lstg.item_id
	
inner join (
	select meta_categ_name,meta_categ_id,categ_lvl2_id,categ_lvl2_name,categ_lvl3_id,categ_lvl3_name,categ_lvl4_id,categ_lvl4_name,leaf_categ_id,leaf_categ_name,site_id
	,case when categ_lvl2_id in (20710, 69197, 185066) then 'Electronics' 
		  when meta_categ_id in (26395) then 'Lifestyle'
		  when categ_lvl3_id in (260325) then 'Lifestyle'
		  when categ_lvl2_id in (386, 238, 1202, 49019, 183446, 80546, 222, 11731, 1082, 767, 233, 2613, 1188, 1039, 11743, 19169, 2562, 2616, 436, 14737, 2631, 2624, 717, 16486, 61573,64808,92074, 246) then 'Home & Garden'
		  when categ_lvl3_id in (35000, 98989) then 'Home & Garden'
		  when categ_lvl3_id in (3244) then 'Parts & Accessories'
		  when categ_lvl3_id in (124982, 259225,180969, 260509) then 'Business & Industrial'
		  when categ_lvl2_id in (46576) then 'Parts & Accessories'
		  else bsns_vrtcl_name end as vertical 																
	from access_views.dw_category_groupings 
    group by 1,2,3,4,5,6,7,8,9,10,11,12) as cat																
on ck.leaf_categ_id = cat.leaf_categ_id	and ck.site_id = cat.site_id and cat.site_id = 3	

inner join access_views.dw_cal_dt cal 
on ck.created_dt=cal.cal_dt 
and (cal.age_for_rtl_year_id between -2 and 0) and cal.age_for_rtl_week_id <= -1

inner join ( 
	select usegm_grp_id,usegm_id,end_date,user_id,beg_date from access_views.dw_usegm_hist 
	where usegm_grp_id = 48 																						
	and usegm_id = 206 --B2C seller only																									
	and end_date >= '2015-12-30' group by 1,2,3,4,5)as hist 																						
on ck.seller_id=hist.user_id and ck.created_dt between hist.beg_date and hist.end_date	
		
inner join access_views.dw_users as usr																			
on ck.seller_id = usr.user_id	

left join (select distinct seller_id from P_UK_BC_T.personalisation_PT_focus) as PT
on ck.seller_id=PT.seller_id

where 
ck.slr_cntry_id = 3 --UK sellers	
and ck.byr_cntry_id = 3--UK buyers
and ck.rprtd_wacko_yn = 'N'																										
and ck.auct_end_dt >= '2018-12-01'	
group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22
);	

/*
--QC check

--Personalised stocking example
select * from P_InventoryPlanning_T.personalised_tran where item_id=264922793926 and trans_id=2827944910016
select * from P_InventoryPlanning_T.personalised_tran_detail where item_id=264922793926 order by age_for_rtl_week_id desc
*/


/*
--Check if any items flagged as personalisation transactions but not part of Abhishek's listing base
--1937 (1.87%) out of 103,757 items (at least 1 transaction flagged as personalisation transaction) are not in Abhishek's listing base, spot checks show these listings not to be related to personalisation
select count(*)from 
(
select a.*
from
	(select * from P_InventoryPlanning_T.personalised_tran_detail
	qualify (row_number() over (partition by item_id order by item_id))=1)a
left join p_akedia_t.customized_lstg_base b
on a.item_id=b.item_id
where b.item_id is null 
)

--Explore further with 1 item flagged to have a personalsiation transaction
--Only 1 out of ~4500 transactions of this item is flagged as personalisation transaction (trans_id: 1172887565021)
select * from access_views.dw_oms_line_item a
inner join access_views.dw_oms_order_tags b
on a.oms_line_item_id = b.coms_line_item_id and a.oms_order_id = b.coms_order_id 
where a.item_id=313556529920
*/

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Transactions flagged as Personalisation-related but not listings that had set the Personalize Aspect = Yes (for investigation and product improvement)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
/*
drop table if exists P_InventoryPlanning_T.personalised_tran_not_in_base;
create table P_InventoryPlanning_T.personalised_tran_not_in_base as (
select a.*
from
	(select * from P_InventoryPlanning_T.personalised_tran_detail
	qualify (row_number() over (partition by item_id order by item_id))=1)a
left join p_akedia_t.customized_lstg_base b
on a.item_id=b.item_id
where b.item_id is null
); 
*/

/*
--QC check
--1937; 1937
select count(distinct item_id),count(*) from P_InventoryPlanning_T.personalised_tran_not_in_base

--16,339 candidate listings are not in the the base of all listings that had set the Personalize Aspect = Yes since Jan 1 2021
select count(*) from p_akedia_t.item_candidate_for_customization a
left join p_akedia_t.customized_lstg_base b
on a.item_id=b.item_id
where b.item_id is null
*/

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--All personalisation listing on UK site
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
drop table if exists P_InventoryPlanning_T.personalised_ll;
create table P_InventoryPlanning_T.personalised_ll as(
select
cal.age_for_rtl_week_id 
,cal.age_for_rtl_year_id
,cal.age_for_rtl_qtr_id
,cal.retail_week
,cal.retail_year
,concat('Q',cal.rtl_qtr_of_rtl_year_id) as retail_quarter
,ll.item_id
,ll.base_lstg
,ll.instruction_provided_lstg
,ll.converted_lstg
,ll.candidate_personalised_lstg
,lstg.auct_title
,lstg.auct_start_dt
,lstg.auct_end_dt
,lstg.slr_id
,u.user_slctd_id
,case when PT.seller_id is not null then 'ProTrader Focused Seller' else 'Not ProTrader Focused Seller' end as PT_focused_seller
,coalesce(lstg.start_price_lstg_curncy_amt,lstg.bin_price_lstg_curncy_amt,lstg.rsrv_price_lstg_curncy_amt) as item_price
,case when cast(item_price as decimal(18,2)) > 300.00 then 'Over £300' 
	  when cast(item_price as decimal(18,2)) >= 100.00 then '£100 - £300'
	  when cast(item_price as decimal(18,2)) >= 50.00 then '£50 - £100'
	  when cast(item_price as decimal(18,2)) >= 20.00 then '£20 - £50'
	  when cast(item_price as decimal(18,2)) >= 10.00 then '£10 - £20'
	  when cast(item_price as decimal(18,2)) >= 5.00 then '£5 - £10'
	  when cast(item_price as decimal(18,2)) between 0.01 and 4.99 then 'Under £5'
	  else 'N/A' end as item_price_bucket
,cat.vertical
,cat.meta_categ_id
,cat.meta_categ_name
,cat.categ_lvl2_name
,cat.categ_lvl2_id
,cat.categ_lvl3_name
,cat.categ_lvl3_id
,cat.leaf_categ_name
,cat.leaf_categ_id

from prs_restricted_v.slng_lstg_super_fact_ext lstg

inner join access_views.dw_users u 
on lstg.slr_id = u.user_id and u.user_dsgntn_id=2--Business sellers	

inner join (
	select meta_categ_name,meta_categ_id,categ_lvl2_id,categ_lvl2_name,categ_lvl3_id,categ_lvl3_name,categ_lvl4_id,categ_lvl4_name,leaf_categ_id,leaf_categ_name,site_id
	,case when categ_lvl2_id in (20710, 69197, 185066) then 'Electronics' 
		  when meta_categ_id in (26395) then 'Lifestyle'
		  when categ_lvl3_id in (260325) then 'Lifestyle'
		  when categ_lvl2_id in (386, 238, 1202, 49019, 183446, 80546, 222, 11731, 1082, 767, 233, 2613, 1188, 1039, 11743, 19169, 2562, 2616, 436, 14737, 2631, 2624, 717, 16486, 61573,64808,92074, 246) then 'Home & Garden'
		  when categ_lvl3_id in (35000, 98989) then 'Home & Garden'
		  when categ_lvl3_id in (3244) then 'Parts & Accessories'
		  when categ_lvl3_id in (124982, 259225,180969, 260509) then 'Business & Industrial'
		  when categ_lvl2_id in (46576) then 'Parts & Accessories'
		  else bsns_vrtcl_name end as vertical 																
	from access_views.dw_category_groupings 
    group by 1,2,3,4,5,6,7,8,9,10,11,12) as cat																
on lstg.leaf_categ_id = cat.leaf_categ_id and cat.site_id = 3	

inner join
	(
	select 
	item_id
	,max(lstg_base) as base_lstg
	,max(instruction) as instruction_provided_lstg
	,max(converted) as converted_lstg
	,min(candidate_personlised) as candidate_personalised_lstg
	from
	(
	select
	item_id
	,0 as candidate_personlised
	,custom_instructions_yn as instruction--if 1 then seller had provided instructions in the listing
	,1 as lstg_base
	,-999 as converted
	from p_akedia_t.customized_lstg_base
	where 
	focus_cat_ind = 1
	and new_aspect_avail = 1
	and new_aspect_set_y_n = 1

	union all

	--Listings that are opportunities
	select 
	item_id 
	,1 as candidate_personlised
	,-999 as intruction
	,-999 as lstg_base
	,-999 as converted
	from p_akedia_t.item_candidate_for_customization

	union all

	--Listings captured in the OMS transactions
	select 
	distinct(item_id) as item_id
	,0 as candidate_personlised
	,-999 as intruction
	,-999 as lstg_base
	,1 as converted
	from P_InventoryPlanning_T.personalised_tran_detail
	)
	group by 1) ll
on lstg.item_id=ll.item_id

inner join dw_cal_dt cal 
on (lstg.auct_start_dt < cal.cal_dt and lstg.auct_end_dt >= cal.cal_dt)
and (cal.age_for_rtl_year_id between -2 and 0) and cal.age_for_rtl_week_id <= -1

left join (select distinct seller_id from P_UK_BC_T.personalisation_PT_focus) as PT
on lstg.slr_id=PT.seller_id

where lstg.lstg_site_id=3
and cal.week_beg_date>='2021-10-17'--starts tracking from 2021 Wk42 onwards (aligns with OMS data available time)
group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28
);

/*
--QC check
--949,765; 7,240,834
select count(distinct item_id),count(*) from P_InventoryPlanning_T.personalised_ll
--Personalised stocking example
select * from P_InventoryPlanning_T.personalised_ll where item_id=264922793926 order by age_for_rtl_week_id desc

--65% of listings are personalisation listings flagged using OMS transaction method or Personalise aspect, 35% are possible opportunities (adopted the Personalize = Yes Aspect) with Personalisation-related words in Listing Title / Item Condition Description / Item Description 
select candidate_personalised_lstg,count(distinct item_id)
,round(100*(count(distinct item_id) / sum(count(distinct item_id)) over()),2) from P_InventoryPlanning_T.personalised_ll group by 1

--0 row where candidate listing is converted or has valid entry for the instruction provided field
select * from P_InventoryPlanning_T.personalised_ll where candidate_personalised_lstg=1
and (converted_lstg <> -999 or instruction_provided_lstg <> -999)

-- -10 (2021 RW42)
select min(age_for_rtl_week_id) from P_InventoryPlanning_T.personalised_ll
select distinct retail_year,retail_week from P_InventoryPlanning_T.personalised_ll where age_for_rtl_week_id=-10
*/

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--Excel reporting
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

--WoW Summary
drop table if exists P_InventoryPlanning_T.personalised_tran_summary;
create table P_InventoryPlanning_T.personalised_tran_summary as (
select
a.*
,b.GMV_LW
,b.BI_LW
,b.Converted_Lstg_LW
,b.Seller_LW
from 

--LW
	(select 
	retail_year
	,retail_week
	,retail_quarter
	,age_for_rtl_week_id
	,age_for_rtl_year_id
	,age_for_rtl_qtr_id
	,PT_focused_seller
	,sum(GMV) as GMV
	,sum(BI) as BI
	,count(distinct(item_id)) as Converted_Lstg
	,count(distinct(seller_id)) as Seller
	from 
	P_InventoryPlanning_T.personalised_tran_detail 
	group by 1,2,3,4,5,6,7
	) a

--LLW
left join (
	select
	retail_year
	,retail_week
	,retail_quarter
	,age_for_rtl_week_id
	,age_for_rtl_year_id
	,age_for_rtl_qtr_id
	,PT_focused_seller
	,sum(GMV) as GMV_LW
	,sum(BI) as BI_LW
	,count(distinct item_id) as Converted_Lstg_LW
	,count(distinct seller_id) as Seller_LW
	from 
	P_InventoryPlanning_T.personalised_tran_detail 
	group by 1,2,3,4,5,6,7) b
on a.age_for_rtl_week_id = b.age_for_rtl_week_id +1 and a.PT_focused_seller=b.PT_focused_seller
);

--WoW Seller

drop table if exists P_InventoryPlanning_T.personalised_tran_seller;
create table P_InventoryPlanning_T.personalised_tran_seller as (
select
a.*
,b.GMV_LW
,b.BI_LW
,b.Converted_Lstg_LW
from 

--LW
	(select 
	user_slctd_id
	,seller_id
	,retail_year
	,retail_week
	,age_for_rtl_week_id
	,PT_focused_seller
	,sum(GMV) as GMV
	,sum(BI) as BI
	,count(distinct item_id) as Converted_Lstg
	from 
	P_InventoryPlanning_T.personalised_tran_detail 
	group by 1,2,3,4,5,6
	) a

--LLW
left join (
	select
	user_slctd_id
	,seller_id
	,retail_year
	,retail_week
	,age_for_rtl_week_id
	,PT_focused_seller
	,sum(GMV) as GMV_LW
	,sum(BI) as BI_LW
	,count(distinct item_id) as Converted_Lstg_LW
	from 
	P_InventoryPlanning_T.personalised_tran_detail 
	group by 1,2,3,4,5,6) b
on a.seller_id = b.seller_id
and a.age_for_rtl_week_id = b.age_for_rtl_week_id +1 and a.PT_focused_seller=b.PT_focused_seller and a.seller_id=b.seller_id
);

--GMV_Cat, GMV_Seller
drop table if exists P_InventoryPlanning_T.personalised_tran_agg;
create table P_InventoryPlanning_T.personalised_tran_agg as (
select
age_for_rtl_week_id
,retail_year
,retail_week
,vertical
,categ_lvl2_name
,categ_lvl2_id
,categ_lvl3_name
,categ_lvl3_id
,leaf_categ_id
,leaf_categ_name
,PT_focused_seller
,item_price_bucket
,seller_id
,user_slctd_id
,seller_id as seller_id_2--created for using in filter/row in pivot table
,user_slctd_id as user_slctd_id_2--created for using in filter/row in pivot table
,sum(GMV) as GMV
,sum(BI) as BI
,sum(GMV) as GMV_2--created for calculating GMV % in pivot table driven by data model
,sum(BI) as BI_2--created for calculating GMV % in pivot table driven by data model
,count(distinct item_id) as Converted_Lstg
from P_InventoryPlanning_T.personalised_tran_detail 
group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16
);

--Top 100 listing per week

drop table if exists P_InventoryPlanning_T.personalised_tran_top100;
create table P_InventoryPlanning_T.personalised_tran_top100 as (
select
age_for_rtl_week_id
,retail_year
,retail_week
,user_slctd_id
,seller_id
,PT_focused_seller
,item_id	
,auct_title
,item_price_bucket
,sum(GMV) as GMV
,sum(BI) as BI
from P_InventoryPlanning_T.personalised_tran_detail 
group by 1,2,3,4,5,6,7,8,9
qualify (row_number() over (partition by retail_year,retail_week order by GMV desc))<=100
);


--Aggregated live listing by category
drop table if exists P_InventoryPlanning_T.personalised_ll_cat;
create table P_InventoryPlanning_T.personalised_ll_cat as(
select 
ll.* 
,conv.converted_ll
from (
	select 
	age_for_rtl_week_id
	,retail_year 
	,retail_week
	,PT_focused_seller
	,vertical
	,categ_lvl2_name
	,categ_lvl2_id
	,categ_lvl3_name
	,categ_lvl3_id
	,a.leaf_categ_id
	,leaf_categ_name
	,item_price_bucket
	,sum(case when base_lstg=1 and candidate_personalised_lstg=0 and instruction_provided_lstg=1 then 1 else 0 end) as personalised_instruction
	,sum(case when base_lstg=1 and candidate_personalised_lstg=0 and instruction_provided_lstg=0 then 1 else 0 end) as no_personalised_instruction
	,sum(case when base_lstg=1 and candidate_personalised_lstg=0 then 1 else 0 end) as personalised_base
	,sum(case when base_lstg=-999 and candidate_personalised_lstg=0 and converted_lstg=1 then 1 else 0 end) as oms_personalised
	,sum(case when candidate_personalised_lstg=1 and b.leaf_categ_id is not null then 1 else 0 end) as opportunity/*****2022-01-14: Confirmed with Harry to only include opportunities that are part of the enabled leaf categories*****/
	from P_InventoryPlanning_T.personalised_ll a
	left join p_akedia_t.customization_categories_exp b
	on a.leaf_categ_id=b.leaf_categ_id and b.site_id=3
	group by 1,2,3,4,5,6,7,8,9,10,11,12) ll

left join

	--converted listing
	(select 
	age_for_rtl_week_id
	,retail_year 
	,retail_week
	,PT_focused_seller
	,vertical
	,categ_lvl2_name
	,categ_lvl2_id
	,categ_lvl3_name
	,categ_lvl3_id
	,leaf_categ_id
	,leaf_categ_name
	,item_price_bucket
	,count(distinct item_id) as converted_ll
	from P_InventoryPlanning_T.personalised_tran_detail
	group by 1,2,3,4,5,6,7,8,9,10,11,12) conv
	
on 
ll.age_for_rtl_week_id = conv.age_for_rtl_week_id
and ll.PT_focused_seller = conv.PT_focused_seller
and ll.vertical = conv.vertical
and ll.categ_lvl2_name = conv.categ_lvl2_name
and ll.categ_lvl2_id = conv.categ_lvl2_id
and ll.categ_lvl3_name = conv.categ_lvl3_name
and ll.categ_lvl3_id = conv.categ_lvl3_id
and ll.leaf_categ_id = conv.leaf_categ_id
and ll.leaf_categ_name = conv.leaf_categ_name
and ll.item_price_bucket = conv.item_price_bucket
);

--Aggregated live listing by seller

drop table if exists P_InventoryPlanning_T.personalised_ll_seller;
create table P_InventoryPlanning_T.personalised_ll_seller as(
select 
ll.* 
,conv.converted_ll
from (
	select 
	age_for_rtl_week_id
	,retail_year 
	,retail_week
	,PT_focused_seller
	,item_price_bucket
	,slr_id
	,user_slctd_id
	,retail_year as retail_year_2--created for using in filter/row in pivot table
	,retail_week as retail_week_2--created for using in filter/row in pivot table
	,slr_id as seller_id_2--created for using in filter/row in pivot table
	,user_slctd_id as user_slctd_id_2--created for using in filter/row in pivot table
	,sum(case when base_lstg=1 and candidate_personalised_lstg=0 and instruction_provided_lstg=1 then 1 else 0 end) as personalised_instruction
	,sum(case when base_lstg=1 and candidate_personalised_lstg=0 and instruction_provided_lstg=0 then 1 else 0 end) as no_personalised_instruction
	,sum(case when base_lstg=1 and candidate_personalised_lstg=0 then 1 else 0 end) as personalised_base
	,sum(case when base_lstg=-999 and candidate_personalised_lstg=0 and converted_lstg=1 then 1 else 0 end) as oms_personalised
	,sum(case when candidate_personalised_lstg=1 and b.leaf_categ_id is not null then 1 else 0 end) as opportunity/*****2022-01-14: Confirmed with Harry to only include opportunities that are part of the enabled leaf categories*****/
	from P_InventoryPlanning_T.personalised_ll a
	left join p_akedia_t.customization_categories_exp b
	on a.leaf_categ_id=b.leaf_categ_id and b.site_id=3
	group by 1,2,3,4,5,6,7,8,9,10,11) ll

left join

	--converted listing
	(select 
	age_for_rtl_week_id
	,retail_year 
	,retail_week
	,PT_focused_seller
	,item_price_bucket
	,seller_id
	,user_slctd_id
	,retail_year as retail_year_2--created for using in filter/row in pivot table
	,retail_week as retail_week_2--created for using in filter/row in pivot table
	,seller_id as seller_id_2--created for using in filter/row in pivot table
	,user_slctd_id as user_slctd_id_2--created for using in filter/row in pivot table
	,count(distinct item_id) as converted_ll
	from P_InventoryPlanning_T.personalised_tran_detail
	group by 1,2,3,4,5,6,7,8,9,10,11) conv
	
on 
ll.age_for_rtl_week_id = conv.age_for_rtl_week_id
and ll.PT_focused_seller = conv.PT_focused_seller
and ll.item_price_bucket = conv.item_price_bucket
and ll.slr_id=conv.seller_id
);

--Seller of LL (Base + OMS Tagged + Possible) for scorecard tab in the report

drop table if exists P_InventoryPlanning_T.personalised_ll_slr_cnt;
create table P_InventoryPlanning_T.personalised_ll_slr_cnt as(
select 
age_for_rtl_week_id
,retail_year
,retail_week
,count(distinct item_id) as LL
,count(distinct slr_id) as slr_cnt
from (
	select *
	from P_InventoryPlanning_T.personalised_ll a
	left join p_akedia_t.customization_categories_exp b
	on a.leaf_categ_id=b.leaf_categ_id and b.site_id=3
	where (base_lstg=1 and candidate_personalised_lstg=0) or (base_lstg=-999 and candidate_personalised_lstg=0 and converted_lstg=1) or (candidate_personalised_lstg=1 and b.leaf_categ_id is not null))
group by 1,2,3);


/*QC Check

--0 >> all 3 categories are mutually exclusive
select count(*) from
(select 
item_id
,case when base_lstg=1 and candidate_personalised_lstg=0 and instruction_provided_lstg=1 then 1 else 0 end as personalised_instruction
,case when base_lstg=1 and candidate_personalised_lstg=0 and instruction_provided_lstg=0 then 1 else 0 end as no_personalised_instruction
,case when base_lstg=1 and candidate_personalised_lstg=0 then 1 else 0 end as personalised_base
,case when base_lstg=-999 and candidate_personalised_lstg=0 and converted_lstg=1 then 1 else 0 end as oms_personalised
,case when candidate_personalised_lstg=1 then 1 else 0 end as opportunity
from P_InventoryPlanning_T.personalised_ll)
where 
--personalised_base=1 and opportunity=1
--oms_personalised=1 and opportunity=1
personalised_base=1 and oms_personalised=1
*/


/*
Excel Reporting QC check

select sum(GMV),sum(BI),count(distinct item_id),count(distinct seller_id) from P_InventoryPlanning_T.personalised_tran_detail 
where age_for_rtl_week_id=-1;

select 
categ_lvl2_name
--leaf_categ_name
,sum(GMV)
,sum(BI)
from P_InventoryPlanning_T.personalised_tran_detail 
where age_for_rtl_week_id=-1
group by 1 order by 2 desc;

select count(distinct item_id),count(distinct seller_id)
from P_InventoryPlanning_T.personalised_tran_detail 
where age_for_rtl_week_id=-1 and categ_lvl2_id=16086;

select 
categ_lvl2_name
,sum(GMV)
,count(distinct item_id)
from P_InventoryPlanning_T.personalised_tran_detail 
where age_for_rtl_week_id=-1 and seller_id=52746374
group by 1;

select * from P_InventoryPlanning_T.personalised_tran_detail 
where item_id=124703374594 and age_for_rtl_week_id=-1;

select
sum(case when candidate_personalised_lstg=0 then 1 else 0 end) as tot_base_oms
from P_InventoryPlanning_T.personalised_ll
where age_for_rtl_week_id=-1;

select count(distinct item_id)
from P_InventoryPlanning_T.personalised_ll
where age_for_rtl_week_id=-1 and slr_id=52746374;

select count(distinct item_id)
from P_InventoryPlanning_T.personalised_tran_detail
where age_for_rtl_week_id=-1 and seller_id=52746374;

--For Wk47 2021, $1,305,057 GMV from new table (27% less); $1,789,505 from Izzy's dataset; $1,443,071 from Abhishek's transaction table (no restriction on UK domestic sellers and buyers)
--For Wk52 2021, $509,937 GMV from new table (28% less); $707,542 from Izzy's dataset; $ from Abhishek's transaction table (no restriction on UK domestic sellers and buyers)
select retail_week,sum(GMV) from P_InventoryPlanning_T.personalised_tran_detail 
where retail_year=2021 and retail_week in (47,52)
group by 1; 

select sum(GMB) from p_akedia_t.customization_txn_base 
where site="UK" 
and buyer_used_cust_ind=1--1: If the buyer when buying this item, provided the seller customization instructions
and (created_dt between '2021-11-21' and '2021-11-27'); 

select sum(GMB) from p_akedia_t.customization_txn_base 
where site="UK" 
and buyer_used_cust_ind=1--1: If the buyer when buying this item, provided the seller customization instructions
and (created_dt between '2021-12-26' and '2022-01-01'); 

--2021-12-31 (Ran on 2022-01-03, 1 day later than the OMS dataset
select max(created_dt) from p_akedia_t.customization_txn_base; 

--Izzy's
select retail_week,sum(GMV) from p_rharrus_t.personalised_leafgmv
where personalise_flag='Personalise'
and retail_year=2021 and retail_week in (47,52)
group by 1;

--For Wk47 2021, 717,758 LL from new table; 808,988 from Izzy's dataset (11% less) 
--For Wk52 2021, 748,522 LL from new table; 898,527 from Izzy's dataset (17% less)--Ran on 2022-01-03
select retail_week,count(distinct item_id) from P_InventoryPlanning_T.personalised_ll 
where retail_year=2021 and retail_week in (47,52)
group by 1;

select retail_week,sum(ll) from p_rharrus_t.personalised_leafll
where personalise_flag='Personalise'
and retail_week in (47,52)
group by 1; 
*/

/*
--Check if the entire day's data was loaded
--Ran on 2021-01-03 01:59 (2021-01-01 has 5647 items)
--Ran on 2021-01-06 10:45 (2021-01-01 has 5647 items)
select
a.src_cre_dt
,count(distinct a.item_id)
from access_views.dw_oms_line_item a
inner join access_views.dw_oms_order_tags b
on a.oms_line_item_id = b.coms_line_item_id and a.oms_order_id = b.coms_order_id 
where 
b.coms_line_item_id is not null 
and b.tag_type = 'EBAY'--Specify certain style/type of orders
and b.tag_value = 'BX_ITEM_F_CUSTOMIZED'
and a.src_cre_dt >= '2021-10-17'--Dataset dw_oms_order_tags goes online on 2021-10-13, choose 17Oct as the first day of 2021 Week42
and a.item_site_id=3--Item's listing site ID
group by 1 order by 1 desc
*/

/* Check if opportunity listing should be in the personalised base
select * from P_InventoryPlanning_T.personalised_ll where candidate_personalised_lstg=1
select * from p_akedia_t.customized_lstg_base where item_id=384381227087
*/


--Izzy for Alex H (Personalised Cats and Sellers.xlsx: Top categories) 
--Data seems to only cover 2019 and 2020 transactions of B2C UK sellers' listings that have "personalised" embedded in the listing title





