--UKPLAN-545
--Jira: 
--
--Author: Irene Chan
-- Requested by Ian Faulkner
--Task:  The subtitle revenue for the list of tyre sellers over the last 12 months.
-- Ojective: Data required for renewing tyre free subtitles fees contract
------------- ------------------------------------------------------------------------------------
-- 0. Upload list of tyre install sellers
Select * from P_InventoryPlanning_T.tyre_subtitle_fees_seller;
------------------------------------------------------------------------------------------------------------

    /*
    actn_code lookup
    ----------------
    1: Insertion Fee
    139: Store Fee
	140: Store Fee Credit
	198: Subtitle Fee
    245: CBT (International Listing) Fee
    305: Gallery Plus Fee
    409: Ad Fee Standard
    474: Ad Fee Advanced
    504: Final Value Fee (FvF)
    508: FvF Fixed Fee per Order
    526: Ad Fee Express
    */

--------------------------------------------------
-- 
-- 1. All Fees
Drop table  if exists  p_InventoryPlanning_t.b2c_pa_r_tyre_subtitles_revenues ;
create Table  p_InventoryPlanning_t.b2c_pa_r_tyre_subtitles_revenues as

    select
    distinct t1.user_id as seller_id                      -- Seller ID
    ,t3.user_slctd_id as seller_name                      -- Seller Name
    ,t1.item_id                                           -- Item ID (or Listing ID)
    ,t1.ck_trans_id                                       -- Transaction ID (this is 0 for Insertion Fee related rows)
    ,t1.acct_trans_id                                     -- Billing Fee Transaction ID of the Seller
    ,t1.acct_trans_date                                   -- Transaction timestamp
    ,t1.user_cntry_id                                     -- Country ID (3 for UK)
    ,t5.cntry_desc as user_cntry_name                     -- Country Name
	,t1.actn_code                                         -- Fee Action Code (This tells you the type of the fee, i.e., FvF, Fixed fee, Ad fee, etc.)
	,nvl(t2.actn_code_desc,'') as actn_code_desc          -- Fee Action Code description
    ,categ_lvl2_name
    ,categ_lvl3_name
    ,categ_lvl4_name
    ,case 
        when length(t1.blng_curncy_id) = 1 then '00'||t1.blng_curncy_id
        when length(t1.blng_curncy_id) = 2 then '0'||t1.blng_curncy_id
        else t1.blng_curncy_id
    end as export_blng_curncy_id                          -- Billing Currency ID of the Seller. This ID value gets padded with "0" as it is required for the file which should be exported and uploaded to the Oracle system (please see "https://wiki.corp.ebay.com/pages/viewpage.action?pageId=269519945#BulkCredit/DebitProcessSubmitterSteps-BCDFilePreparations" page for details)
	
    ,"O" as export_account_type                           -- This is required for the file which should be exported and uploaded to the Oracle system (please see "https://wiki.corp.ebay.com/pages/viewpage.action?pageId=269519945#BulkCredit/DebitProcessSubmitterSteps-BCDFilePreparations" page for details) 
	,t1.user_id||export_blng_curncy_id as export_external_id -- This is required for the file which should be exported and uploaded to the Oracle system (please see "https://wiki.corp.ebay.com/pages/viewpage.action?pageId=269519945#BulkCredit/DebitProcessSubmitterSteps-BCDFilePreparations" page for details)
	,"" as export_category                                -- This is required for the file which should be exported and uploaded to the Oracle system (please see "https://wiki.corp.ebay.com/pages/viewpage.action?pageId=269519945#BulkCredit/DebitProcessSubmitterSteps-BCDFilePreparations" page for details)
	,t4.iso_code as export_curr_id                        -- This is required for the file which should be exported and uploaded to the Oracle system (please see "https://wiki.corp.ebay.com/pages/viewpage.action?pageId=269519945#BulkCredit/DebitProcessSubmitterSteps-BCDFilePreparations" page for details)
	,t4.iso_code_name as blng_curncy_iso_name             -- Billing Currency ISO name (i.e. GBP, USD, EUR, et.)
	,cast(t1.amt_usd as decimal(18,4)) as amt_usd                   -- Charged Fee in USD currency
    ,cast(t1.amt_blng_curncy as decimal(18,4)) as amt_blng_curncy         -- Charged Fee in the Billing Currency of the Seller. If you need see the charged fee amount in Buyer's local currency, then use "trxn_curncy_amt" column
    ,t1.leaf_categ_id                                     -- Leaf Category ID. This can be joined to "DW_CATEGORY_GROUPINGS" table on "LEAF_CATEG_ID" column to get the category name details
    
    from dw_accounts_all 		as t1 --
    left join dw_action_codes 	as t2     on t1.actn_code = t2.actn_code
    left join dw_users 			as t3     on t1.user_id = t3.user_id
	left join dw_currencies 	as t4 	on t1.blng_curncy_id = t4.curncy_id
	left join dw_countries 		as t5 	on t1.user_cntry_id = t5.cntry_id
	INNER JOIN ( select meta_categ_id, meta_categ_name, CATEG_LVL2_ID, categ_lvl2_name, categ_lvl3_name, categ_lvl3_id,categ_lvl4_id, categ_lvl4_name,
		LEAF_CATEG_ID,SITE_ID,BSNS_VRTCL_NAME   from ACCESS_VIEWS.DW_CATEGORY_GROUPINGS)  AS CAT
        ON t1.LEAF_CATEG_ID = CAT.LEAF_CATEG_ID
       -- AND t1.SITE_ID = CAT.SITE_ID and t1.site_id=3
    
    where 1=1
    and t1.user_type = 'SELLER'
    and t3.user_slctd_id in (select distinct seller_name from p_InventoryPlanning_t.tyre_subtitle_fees_seller)           --Seller names are passed from "Seller Name for Seller Credit Calcualtion" zeta sheet to here
    and cast(t1.acct_trans_date as date) >= '2022-08-25'
    and t1.wacko_yn = 'N'
    and t1.amt_usd != 0
	--and t1.actn_code in (198)
	and cat.CATEG_LVL2_ID =6030
	and t5.cntry_id =3
	and cat.site_id=3
    and t1.actn_code in (1,  139, 140, 198, 245, 305, 409, 474, 504, 508, 526)
	;

---------------------------------------------------------------
--2. 	GMV from super fact table
Drop table if exists  p_InventoryPlanning_t.b2c_pa_r_tyre_subtitles_rev_gmv ;
create Table  p_InventoryPlanning_t.b2c_pa_r_tyre_subtitles_rev_gmv as

	 select
        t1.*
        ,cast(nvl(t2.item_price_amt, 0) as decimal(18,4)) as item_price_amt                           -- Item price amount
        ,nvl(t2.sold_qty, 0) as sold_qty                                                              -- Sold quantity (aggregated value per transaction id)
        ,cast(nvl(t2.gmv20_usd_amt, 0) as decimal(18,4)) as gmv20_usd_amt	                          -- GMV in USD (according to 2.0 definition and aggregared value, i.e. if the item price was $5, and if the buyer has bought 3 items on that transaction, then the GMV value is 3 x $5 = $15)
        ,cast(nvl(t2.gmv20_lstg_curncy_amt, 0) as decimal(18,4)) as gmv20_lstg_curncy_amt             -- GMV in the seller's listing currency (according to 2.0 definition and aggregated value). This is the FXed value of "gmv20_usd_amt" column
        
	from ( select distinct  seller_id ,  ck_trans_id , item_id from 	 p_InventoryPlanning_t.b2c_pa_r_tyre_subtitles_revenues )  t1
    left join prs_restricted_v.slng_trans_super_fact as t2
    on  t1.seller_id = t2.slr_id
	and t1.ck_trans_id = t2.ck_trans_id
	and t1.item_id = t2.item_id
	;
	
	
-- 3. summary GMV
Drop table if exists  p_InventoryPlanning_t.b2c_pa_r_tyre_subtitles_gmv_seller_lev ;
create Table  p_InventoryPlanning_t.b2c_pa_r_tyre_subtitles_gmv_seller_lev as
	select seller_id ,
	sum(item_price_amt ) 	as item_price_amt ,
sum(sold_qty ) 			as sold_qty ,
sum(gmv20_usd_amt) 		as gmv20_usd_amt ,
sum(gmv20_lstg_curncy_amt ) as gmv20_lstg_curncy_amt 
from  p_InventoryPlanning_t.b2c_pa_r_tyre_subtitles_rev_gmv
group by 1 ;


--3. final output for subtitle fees

drop table if exists   p_InventoryPlanning_t.b2c_pa_r_tyre_subtitles_rev_output  ;
create table p_InventoryPlanning_t.b2c_pa_r_tyre_subtitles_rev_output as 
Select 
Seller_id,
Seller_name,
actn_code,
actn_code_desc,
blng_curncy_iso_name
,categ_lvl2_name
    ,categ_lvl3_name
    ,categ_lvl4_name,
sum(amt_usd ) 			as amt_usd,
sum(amt_blng_curncy ) 	as amt_blng_curncy
 
from p_InventoryPlanning_t.b2c_pa_r_tyre_subtitles_revenues
where acct_trans_date between '2022-08-25' and '2023-08-25'
---and actn_code = 198
group by 1,2,3,4,5,6,7,8 ; 