
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- 2023 04 03
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1.	Please provide the data on the following, separately for calendar years 2021 and 2022:
1.	The overall volume and value of green parts listed for sale in the UK:
i.      on eBay’s B2B green parts platform; and
ii.     on eBay’s more general platform.
2.	Separately for each of the top 10 sellers (with the highest number of listings) the volume (number) of listings of green parts for sale in the UK:
i.      on eBay’s B2B green parts platform; and
ii.     on eBay’s more general platform.
 
Select * from  P_ICHAN_T.gp_gmv_cma_list ;


Drop table if exists   p_ichan_t.cma_gp_lls_item_2021 ;
create table  p_ichan_t.cma_gp_lls_item_2021 as 
(
select
distinct lst.ITEM_ID,
START_PRICE_LSTG_CURNCY,
lst.slr_id,
SITE_ID,
case when  USER_SLCTD_ID in ('hillsmotors','synetiq')  then 'N' 
 when c.start_date <='2021-12-31' then 'Y' else 'N' end as  gp_seller_2021,
 USER_SLCTD_ID  as Seller_name
from  DW_LSTG_ITEM lst --on ck.item_id=lst.item_id SELECT * FROM DW_LSTG_ITEM lst WHERE  slr_id =1002030249  and lst.AUCT_end_dt >= '2021-01-01'
left join ( select distinct  start_date, seller_id from  P_ICHAN_T.gp_gmv_cma_list)  c on lst.slr_id=c.seller_id-- select * from   P_ICHAN_T.recyclers_upload order by seller_id rank where seller_id =1077516705
INNER JOIN DW_CATEGORY_GROUPINGS CAT ON CAT.LEAF_CATEG_ID = lst.LEAF_CATEG_ID AND CAT.SITE_ID = lst.ITEM_SITE_ID and site_id =3
INNER JOIN  LSTG_ITEM_CNDTN COND ON COND.AUCT_END_DT = lst.AUCT_END_DT AND COND.ITEM_ID = lst.ITEM_ID  AND  COND.CNDTN_ROLLUP_ID =  3  /*THEN 'Used' */  
INNER JOIN (select CAL_DT,RETAIL_YEAR, Retail_week, AGE_FOR_RTL_WEEK_ID from DW_CAL_DT group by 1,2, 3, 4 ) CAL 		
ON Lst.AUCT_START_DT < CAL.CAL_DT AND Lst.AUCT_END_DT >= CAL.CAL_DT AND RETAIL_YEAR >= 2019 
left outer JOIN DW_USERs U ON U.USER_ID= lst.Slr_ID 
 INNER JOIN DW_USEGM_HIST AS HIST          ON HIST.USER_ID = lst.SLR_ID         AND HIST.USEGM_GRP_ID = 48       AND HIST.USEGM_ID = 206 
where lst.WACKO_YN = 'N'                      
AND lst.AUCT_TYPE_CODE NOT IN (10,15)
and lst.SLR_site_ID = 3 -- change country site id if needed 
and lst.ITEM_CNTRY_ID=3
and lst.SLR_CNTRY_ID =3
 and categ_lvl2_id in (6030)
 and  Lst.AUCT_START_DT < '2021-12-31' and  Lst.AUCT_END_DT >= '2021-01-01' 
 );
 -- select * from  p_ichan_t.cma_gp_lls_item_2021 limit 1000; 
 
 Drop table if exists   p_ichan_t.cma_gp_lls_item_min_2021 ;
create table  p_ichan_t.cma_gp_lls_item_min_2021 as 
(
 select 
 slr_id, 
 gp_seller_2021, 
 seller_name,
 item_id,
 min(START_PRICE_LSTG_CURNCY) as START_PRICE_LSTG_CURNCY
 from  p_ichan_t.cma_gp_lls_item_2021 
 group by 1,2,3,4 ); 
 
 
 select gp_seller_2021 ,
 count(distinct item_id) ll,
 sum(START_PRICE_LSTG_CURNCY ) as START_PRICE_LSTG_CURNCY
 from  p_ichan_t.cma_gp_lls_item_min_2021 
 group by 1;
 
 
  
 select 
 slr_id, 
 gp_seller_2021 ,
 seller_name, 
 count(distinct item_id) ll,
 sum(START_PRICE_LSTG_CURNCY ) as START_PRICE_LSTG_CURNCY
 from  p_ichan_t.cma_gp_lls_item_min_2021 
 where gp_seller_2021 ='Y'
 group by 1,2,3 
 order by 4 desc 
 limit 100;
 
  
 select 
 slr_id, 
 gp_seller_2021 ,
 seller_name, 
 count(distinct item_id) ll,
 sum(START_PRICE_LSTG_CURNCY ) as START_PRICE_LSTG_CURNCY
 from  p_ichan_t.cma_gp_lls_item_min_2021 
 group by 1,2,3 
 order by 4 desc 
 limit 100;
 
 
 --- 2022 -----------------
 

Drop table if exists   p_ichan_t.cma_gp_lls_item_2022 ;
create table  p_ichan_t.cma_gp_lls_item_2022 as 
(
select
distinct lst.ITEM_ID,
START_PRICE_LSTG_CURNCY,
lst.slr_id,
case when  USER_SLCTD_ID in ('hillsmotors','synetiq')  then 'N' 
 when c.start_date <='2022-12-31' then 'Y' else 'N' end as  gp_seller_2022,
 USER_SLCTD_ID  as Seller_name
from  DW_LSTG_ITEM lst --on ck.item_id=lst.item_id SELECT * FROM DW_LSTG_ITEM lst WHERE  slr_id =1077516705  and lst.AUCT_end_dt >= CURRENT_DATE
left join ( select distinct  start_date, seller_id from  P_ICHAN_T.gp_gmv_cma_list)  c on lst.slr_id=c.seller_id-- select * from   P_ICHAN_T.recyclers_upload order by seller_id rank where seller_id =1077516705
INNER JOIN DW_CATEGORY_GROUPINGS CAT ON CAT.LEAF_CATEG_ID = lst.LEAF_CATEG_ID AND CAT.SITE_ID = lst.ITEM_SITE_ID and site_id =3
INNER JOIN  LSTG_ITEM_CNDTN COND ON COND.AUCT_END_DT = lst.AUCT_END_DT AND COND.ITEM_ID = lst.ITEM_ID  AND  COND.CNDTN_ROLLUP_ID =  3  /*THEN 'Used' */  
INNER JOIN (select CAL_DT,RETAIL_YEAR, Retail_week, AGE_FOR_RTL_WEEK_ID from DW_CAL_DT group by 1,2, 3, 4 ) CAL 		ON Lst.AUCT_START_DT < CAL.CAL_DT AND Lst.AUCT_END_DT >= CAL.CAL_DT AND RETAIL_YEAR >= 2019 
left outer JOIN DW_USERs U ON U.USER_ID= lst.Slr_ID 
 INNER JOIN DW_USEGM_HIST AS HIST          ON HIST.USER_ID = lst.SLR_ID         AND HIST.USEGM_GRP_ID = 48       AND HIST.USEGM_ID = 206 
where lst.WACKO_YN = 'N'                      
AND lst.AUCT_TYPE_CODE NOT IN (10,15)
and lst.SLR_site_ID = 3 -- change country site id if needed 
and lst.ITEM_CNTRY_ID=3
and lst.SLR_CNTRY_ID =3
 and categ_lvl2_id in (6030)
 and  Lst.AUCT_START_DT < '2022-12-31' and  Lst.AUCT_END_DT >= '2022-01-01' 
 );
 
-- select * from  p_ichan_t.cma_gp_lls_item_2022 limit 1000; 
 
 Drop table if exists   p_ichan_t.cma_gp_lls_item_min_2022 ;
create table  p_ichan_t.cma_gp_lls_item_min_2022 as 
(
 select 
 slr_id, 
 gp_seller_2022, 
 seller_name,
 item_id,
 min(START_PRICE_LSTG_CURNCY) as START_PRICE_LSTG_CURNCY
 from  p_ichan_t.cma_gp_lls_item_2022
 group by 1,2,3,4 ); 
 
 
 select gp_seller_2022 ,
 count(distinct item_id) ll,
 sum(START_PRICE_LSTG_CURNCY ) as START_PRICE_LSTG_CURNCY
 from  p_ichan_t.cma_gp_lls_item_min_2022
 group by 1;
 
 
  
 select 
 slr_id, 
 gp_seller_2022 ,
 seller_name, 
 count(distinct item_id) ll,
 sum(START_PRICE_LSTG_CURNCY ) as START_PRICE_LSTG_CURNCY
 from  p_ichan_t.cma_gp_lls_item_min_2022 
 where gp_seller_2022 ='Y'
 group by 1,2,3 
 order by 4 desc 
 limit 100;
 
  
 select 
 slr_id, 
 gp_seller_2022 ,
 seller_name, 
 count(distinct item_id) ll,
 sum(START_PRICE_LSTG_CURNCY ) as START_PRICE_LSTG_CURNCY
 from  p_ichan_t.cma_gp_lls_item_min_2022
 group by 1,2,3 
 order by 4 desc 
 limit 100;
 