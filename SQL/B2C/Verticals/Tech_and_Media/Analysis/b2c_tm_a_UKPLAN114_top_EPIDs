/*
Identify the top 2000 EPIDs for Tech over the last 90 days for some price matching work with DCP Live.
*/

--2022-10-19 to 2023-01-16 (total of 90 days)
select cal_date from access_views.dw_cal_dt
where cal_date between current_date()  - 91 and current_date()  - 2
order by 1;

create table p_uk_bc_t.tech_epid as (
select
ck.item_id
,ck.item_vrtn_id
,coalesce(eps.prod_ref_id,epms.prod_ref_id) as EPID
,epn.prod_title as EPID_name
,lstg.auct_start_dt
,lstg.auct_end_dt
,cndtn.item_cndtn_id
,case when cndtn.item_cndtn_id = 1000 then 'New'
	  when cndtn.item_cndtn_id = 1500 then 'New - Other'
	  when cndtn.item_cndtn_id = 1750 then 'New - With defects'
	  
	  when cndtn.item_cndtn_id = 2000 then 'Refurb - Certified' 
	  
	  when cndtn.item_cndtn_id = 2010 then 'Refurb - Excellent'
	  when cndtn.item_cndtn_id = 2020 then 'Refurb - Very Good'
	  when cndtn.item_cndtn_id = 2030 then 'Refurb - Good'
	  when cndtn.item_cndtn_id = 2500 then 'Refurb - Seller' 
	  	  
	  when cndtn.item_cndtn_id = 3000 then 'Used'
	  when cndtn.item_cndtn_id = 4000 then 'Used - Very Good'
	  when cndtn.item_cndtn_id = 5000 then 'Used - Good'
	  when cndtn.item_cndtn_id = 6000 then 'Used - Acceptable'
	  when cndtn.item_cndtn_id = 7000 then 'Used - For parts / not working'
	  else 'Other'
	  end as item_condition
	  
,sum(ck.GMV_plan_usd) as tot_GMV
,sum(ck.quantity) AS tot_SI

from access_views.dw_checkout_trans ck 

inner join access_views.dw_lstg_item lstg
on ck.item_id=lstg.item_id

inner join (select bsns_vrtcl_name as original_vertical, meta_categ_id, meta_categ_name,categ_lvl2_id, categ_lvl2_name, categ_lvl3_id, categ_lvl3_name, categ_lvl4_id, categ_lvl4_name, leaf_categ_id, site_id,
			case when categ_lvl2_id in (20710, 69197, 185066) then 'Electronics' 
			when meta_categ_id in (26395) then 'Lifestyle'
			when categ_lvl3_id in (260325) then 'Lifestyle'
			when categ_lvl2_id in (386, 238, 1202, 49019, 183446, 80546, 222, 11731, 1082, 767, 233, 2613, 1188, 1039, 11743, 19169, 2562, 2616, 436, 14737, 2631, 2624, 717, 16486, 61573, 246) then 'Home & Garden'
			when categ_lvl3_id in (35000, 98989) then 'Home & Garden'
			when categ_lvl3_id in (3244) then 'Parts & Accessories'
			when categ_lvl3_id in (124982, 259225,180969, 260509) then 'Business & Industrial'
			when categ_lvl2_id in (46576) then 'Parts & Accessories'
			when categ_lvl2_id in (63, 29223) then 'Collectibles'
			else bsns_vrtcl_name end as vertical from access_views.dw_category_groupings 
			where sap_category_id not in (5,7,23,41,-999)--exclude non-core categories (Cars & Trucks [5], Motorcycles [7], Real Estate [23], Other Vehicles [41], Unknown [-999])
			group by 1,2,3,4,5,6,7,8,9,10,11,12) cat
on lstg.leaf_categ_id = cat.leaf_categ_id and cat.site_id=3

inner join access_views.dw_cal_dt as cal 
on cal.cal_dt = ck.GMV_dt 
and ck.GMV_dt between current_date()  - 91 and current_date()  - 2
and ck.auct_end_dt >= current_date()  - 100

inner join ( 
	select usegm_grp_id,usegm_id,end_date,user_id,beg_date from access_views.dw_usegm_hist 
	where usegm_grp_id = 48 																						
	and usegm_id = 206 --B2C seller only																									
	and end_date >= '2015-12-30' group by 1,2,3,4,5)as hist 																						
on hist.user_id = ck.seller_id	and ck.GMV_dt between hist.beg_date and hist.end_date	

left join (select item_id, cndtn_rollup_id, item_cndtn_id from access_views.lstg_item_cndtn group by 1,2,3) cndtn
on lstg.item_id = cndtn.item_id

left join access_views.ctlg_item_fact eps
on ck.item_id=eps.item_id

left join access_views.ctlg_vrtn_fact epms
on ck.item_id=epms.item_id and ck.item_vrtn_id=epms.item_vrtn_id

left join access_views.ctlg_prod_fact epn
on coalesce(eps.prod_ref_id,epms.prod_ref_id)=epn.prod_ref_id

where 
cat.vertical='Electronics'
and ck.slr_cntry_id = 3 --UK sellers
and ck.byr_cntry_id = 3 --UK buyers
and ck.slr_cntry_id = ck.byr_cntry_id --DOM
and ck.rprtd_wacko_yn = 'N'
and lstg.auct_type_code not in (10,15)
and lstg.item_site_id = 3
group by 1,2,3,4,5,6,7,8
);

--2,074,295, 2,074,295
select count(*),count(distinct item_id||item_vrtn_id) from p_uk_bc_t.tech_epid;

--Export data to Excel 
--Top 2000 EPID
select 
EPID
,EPID_name 
,sum(tot_GMV) as GMV
from p_uk_bc_t.tech_epid
where EPID is not null
group by 1,2
qualify (row_number() over (order by GMV desc))<=2000;

--Top 2000 EPID + Condition
select 
EPID
,EPID_name 
,item_condition
,sum(tot_GMV) as GMV
from p_uk_bc_t.tech_epid
where EPID is not null
group by 1,2,3
qualify (row_number() over (order by GMV desc))<=2000;

--Top 2000 SKU
select 
item_id
,item_vrtn_id
,EPID
,EPID_name
,auct_start_dt as listing_start_date
,auct_end_dt as listing_end_date
,item_condition
,sum(tot_GMV) as GMV
from p_uk_bc_t.tech_epid
group by 1,2,3,4,5,6,7
qualify (row_number() over (order by GMV desc))<=2000;