drop table if exists P_ROBEVANS_T.inr_report;

Create table P_ROBEVANS_T.inr_report as
(
SELECT 
INR_CM.EVAL_MONTH,
	INR_CM.SLR_ID,  
	U.USER_CNTRY_ID,
	INR_CM.SLR_NAME AS SLR_NAME,
	INR_CM.CBT,
		CASE WHEN U.USER_CNTRY_ID = 3 THEN 'UK' 
		WHEN U.USER_CNTRY_ID IN (45, 92, 196) THEN 'GC'
		WHEN U.USER_CNTRY_ID IN (0,1) THEN 'US'
		WHEN U.USER_CNTRY_ID IN (77) THEN 'DE'
		WHEN U.USER_CNTRY_ID IN (71) THEN 'FR'
		WHEN U.USER_CNTRY_ID IN (101) THEN 'IT'
		WHEN U.USER_CNTRY_ID IN (186) THEN 'ES'
		WHEN U.USER_CNTRY_ID IN (95) THEN 'IN'
	ELSE 'OTHER' END AS SLR_COUNTRY,
	CASE WHEN SPS_SLR_LEVEL_CD = 1 THEN 'ETRS'
		WHEN SPS_SLR_LEVEL_CD = 2 THEN 'ABOVE STD'
		WHEN SPS_SLR_LEVEL_CD = 3 THEN 'STANDARD'
		WHEN SPS_SLR_LEVEL_CD = 4 THEN 'BELOW STD'
	ELSE 'NON-UK' END AS SLR_STD_UK,
	case when INR_LM.INR_RATE >= 2 then 'repeat month' else 'first month' end as flag_status,
	INR_CM.ASP_TRANCHE, INR_CM.EDD_BUCKET, INR_CM.EVAL_PERIOD,
	INR_CM.INR_QUART_VALUE_FINAL AS INR_RATING, INR_CM.INR_COUNT, INR_CM.TXN_COUNT, INR_CM.INR_RATE, focused_flag, initiative_name
FROM (
SELECT 
eval_month,
	INR.SLR_ID, INR.USER_SLCTD_ID AS SLR_NAME, CBT,
	ASP_TRANCHE, EDD_BUCKET, EVAL_PERIOD, INR_QUART_VALUE_FINAL,
	INRS AS INR_COUNT, TRANS_CNT AS TXN_COUNT, INR_RATE
FROM P_IAC_TRUST_V.OUTLIER_PRD_DATA_INR INR
inner join (select seller_id from P_awang_ops_t.uk_managed_sellers_all group by 1) sellera
on INR.slr_id = sellera.seller_id
WHERE 1=1
	and eval_month IN (select max (eval_month) from P_IAC_TRUST_V.OUTLIER_PRD_DATA_INR)					/* CHANGE EVAL PERIOD ACCORDINGLY */
 	AND LSTG_SITE = 'UK'
	AND INR_QUART_VALUE_FINAL IN ('VERY HIGH')
) INR_CM
INNER JOIN (
SELECT
	INR.SLR_ID, INR.USER_SLCTD_ID AS SLR_NAME, CBT,
	ASP_TRANCHE, EDD_BUCKET, EVAL_PERIOD, INR_QUART_VALUE_FINAL,
	INRS AS INR_COUNT, TRANS_CNT AS TXN_COUNT, INR_RATE
FROM P_IAC_TRUST_v.OUTLIER_PRD_DATA_INR INR
inner join (select seller_id from P_awang_ops_t.uk_managed_sellers_all group by 1) sellera
on INR.slr_id = sellera.seller_id
WHERE 1=1
	AND eval_month IN (select max (eval_month) from P_IAC_TRUST_V.OUTLIER_PRD_DATA_INR where eval_month not in (select max(eval_month) from P_IAC_TRUST_V.OUTLIER_PRD_DATA_INR ))				/* CHANGE EVAL PERIOD ACCORDINGLY */
 	AND LSTG_SITE = 'UK'
	AND INR_QUART_VALUE_FINAL IN ('VERY HIGH')
) INR_LM ON INR_LM.SLR_ID = INR_CM.SLR_ID AND INR_LM.CBT = INR_CM.CBT
INNER JOIN DW_USERS U ON U.USER_ID = INR_CM.SLR_ID
-- INNER JOIN DW_COUNTRIES CN ON U.USER_CNTRY_ID = CN.CNTRY_ID
LEFT JOIN PRS_RESTRICTED_V.SPS_LEVEL_METRIC_SUM SPS ON SPS.USER_ID = INR_CM.SLR_ID AND SPS_PRGRM_ID = 3 AND CURRENT_DATE BETWEEN SPS_SLR_LEVEL_SUM_START_DT AND SPS_SLR_LEVEL_SUM_END_DT
left join (select seller_id, focused_flag, initiative_name from P_awang_ops_t.uk_managed_sellers_all group by 1,2,3) sellera
on INR_CM.slr_id = sellera.seller_id
WHERE 1=1 
	--AND INR_CM.INR_RATE >=2 
	--AND U.USER_DSGNTN_ID = 2			-- B2C;
	-- BO INR code

/*
SELECT
	INR.SLR_ID, INR.USER_SLCTD_ID AS SLR_NAME, CBT,
	ASP_TRANCHE, EDD_BUCKET, EVAL_PERIOD, INR_QUART_VALUE_FINAL,
	INRS AS INR_COUNT, TRANS_CNT AS TXN_COUNT, INR_RATE
FROM P_IAC_TRUST_v.OUTLIER_PRD_DATA_INR INR
inner join (select seller_id, seller_name, seller_vertical, initiative_name from P_awang_ops_t.seller_ops_83 where seller_vertical = 'Electronics' group by 1,2,3,4 ) sellera
on INR.slr_id = sellera.seller_id
WHERE 1=1
 	AND LSTG_SITE = 'UK';
	
*/

)